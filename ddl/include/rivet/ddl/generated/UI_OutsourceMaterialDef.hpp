// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct MaterialAlpha; 

	struct RIVET_DDL_SHARED UI_OutsourceMaterialDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UI_OutsourceMaterialDef";
		constexpr static rivet::rivet_type_id type_id = 0x69b41e78;

		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view TemplatePath_type_name = "TemplatePath";
		constexpr static rivet::rivet_type_id TemplatePath_type_id = 0x8be88c69;
		constexpr static std::string_view AVMaterial_type_name = "AVMaterial";
		constexpr static rivet::rivet_type_id AVMaterial_type_id = 0xe73ba957;
		constexpr static std::string_view DoubleSided_type_name = "DoubleSided";
		constexpr static rivet::rivet_type_id DoubleSided_type_id = 0x3e799799;
		constexpr static std::string_view SortTriangles_type_name = "SortTriangles";
		constexpr static rivet::rivet_type_id SortTriangles_type_id = 0x38ec511c;
		constexpr static std::string_view AlphaProperties_type_name = "AlphaProperties";
		constexpr static rivet::rivet_type_id AlphaProperties_type_id = 0xa731268e;
		constexpr static std::string_view Textures_type_name = "Textures";
		constexpr static rivet::rivet_type_id Textures_type_id = 0x5f860466; 

		explicit UI_OutsourceMaterialDef() = default;
		explicit UI_OutsourceMaterialDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Name {};
		std::string_view TemplatePath {};
		std::string_view AVMaterial {};
		bool DoubleSided {};
		bool SortTriangles {};
		std::shared_ptr<rivet::ddl::generated::MaterialAlpha> AlphaProperties {};
		std::vector<std::string_view> Textures {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UI_OutsourceMaterialDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
