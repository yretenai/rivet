// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xee0945fb.hpp> 

namespace rivet::ddl::generated {
	struct ObjSysUnlockSequence;
	struct VehicleSpawnInfo;
	struct VehicleNodeParams;
	struct VehicleTypeListEntry; 

	struct RIVET_DDL_SHARED VehicleSetListEntry : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "VehicleSetListEntry";
		constexpr const static rivet::rivet_type_id type_id = 0x3f19ea5f;

		constexpr const static std::string_view SetName_type_name = "SetName";
		constexpr const static rivet::rivet_type_id SetName_type_id = 0xca38a032;
		constexpr const static std::string_view RequiredLightingModes_type_name = "RequiredLightingModes";
		constexpr const static rivet::rivet_type_id RequiredLightingModes_type_id = 0xe4bf6a4f;
		constexpr const static std::string_view RequiredMissionUnlocks_type_name = "RequiredMissionUnlocks";
		constexpr const static rivet::rivet_type_id RequiredMissionUnlocks_type_id = 0x39f41e9c;
		constexpr const static std::string_view RequiredContainerRegions_type_name = "RequiredContainerRegions";
		constexpr const static rivet::rivet_type_id RequiredContainerRegions_type_id = 0x43245e25;
		constexpr const static std::string_view SpawnInfo_type_name = "SpawnInfo";
		constexpr const static rivet::rivet_type_id SpawnInfo_type_id = 0x56911753;
		constexpr const static std::string_view NodeParams_type_name = "NodeParams";
		constexpr const static rivet::rivet_type_id NodeParams_type_id = 0xc0c72b9c;
		constexpr const static std::string_view MaxVehicles_type_name = "MaxVehicles";
		constexpr const static rivet::rivet_type_id MaxVehicles_type_id = 0x8bdfe14e;
		constexpr const static std::string_view MaxVehiclesPerfMode_type_name = "MaxVehiclesPerfMode";
		constexpr const static rivet::rivet_type_id MaxVehiclesPerfMode_type_id = 0x7612db2f;
		constexpr const static std::string_view MaxVehiclesMediumPerfMode_type_name = "MaxVehiclesMediumPerfMode";
		constexpr const static rivet::rivet_type_id MaxVehiclesMediumPerfMode_type_id = 0x11572cd3;
		constexpr const static std::string_view MaxVehiclesLowPerfMode_type_name = "MaxVehiclesLowPerfMode";
		constexpr const static rivet::rivet_type_id MaxVehiclesLowPerfMode_type_id = 0x3b01b021;
		constexpr const static std::string_view SoundEnableRange_type_name = "SoundEnableRange";
		constexpr const static rivet::rivet_type_id SoundEnableRange_type_id = 0xcd8ae4d6;
		constexpr const static std::string_view SoundDisableRange_type_name = "SoundDisableRange";
		constexpr const static rivet::rivet_type_id SoundDisableRange_type_id = 0xe085b7d7;
		constexpr const static std::string_view VehicleTypeList_type_name = "VehicleTypeList";
		constexpr const static rivet::rivet_type_id VehicleTypeList_type_id = 0x3a20a6f4; 

		explicit VehicleSetListEntry() = default;
		explicit VehicleSetListEntry([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view SetName {};
		std::vector<rivet::ddl::generated::xee0945fb> RequiredLightingModes {};
		std::shared_ptr<rivet::ddl::generated::ObjSysUnlockSequence> RequiredMissionUnlocks {};
		std::vector<std::string_view> RequiredContainerRegions {};
		std::shared_ptr<rivet::ddl::generated::VehicleSpawnInfo> SpawnInfo {};
		std::shared_ptr<rivet::ddl::generated::VehicleNodeParams> NodeParams {};
		int32_t MaxVehicles {};
		int32_t MaxVehiclesPerfMode {};
		int32_t MaxVehiclesMediumPerfMode {};
		int32_t MaxVehiclesLowPerfMode {};
		float SoundEnableRange {};
		float SoundDisableRange {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VehicleTypeListEntry>> VehicleTypeList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VehicleSetListEntry>;
	};
} // namespace rivet::ddl::generated

// clang-format on
