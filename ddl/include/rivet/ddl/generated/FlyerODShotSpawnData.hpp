// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED FlyerODShotSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "FlyerODShotSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x50d3915f;

		constexpr static std::string_view FlyerOD_type_name = "FlyerOD";
		constexpr static rivet::rivet_type_id FlyerOD_type_id = 0xa2c9e54a;
		constexpr static std::string_view AssetID_type_name = "AssetID";
		constexpr static rivet::rivet_type_id AssetID_type_id = 0x8d89a81f;
		constexpr static std::string_view Pos_type_name = "Pos";
		constexpr static rivet::rivet_type_id Pos_type_id = 0xaa8ccf65;
		constexpr static std::string_view Facing_type_name = "Facing";
		constexpr static rivet::rivet_type_id Facing_type_id = 0xb37847ee; 

		explicit FlyerODShotSpawnData() = default;
		explicit FlyerODShotSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t FlyerOD {};
		uint64_t AssetID {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Pos {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Facing {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FlyerODShotSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
