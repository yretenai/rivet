// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BotHibernateSystemSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BotHibernateSystemSettings";
		constexpr static rivet::rivet_type_id type_id = 0xe6d578f3;

		constexpr static std::string_view DebugInterface_type_name = "DebugInterface";
		constexpr static rivet::rivet_type_id DebugInterface_type_id = 0x2d6588e3;
		constexpr static std::string_view EnableDistantBotPerf_type_name = "EnableDistantBotPerf";
		constexpr static rivet::rivet_type_id EnableDistantBotPerf_type_id = 0xc7c54bc4;
		constexpr static std::string_view FarEnemyDistance_type_name = "FarEnemyDistance";
		constexpr static rivet::rivet_type_id FarEnemyDistance_type_id = 0x8f3ac731;
		constexpr static std::string_view FarNPCDistance_type_name = "FarNPCDistance";
		constexpr static rivet::rivet_type_id FarNPCDistance_type_id = 0xb61bfc91;
		constexpr static std::string_view MaxCountDistantBots_type_name = "MaxCountDistantBots";
		constexpr static rivet::rivet_type_id MaxCountDistantBots_type_id = 0x7e897c5a; 

		explicit BotHibernateSystemSettings() = default;
		explicit BotHibernateSystemSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool DebugInterface {};
		bool EnableDistantBotPerf {};
		float FarEnemyDistance {};
		float FarNPCDistance {};
		int32_t MaxCountDistantBots {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotHibernateSystemSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
