// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct DebugActor3dViewWhiteListItem;
	struct DebugActorEventFilter; 

	struct RIVET_DDL_SHARED DebugActorSystemConfig : ConfigBase {
		constexpr static std::string_view type_name = "DebugActorSystemConfig";
		constexpr static rivet::rivet_type_id type_id = 0xfe879f44;

		constexpr static std::string_view FilterList_type_name = "FilterList";
		constexpr static rivet::rivet_type_id FilterList_type_id = 0x95739137;
		constexpr static std::string_view DebugActor3dViewWhiteList_type_name = "DebugActor3dViewWhiteList";
		constexpr static rivet::rivet_type_id DebugActor3dViewWhiteList_type_id = 0xbb65844e; 

		explicit DebugActorSystemConfig() = default;
		explicit DebugActorSystemConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::DebugActorEventFilter>> FilterList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DebugActor3dViewWhiteListItem>> DebugActor3dViewWhiteList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugActorSystemConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
