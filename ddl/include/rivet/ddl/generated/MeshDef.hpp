// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct MeshUColorDef;
	struct MeshTriDef;
	struct MeshUvDef;
	struct MeshNormalDef;
	struct MeshSkinVertDef;
	struct MeshPosDef; 

	struct RIVET_DDL_SHARED MeshDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MeshDef";
		constexpr static rivet::rivet_type_id type_id = 0xa5f634ea;

		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view Positions_type_name = "Positions";
		constexpr static rivet::rivet_type_id Positions_type_id = 0x54627a70;
		constexpr static std::string_view Normals_type_name = "Normals";
		constexpr static rivet::rivet_type_id Normals_type_id = 0xbda20f3a;
		constexpr static std::string_view UVs_type_name = "UVs";
		constexpr static rivet::rivet_type_id UVs_type_id = 0xa2c38034;
		constexpr static std::string_view UV2s_type_name = "UV2s";
		constexpr static rivet::rivet_type_id UV2s_type_id = 0x17869f7;
		constexpr static std::string_view Colors_type_name = "Colors";
		constexpr static rivet::rivet_type_id Colors_type_id = 0xfcc68df8;
		constexpr static std::string_view SkinVerts_type_name = "SkinVerts";
		constexpr static rivet::rivet_type_id SkinVerts_type_id = 0x620ab253;
		constexpr static std::string_view Tris_type_name = "Tris";
		constexpr static rivet::rivet_type_id Tris_type_id = 0xdfcf6431; 

		explicit MeshDef() = default;
		explicit MeshDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Name {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshPosDef>> Positions {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshNormalDef>> Normals {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshUvDef>> UVs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshUvDef>> UV2s {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshUColorDef>> Colors {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshSkinVertDef>> SkinVerts {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MeshTriDef>> Tris {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MeshDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
