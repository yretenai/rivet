// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ExplosionCountdownStage : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ExplosionCountdownStage";
		constexpr static rivet::rivet_type_id type_id = 0xd7d6f672;

		constexpr static std::string_view TimeUntilNextStage_type_name = "TimeUntilNextStage";
		constexpr static rivet::rivet_type_id TimeUntilNextStage_type_id = 0xc235ad3c;
		constexpr static std::string_view FlashFadeInDuration_type_name = "FlashFadeInDuration";
		constexpr static rivet::rivet_type_id FlashFadeInDuration_type_id = 0x43819dbd;
		constexpr static std::string_view FlashFadeOutDuration_type_name = "FlashFadeOutDuration";
		constexpr static rivet::rivet_type_id FlashFadeOutDuration_type_id = 0x1834b566;
		constexpr static std::string_view ShouldPlayBeepAudio_type_name = "ShouldPlayBeepAudio";
		constexpr static rivet::rivet_type_id ShouldPlayBeepAudio_type_id = 0xfe1c6519;
		constexpr static std::string_view IsLastBeep_type_name = "IsLastBeep";
		constexpr static rivet::rivet_type_id IsLastBeep_type_id = 0x39f938d5; 

		explicit ExplosionCountdownStage() = default;
		explicit ExplosionCountdownStage([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float TimeUntilNextStage {};
		float FlashFadeInDuration {};
		float FlashFadeOutDuration {};
		bool ShouldPlayBeepAudio {};
		bool IsLastBeep {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ExplosionCountdownStage>;
	};
} // namespace rivet::ddl::generated

// clang-format on
