// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AssetDbGetMaterialInfoOutput : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AssetDbGetMaterialInfoOutput";
		constexpr static rivet::rivet_type_id type_id = 0xd072477c;

		constexpr static std::string_view ErrorMessage_type_name = "ErrorMessage";
		constexpr static rivet::rivet_type_id ErrorMessage_type_id = 0xd59b5565;
		constexpr static std::string_view Success_type_name = "Success";
		constexpr static rivet::rivet_type_id Success_type_id = 0x6eeabc8a;
		constexpr static std::string_view JsonText_type_name = "JsonText";
		constexpr static rivet::rivet_type_id JsonText_type_id = 0x66d5b79a;
		constexpr static std::string_view TimeStampLow_type_name = "TimeStampLow";
		constexpr static rivet::rivet_type_id TimeStampLow_type_id = 0xd95c8f23;
		constexpr static std::string_view TimeStampHigh_type_name = "TimeStampHigh";
		constexpr static rivet::rivet_type_id TimeStampHigh_type_id = 0x20fa3d23; 

		explicit AssetDbGetMaterialInfoOutput() = default;
		explicit AssetDbGetMaterialInfoOutput([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ErrorMessage {};
		uint8_t Success {};
		std::string_view JsonText {};
		uint32_t TimeStampLow {};
		uint32_t TimeStampHigh {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AssetDbGetMaterialInfoOutput>;
	};
} // namespace rivet::ddl::generated

// clang-format on
