// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x7ecfc969.hpp> 

namespace rivet::ddl::generated {
	struct SkinItemMaterialOverrideListEntry;
	struct AssetReferenceDef; 

	struct RIVET_DDL_SHARED SkinItemMaterialOverrideListElement : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SkinItemMaterialOverrideListElement";
		constexpr static rivet::rivet_type_id type_id = 0x7e31316b;

		constexpr static std::string_view Available_type_name = "Available";
		constexpr static rivet::rivet_type_id Available_type_id = 0x27723b89;
		constexpr static std::string_view OriginalMaterial_type_name = "OriginalMaterial";
		constexpr static rivet::rivet_type_id OriginalMaterial_type_id = 0x3608a389;
		constexpr static std::string_view SecondaryOriginalMaterial_type_name = "SecondaryOriginalMaterial";
		constexpr static rivet::rivet_type_id SecondaryOriginalMaterial_type_id = 0x73e10018;
		constexpr static std::string_view OverrideList_type_name = "OverrideList";
		constexpr static rivet::rivet_type_id OverrideList_type_id = 0xeac313d1; 

		explicit SkinItemMaterialOverrideListElement() = default;
		explicit SkinItemMaterialOverrideListElement([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x7ecfc969 Available {};
		std::shared_ptr<rivet::ddl::generated::AssetReferenceDef> OriginalMaterial {};
		std::shared_ptr<rivet::ddl::generated::AssetReferenceDef> SecondaryOriginalMaterial {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemMaterialOverrideListEntry>> OverrideList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SkinItemMaterialOverrideListElement>;
	};
} // namespace rivet::ddl::generated

// clang-format on
