// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/Icon.hpp>
#include <rivet/ddl/generated/Markup.hpp> 

#include <rivet/ddl/generated/UIIconMarkupConfig.hpp>

namespace rivet::ddl::generated {
	UIIconMarkupConfig::UIIconMarkupConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): ConfigBase(serialized) {
		Icons = serialized->unwrap_into_many<rivet::ddl::generated::Icon>(Icons_type_id);
		Markups = serialized->unwrap_into_many<rivet::ddl::generated::Markup>(Markups_type_id); 
	}

	[[nodiscard]] auto
	UIIconMarkupConfig::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	UIIconMarkupConfig::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UIIconMarkupConfig> {
		if (incoming_type_id == UIIconMarkupConfig::type_id) {
			return std::make_shared<UIIconMarkupConfig>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
