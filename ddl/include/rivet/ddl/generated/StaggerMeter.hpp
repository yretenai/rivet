// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x7f7c56aa.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED StaggerMeter : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "StaggerMeter";
		constexpr const static rivet::rivet_type_id type_id = 0xbffbbd24;

		constexpr const static std::string_view DebugName_type_name = "DebugName";
		constexpr const static rivet::rivet_type_id DebugName_type_id = 0x4ef19112;
		constexpr const static std::string_view Types_type_name = "Types";
		constexpr const static rivet::rivet_type_id Types_type_id = 0x406345f1;
		constexpr const static std::string_view Threshhold_type_name = "Threshhold";
		constexpr const static rivet::rivet_type_id Threshhold_type_id = 0xd245446;
		constexpr const static std::string_view Decay_type_name = "Decay";
		constexpr const static rivet::rivet_type_id Decay_type_id = 0xa0950b67;
		constexpr const static std::string_view DecayDelay_type_name = "DecayDelay";
		constexpr const static rivet::rivet_type_id DecayDelay_type_id = 0x1cb5b22c;
		constexpr const static std::string_view StartingValue_type_name = "StartingValue";
		constexpr const static rivet::rivet_type_id StartingValue_type_id = 0xc59eb3b5;
		constexpr const static std::string_view Cooldown_type_name = "Cooldown";
		constexpr const static rivet::rivet_type_id Cooldown_type_id = 0x246291a9; 

		explicit StaggerMeter() = default;
		explicit StaggerMeter([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view DebugName {};
		rivet::ddl::generated::x7f7c56aa Types {};
		float Threshhold {};
		float Decay {};
		float DecayDelay {};
		float StartingValue {};
		float Cooldown {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<StaggerMeter>;
	};
} // namespace rivet::ddl::generated

// clang-format on
