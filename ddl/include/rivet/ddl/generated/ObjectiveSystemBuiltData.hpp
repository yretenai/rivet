// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct BuiltMissionEntry;
	struct MissionGraphBuiltTableEntry;
	struct ObjectiveGraphBuiltTableEntry; 

	struct RIVET_DDL_SHARED ObjectiveSystemBuiltData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ObjectiveSystemBuiltData";
		constexpr static rivet::rivet_type_id type_id = 0x9ce7354b;

		constexpr static std::string_view ObjectiveGraphs_type_name = "ObjectiveGraphs";
		constexpr static rivet::rivet_type_id ObjectiveGraphs_type_id = 0x7c8910e5;
		constexpr static std::string_view MissionGraphs_type_name = "MissionGraphs";
		constexpr static rivet::rivet_type_id MissionGraphs_type_id = 0xb61940f3;
		constexpr static std::string_view AllMissions_type_name = "AllMissions";
		constexpr static rivet::rivet_type_id AllMissions_type_id = 0xae2856c0; 

		explicit ObjectiveSystemBuiltData() = default;
		explicit ObjectiveSystemBuiltData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::ObjectiveGraphBuiltTableEntry>> ObjectiveGraphs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MissionGraphBuiltTableEntry>> MissionGraphs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BuiltMissionEntry>> AllMissions {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ObjectiveSystemBuiltData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
