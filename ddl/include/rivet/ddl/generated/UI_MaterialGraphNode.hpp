// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct UI_MaterialGraphNodeInput; 

	struct RIVET_DDL_SHARED UI_MaterialGraphNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UI_MaterialGraphNode";
		constexpr static rivet::rivet_type_id type_id = 0x8b6e1f19;

		constexpr static std::string_view IdLow_type_name = "IdLow";
		constexpr static rivet::rivet_type_id IdLow_type_id = 0xaa93a9e7;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view VariableName_type_name = "VariableName";
		constexpr static rivet::rivet_type_id VariableName_type_id = 0x11d33588;
		constexpr static std::string_view MaterialNode_type_name = "MaterialNode";
		constexpr static rivet::rivet_type_id MaterialNode_type_id = 0x1d927af7;
		constexpr static std::string_view PrependNodeName_type_name = "PrependNodeName";
		constexpr static rivet::rivet_type_id PrependNodeName_type_id = 0x5dda1f00;
		constexpr static std::string_view SortOrder_type_name = "SortOrder";
		constexpr static rivet::rivet_type_id SortOrder_type_id = 0xbd9f03f1;
		constexpr static std::string_view IsSubGraph_type_name = "IsSubGraph";
		constexpr static rivet::rivet_type_id IsSubGraph_type_id = 0xf2039ed8;
		constexpr static std::string_view InputList_type_name = "InputList";
		constexpr static rivet::rivet_type_id InputList_type_id = 0x2f3e8cb8; 

		explicit UI_MaterialGraphNode() = default;
		explicit UI_MaterialGraphNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t IdLow {};
		std::string_view Name {};
		std::string_view VariableName {};
		std::string_view MaterialNode {};
		bool PrependNodeName {};
		int32_t SortOrder {};
		bool IsSubGraph {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UI_MaterialGraphNodeInput>> InputList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UI_MaterialGraphNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
