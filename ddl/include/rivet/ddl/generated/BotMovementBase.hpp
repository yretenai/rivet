// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BotMovementBase : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "BotMovementBase";
		constexpr const static rivet::rivet_type_id type_id = 0xf3c99f4f;

		constexpr const static std::string_view MoveSpeed_type_name = "MoveSpeed";
		constexpr const static rivet::rivet_type_id MoveSpeed_type_id = 0x1f570251;
		constexpr const static std::string_view MoveAnimName_type_name = "MoveAnimName";
		constexpr const static rivet::rivet_type_id MoveAnimName_type_id = 0x8f9bd642;
		constexpr const static std::string_view MoverTurnSpeed_type_name = "MoverTurnSpeed";
		constexpr const static rivet::rivet_type_id MoverTurnSpeed_type_id = 0x3cd35f8;
		constexpr const static std::string_view TurnRate_type_name = "TurnRate";
		constexpr const static rivet::rivet_type_id TurnRate_type_id = 0x371b2802;
		constexpr const static std::string_view TurnGain_type_name = "TurnGain";
		constexpr const static rivet::rivet_type_id TurnGain_type_id = 0x38623a3b;
		constexpr const static std::string_view TurnDamp_type_name = "TurnDamp";
		constexpr const static rivet::rivet_type_id TurnDamp_type_id = 0xb4b46db2;
		constexpr const static std::string_view UseDefaultAnimRate_type_name = "UseDefaultAnimRate";
		constexpr const static rivet::rivet_type_id UseDefaultAnimRate_type_id = 0xc77553f;
		constexpr const static std::string_view IsLevelWithGround_type_name = "IsLevelWithGround";
		constexpr const static rivet::rivet_type_id IsLevelWithGround_type_id = 0x39b19ffb;
		constexpr const static std::string_view LevelWithGroundRotSpeed_type_name = "LevelWithGroundRotSpeed";
		constexpr const static rivet::rivet_type_id LevelWithGroundRotSpeed_type_id = 0xe603c296;
		constexpr const static std::string_view MaxHeightForGroundContact_type_name = "MaxHeightForGroundContact";
		constexpr const static rivet::rivet_type_id MaxHeightForGroundContact_type_id = 0x2d1dfcbc;
		constexpr const static std::string_view UseHeroStateFallDeath_type_name = "UseHeroStateFallDeath";
		constexpr const static rivet::rivet_type_id UseHeroStateFallDeath_type_id = 0xa5e9e530;
		constexpr const static std::string_view HeroFallDeathCustomAnim_type_name = "HeroFallDeathCustomAnim";
		constexpr const static rivet::rivet_type_id HeroFallDeathCustomAnim_type_id = 0xa38899a9;
		constexpr const static std::string_view DeathAnim_type_name = "DeathAnim";
		constexpr const static rivet::rivet_type_id DeathAnim_type_id = 0xf9dd5a6;
		constexpr const static std::string_view AnimatedDismountAnim_type_name = "AnimatedDismountAnim";
		constexpr const static rivet::rivet_type_id AnimatedDismountAnim_type_id = 0xf9375130;
		constexpr const static std::string_view UseStrafeMove_type_name = "UseStrafeMove";
		constexpr const static rivet::rivet_type_id UseStrafeMove_type_id = 0x386e2ff0; 

		explicit BotMovementBase() = default;
		explicit BotMovementBase([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MoveSpeed {};
		std::string_view MoveAnimName {};
		float MoverTurnSpeed {};
		float TurnRate {};
		float TurnGain {};
		float TurnDamp {};
		bool UseDefaultAnimRate {};
		bool IsLevelWithGround {};
		float LevelWithGroundRotSpeed {};
		float MaxHeightForGroundContact {};
		bool UseHeroStateFallDeath {};
		std::string_view HeroFallDeathCustomAnim {};
		std::string_view DeathAnim {};
		std::string_view AnimatedDismountAnim {};
		bool UseStrafeMove {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotMovementBase>;
	};
} // namespace rivet::ddl::generated

// clang-format on
