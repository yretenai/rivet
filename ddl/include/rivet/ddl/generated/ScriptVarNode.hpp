// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x36ed0644.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ScriptVarNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ScriptVarNode";
		constexpr static rivet::rivet_type_id type_id = 0x3f4cb928;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view XPos_type_name = "XPos";
		constexpr static rivet::rivet_type_id XPos_type_id = 0xf88aee81;
		constexpr static std::string_view YPos_type_name = "YPos";
		constexpr static rivet::rivet_type_id YPos_type_id = 0x403689e4;
		constexpr static std::string_view Editable_type_name = "Editable";
		constexpr static rivet::rivet_type_id Editable_type_id = 0x672182f9;
		constexpr static std::string_view GlobalName_type_name = "GlobalName";
		constexpr static rivet::rivet_type_id GlobalName_type_id = 0xe40dfcba;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view BoolValue_type_name = "BoolValue";
		constexpr static rivet::rivet_type_id BoolValue_type_id = 0x7f6e397;
		constexpr static std::string_view FloatValue_type_name = "FloatValue";
		constexpr static rivet::rivet_type_id FloatValue_type_id = 0xf03f0a74;
		constexpr static std::string_view VecValue_type_name = "VecValue";
		constexpr static rivet::rivet_type_id VecValue_type_id = 0xb8666495;
		constexpr static std::string_view StringValue_type_name = "StringValue";
		constexpr static rivet::rivet_type_id StringValue_type_id = 0xbb242993;
		constexpr static std::string_view ActorValue_type_name = "ActorValue";
		constexpr static rivet::rivet_type_id ActorValue_type_id = 0x6aed6be1; 

		explicit ScriptVarNode() = default;
		explicit ScriptVarNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		std::string_view Name {};
		int32_t XPos {};
		int32_t YPos {};
		bool Editable {};
		std::string_view GlobalName {};
		rivet::ddl::generated::x36ed0644 Type {};
		bool BoolValue {};
		float FloatValue {};
		std::vector<float> VecValue {};
		std::string_view StringValue {};
		uint64_t ActorValue {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ScriptVarNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
