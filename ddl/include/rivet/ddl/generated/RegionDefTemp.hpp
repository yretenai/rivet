// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x2069d6e7.hpp> 

namespace rivet::ddl::generated {
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED RegionDefTemp : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RegionDefTemp";
		constexpr static rivet::rivet_type_id type_id = 0x3cd89ebb;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view ParentAsset_type_name = "ParentAsset";
		constexpr static rivet::rivet_type_id ParentAsset_type_id = 0x2e74622c;
		constexpr static std::string_view Aux_type_name = "Aux";
		constexpr static rivet::rivet_type_id Aux_type_id = 0x90972571; 

		explicit RegionDefTemp() = default;
		explicit RegionDefTemp([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::string_view Name {};
		rivet::ddl::generated::x2069d6e7 Type {};
		uint64_t ParentAsset {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> Aux {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RegionDefTemp>;
	};
} // namespace rivet::ddl::generated

// clang-format on
