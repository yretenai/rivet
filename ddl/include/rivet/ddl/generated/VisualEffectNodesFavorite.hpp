// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/RenderStyle.hpp>
#include <rivet/ddl/generated/enums/KeyFrameType.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VisualEffectNodesFavorite : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VisualEffectNodesFavorite";
		constexpr static rivet::rivet_type_id type_id = 0xdb7dfb73;

		constexpr static std::string_view KeyFrameType_type_name = "KeyFrameType";
		constexpr static rivet::rivet_type_id KeyFrameType_type_id = 0x4c68ca42;
		constexpr static std::string_view RenderStyle_type_name = "RenderStyle";
		constexpr static rivet::rivet_type_id RenderStyle_type_id = 0x1ce19fbd;
		constexpr static std::string_view SymbolName_type_name = "SymbolName";
		constexpr static rivet::rivet_type_id SymbolName_type_id = 0x5430bc1b;
		constexpr static std::string_view TransformDirection_type_name = "TransformDirection";
		constexpr static rivet::rivet_type_id TransformDirection_type_id = 0x37407f32; 

		explicit VisualEffectNodesFavorite() = default;
		explicit VisualEffectNodesFavorite([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::KeyFrameType KeyFrameType {};
		rivet::ddl::generated::RenderStyle RenderStyle {};
		std::string_view SymbolName {};
		int32_t TransformDirection {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VisualEffectNodesFavorite>;
	};
} // namespace rivet::ddl::generated

// clang-format on
