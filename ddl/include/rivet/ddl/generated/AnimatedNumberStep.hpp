// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AnimatedNumberStep : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimatedNumberStep";
		constexpr static rivet::rivet_type_id type_id = 0xe8027967;

		constexpr static std::string_view StartValue_type_name = "StartValue";
		constexpr static rivet::rivet_type_id StartValue_type_id = 0x651c34d0;
		constexpr static std::string_view EndValue_type_name = "EndValue";
		constexpr static rivet::rivet_type_id EndValue_type_id = 0x5550361f;
		constexpr static std::string_view Time_type_name = "Time";
		constexpr static rivet::rivet_type_id Time_type_id = 0x5f0458f5;
		constexpr static std::string_view EaseIn_type_name = "EaseIn";
		constexpr static rivet::rivet_type_id EaseIn_type_id = 0xcff6917a;
		constexpr static std::string_view EaseOut_type_name = "EaseOut";
		constexpr static rivet::rivet_type_id EaseOut_type_id = 0x4acc6cbe; 

		explicit AnimatedNumberStep() = default;
		explicit AnimatedNumberStep([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float StartValue {};
		float EndValue {};
		float Time {};
		float EaseIn {};
		float EaseOut {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimatedNumberStep>;
	};
} // namespace rivet::ddl::generated

// clang-format on
