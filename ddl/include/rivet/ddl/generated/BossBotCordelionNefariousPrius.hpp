// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotPrius.hpp> 

namespace rivet::ddl::generated {
	struct BossBotCordelionNefMaterialSwaps;
	struct BossBotCordelionNefariousShieldManagerPrius;
	struct HoverShuffleData; 

	struct RIVET_DDL_SHARED BossBotCordelionNefariousPrius : BotPrius {
		constexpr static std::string_view type_name = "BossBotCordelionNefariousPrius";
		constexpr static rivet::rivet_type_id type_id = 0xf3675fee;

		constexpr static std::string_view HoverLeanStrength_type_name = "HoverLeanStrength";
		constexpr static rivet::rivet_type_id HoverLeanStrength_type_id = 0xa065a917;
		constexpr static std::string_view HoverLeanVarMultiplier_type_name = "HoverLeanVarMultiplier";
		constexpr static rivet::rivet_type_id HoverLeanVarMultiplier_type_id = 0x6a00692;
		constexpr static std::string_view HoverLeanBlendSpeed_type_name = "HoverLeanBlendSpeed";
		constexpr static rivet::rivet_type_id HoverLeanBlendSpeed_type_id = 0x21515a4f;
		constexpr static std::string_view HoverShuffleData_type_name = "HoverShuffleData";
		constexpr static rivet::rivet_type_id HoverShuffleData_type_id = 0x5d8cb773;
		constexpr static std::string_view ShieldData_type_name = "ShieldData";
		constexpr static rivet::rivet_type_id ShieldData_type_id = 0xeb526e57;
		constexpr static std::string_view HealthThresholdForSwap_type_name = "HealthThresholdForSwap";
		constexpr static rivet::rivet_type_id HealthThresholdForSwap_type_id = 0x7d5cd02;
		constexpr static std::string_view MaterialSwapsToDo_type_name = "MaterialSwapsToDo";
		constexpr static rivet::rivet_type_id MaterialSwapsToDo_type_id = 0xfc11873f; 

		explicit BossBotCordelionNefariousPrius() = default;
		explicit BossBotCordelionNefariousPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float HoverLeanStrength {};
		float HoverLeanVarMultiplier {};
		float HoverLeanBlendSpeed {};
		std::shared_ptr<rivet::ddl::generated::HoverShuffleData> HoverShuffleData {};
		std::shared_ptr<rivet::ddl::generated::BossBotCordelionNefariousShieldManagerPrius> ShieldData {};
		float HealthThresholdForSwap {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BossBotCordelionNefMaterialSwaps>> MaterialSwapsToDo {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BossBotCordelionNefariousPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
