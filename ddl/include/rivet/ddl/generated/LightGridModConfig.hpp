// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct ColorModulation; 

	struct RIVET_DDL_SHARED LightGridModConfig : ConfigBase {
		constexpr static std::string_view type_name = "LightGridModConfig";
		constexpr static rivet::rivet_type_id type_id = 0x54ebf356;

		constexpr static std::string_view AoStength_type_name = "AoStength";
		constexpr static rivet::rivet_type_id AoStength_type_id = 0x6b20e09f;
		constexpr static std::string_view AoVerticality_type_name = "AoVerticality";
		constexpr static rivet::rivet_type_id AoVerticality_type_id = 0x88441f9e;
		constexpr static std::string_view ColorMods_type_name = "ColorMods";
		constexpr static rivet::rivet_type_id ColorMods_type_id = 0xdc1f2ebd; 

		explicit LightGridModConfig() = default;
		explicit LightGridModConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float AoStength {};
		float AoVerticality {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ColorModulation>> ColorMods {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LightGridModConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
