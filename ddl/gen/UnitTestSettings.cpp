// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/UnitTestSettings.hpp>

namespace rivet::ddl::generated {
	UnitTestSettings::UnitTestSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		LogFile = serialized->get_string(LogFile_type_id, "");
		AppendToLogFile = serialized->get_bool(AppendToLogFile_type_id, false);
		DebugHeapToUseForJsonBuffer = serialized->get_uint32(DebugHeapToUseForJsonBuffer_type_id, 2097152); 
	}

	[[nodiscard]] auto
	UnitTestSettings::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	UnitTestSettings::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UnitTestSettings> {
		if (incoming_type_id == UnitTestSettings::type_id) {
			return std::make_shared<UnitTestSettings>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
