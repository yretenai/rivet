// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MountAbilityOverrideScriptActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MountAbilityOverrideScriptActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x5baa0113;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view EnableAbilitySquare_type_name = "EnableAbilitySquare";
		constexpr static rivet::rivet_type_id EnableAbilitySquare_type_id = 0x3d15c526;
		constexpr static std::string_view EnableAbilityX_type_name = "EnableAbilityX";
		constexpr static rivet::rivet_type_id EnableAbilityX_type_id = 0x1d54a85f;
		constexpr static std::string_view EnableAbilityTriangle_type_name = "EnableAbilityTriangle";
		constexpr static rivet::rivet_type_id EnableAbilityTriangle_type_id = 0x8a32d45f;
		constexpr static std::string_view EnableAbilityCircle_type_name = "EnableAbilityCircle";
		constexpr static rivet::rivet_type_id EnableAbilityCircle_type_id = 0x2441c8f6;
		constexpr static std::string_view EnableAbilityR1_type_name = "EnableAbilityR1";
		constexpr static rivet::rivet_type_id EnableAbilityR1_type_id = 0x50f8f07d;
		constexpr static std::string_view EnableAbilityL1_type_name = "EnableAbilityL1";
		constexpr static rivet::rivet_type_id EnableAbilityL1_type_id = 0x84b9cfa2;
		constexpr static std::string_view EnableAbilityR2_type_name = "EnableAbilityR2";
		constexpr static rivet::rivet_type_id EnableAbilityR2_type_id = 0xc9f1a1c7;
		constexpr static std::string_view EnableAbilityL2_type_name = "EnableAbilityL2";
		constexpr static rivet::rivet_type_id EnableAbilityL2_type_id = 0x1db09e18; 

		explicit MountAbilityOverrideScriptActionPrius() = default;
		explicit MountAbilityOverrideScriptActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		bool EnableAbilitySquare {};
		bool EnableAbilityX {};
		bool EnableAbilityTriangle {};
		bool EnableAbilityCircle {};
		bool EnableAbilityR1 {};
		bool EnableAbilityL1 {};
		bool EnableAbilityR2 {};
		bool EnableAbilityL2 {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MountAbilityOverrideScriptActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
