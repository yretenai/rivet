// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct PhysicsCustomizationProperties; 

	struct RIVET_DDL_SHARED KickableComponentPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "KickableComponentPrius";
		constexpr static rivet::rivet_type_id type_id = 0x873313d7;

		constexpr static std::string_view IsNudgeable_type_name = "IsNudgeable";
		constexpr static rivet::rivet_type_id IsNudgeable_type_id = 0x25dfa00d;
		constexpr static std::string_view NudgeFactor_type_name = "NudgeFactor";
		constexpr static rivet::rivet_type_id NudgeFactor_type_id = 0xade04108;
		constexpr static std::string_view AutoAllocPhysicsAndAnimController_type_name = "AutoAllocPhysicsAndAnimController";
		constexpr static rivet::rivet_type_id AutoAllocPhysicsAndAnimController_type_id = 0xf3f8afe6;
		constexpr static std::string_view StartActivated_type_name = "StartActivated";
		constexpr static rivet::rivet_type_id StartActivated_type_id = 0xd14f83c8;
		constexpr static std::string_view StartInteractable_type_name = "StartInteractable";
		constexpr static rivet::rivet_type_id StartInteractable_type_id = 0xdd944a6;
		constexpr static std::string_view ExtraProp_type_name = "ExtraProp";
		constexpr static rivet::rivet_type_id ExtraProp_type_id = 0xd93276ab;
		constexpr static std::string_view CustomProperties_type_name = "CustomProperties";
		constexpr static rivet::rivet_type_id CustomProperties_type_id = 0x8e301f6c; 

		explicit KickableComponentPrius() = default;
		explicit KickableComponentPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool IsNudgeable {};
		float NudgeFactor {};
		bool AutoAllocPhysicsAndAnimController {};
		bool StartActivated {};
		bool StartInteractable {};
		bool ExtraProp {};
		std::shared_ptr<rivet::ddl::generated::PhysicsCustomizationProperties> CustomProperties {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<KickableComponentPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
