// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED UpdaterGameBuildStateFile : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UpdaterGameBuildStateFile";
		constexpr static rivet::rivet_type_id type_id = 0x7409c1db;

		constexpr static std::string_view LocalDir_type_name = "LocalDir";
		constexpr static rivet::rivet_type_id LocalDir_type_id = 0x43fc65b1;
		constexpr static std::string_view RemoteDir_type_name = "RemoteDir";
		constexpr static rivet::rivet_type_id RemoteDir_type_id = 0x4c64fa58;
		constexpr static std::string_view ConfigFile_type_name = "ConfigFile";
		constexpr static rivet::rivet_type_id ConfigFile_type_id = 0xa5b1bfe2;
		constexpr static std::string_view PackageFile_type_name = "PackageFile";
		constexpr static rivet::rivet_type_id PackageFile_type_id = 0xaa381aba;
		constexpr static std::string_view IsLocalBuild_type_name = "IsLocalBuild";
		constexpr static rivet::rivet_type_id IsLocalBuild_type_id = 0xdbec3035;
		constexpr static std::string_view IsConfigDownloaded_type_name = "IsConfigDownloaded";
		constexpr static rivet::rivet_type_id IsConfigDownloaded_type_id = 0x48274b4e;
		constexpr static std::string_view IsPackageDownloaded_type_name = "IsPackageDownloaded";
		constexpr static rivet::rivet_type_id IsPackageDownloaded_type_id = 0xab321f0e;
		constexpr static std::string_view IsPackageUnpacked_type_name = "IsPackageUnpacked";
		constexpr static rivet::rivet_type_id IsPackageUnpacked_type_id = 0xf369b90b; 

		explicit UpdaterGameBuildStateFile() = default;
		explicit UpdaterGameBuildStateFile([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view LocalDir {};
		std::string_view RemoteDir {};
		std::string_view ConfigFile {};
		std::string_view PackageFile {};
		bool IsLocalBuild {};
		bool IsConfigDownloaded {};
		bool IsPackageDownloaded {};
		bool IsPackageUnpacked {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UpdaterGameBuildStateFile>;
	};
} // namespace rivet::ddl::generated

// clang-format on
