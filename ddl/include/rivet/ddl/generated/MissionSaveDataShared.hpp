// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x62de2618.hpp>
#include <rivet/ddl/generated/enums/MissionStates.hpp>
#include <rivet/ddl/generated/ObjSysNodeSaveData.hpp> 

namespace rivet::ddl::generated {
	struct SyncOutputData; 

	struct RIVET_DDL_SHARED MissionSaveDataShared : ObjSysNodeSaveData {
		constexpr static std::string_view type_name = "MissionSaveDataShared";
		constexpr static rivet::rivet_type_id type_id = 0x282ddc12;

		constexpr static std::string_view MissionState_type_name = "MissionState";
		constexpr static rivet::rivet_type_id MissionState_type_id = 0xd5bb196b;
		constexpr static std::string_view MissionFlagsShared_type_name = "MissionFlagsShared";
		constexpr static rivet::rivet_type_id MissionFlagsShared_type_id = 0xf6f252ad;
		constexpr static std::string_view MissionDataStore_type_name = "MissionDataStore";
		constexpr static rivet::rivet_type_id MissionDataStore_type_id = 0x3d39f130;
		constexpr static std::string_view SyncOutputState_type_name = "SyncOutputState";
		constexpr static rivet::rivet_type_id SyncOutputState_type_id = 0xf2a55da9; 

		explicit MissionSaveDataShared() = default;
		explicit MissionSaveDataShared([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::MissionStates MissionState {};
		rivet::ddl::generated::x62de2618 MissionFlagsShared {};
		std::vector<bool> MissionDataStore {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SyncOutputData>> SyncOutputState {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MissionSaveDataShared>;
	};
} // namespace rivet::ddl::generated

// clang-format on
