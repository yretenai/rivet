// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr const static std::string_view OfferType_type_name = "OfferType";
	constexpr const static rivet::rivet_type_id OfferType_type_id = 0xcf4f1f79;

	constexpr const static std::array<std::tuple<std::string_view, uint64_t>, 11> OfferType_values = {
		std::make_tuple("kGeneral", 0x1),
		std::make_tuple("kPickupBase", 0x2),
		std::make_tuple("kPickupCarry", 0x4),
		std::make_tuple("kMountPickupCarry", 0x8),
		std::make_tuple("kMountFlyLand", 0x10),
		std::make_tuple("kInteract", 0x20),
		std::make_tuple("kRevive", 0x40),
		std::make_tuple("kExecute", 0x80),
		std::make_tuple("kHealable", 0x100),
		std::make_tuple("kTrapReset", 0x200),
		std::make_tuple("kTrapTrigger", 0x400), 
	};

	enum class OfferType : uint64_t {
		General = 0x1,
		PickupBase = 0x2,
		PickupCarry = 0x4,
		MountPickupCarry = 0x8,
		MountFlyLand = 0x10,
		Interact = 0x20,
		Revive = 0x40,
		Execute = 0x80,
		Healable = 0x100,
		TrapReset = 0x200,
		TrapTrigger = 0x400, 
	};
} // namespace rivet::ddl::generated

// clang-format on
