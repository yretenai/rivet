// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED InteractLocationCameraSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "InteractLocationCameraSettings";
		constexpr static rivet::rivet_type_id type_id = 0x5b1eb6b2;

		constexpr static std::string_view UserCamera_type_name = "UserCamera";
		constexpr static rivet::rivet_type_id UserCamera_type_id = 0x8f7ca2ce;
		constexpr static std::string_view CameraOnDelay_type_name = "CameraOnDelay";
		constexpr static rivet::rivet_type_id CameraOnDelay_type_id = 0x6b9d5ea5;
		constexpr static std::string_view CameraOffDelay_type_name = "CameraOffDelay";
		constexpr static rivet::rivet_type_id CameraOffDelay_type_id = 0xfdefabcf;
		constexpr static std::string_view CameraOffDistance_type_name = "CameraOffDistance";
		constexpr static rivet::rivet_type_id CameraOffDistance_type_id = 0xde79bd6a;
		constexpr static std::string_view CameraBlendInTime_type_name = "CameraBlendInTime";
		constexpr static rivet::rivet_type_id CameraBlendInTime_type_id = 0xe1abdb4f;
		constexpr static std::string_view CameraBlendTime_type_name = "CameraBlendTime";
		constexpr static rivet::rivet_type_id CameraBlendTime_type_id = 0xe9ec1d1c;
		constexpr static std::string_view ActivateOnStart_type_name = "ActivateOnStart";
		constexpr static rivet::rivet_type_id ActivateOnStart_type_id = 0x15268acc;
		constexpr static std::string_view UseAnimatedCamera_type_name = "UseAnimatedCamera";
		constexpr static rivet::rivet_type_id UseAnimatedCamera_type_id = 0x683736e6;
		constexpr static std::string_view AnimatedCameraAnchor_type_name = "AnimatedCameraAnchor";
		constexpr static rivet::rivet_type_id AnimatedCameraAnchor_type_id = 0xc8b25f2a; 

		explicit InteractLocationCameraSettings() = default;
		explicit InteractLocationCameraSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t UserCamera {};
		float CameraOnDelay {};
		float CameraOffDelay {};
		float CameraOffDistance {};
		float CameraBlendInTime {};
		float CameraBlendTime {};
		bool ActivateOnStart {};
		bool UseAnimatedCamera {};
		std::string_view AnimatedCameraAnchor {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<InteractLocationCameraSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
