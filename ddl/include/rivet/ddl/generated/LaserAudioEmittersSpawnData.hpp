// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LaserAudioEmittersSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "LaserAudioEmittersSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x8e83f436;

		constexpr static std::string_view LaserAudioCurveAsset_type_name = "LaserAudioCurveAsset";
		constexpr static rivet::rivet_type_id LaserAudioCurveAsset_type_id = 0xc220d293;
		constexpr static std::string_view LaserAudioCurveEmitterAsset_type_name = "LaserAudioCurveEmitterAsset";
		constexpr static rivet::rivet_type_id LaserAudioCurveEmitterAsset_type_id = 0x72ca0660;
		constexpr static std::string_view LaserAudioImpactEmitterAsset_type_name = "LaserAudioImpactEmitterAsset";
		constexpr static rivet::rivet_type_id LaserAudioImpactEmitterAsset_type_id = 0xff23e223;
		constexpr static std::string_view ParentActorHandleData_type_name = "ParentActorHandleData";
		constexpr static rivet::rivet_type_id ParentActorHandleData_type_id = 0xf7a33350; 

		explicit LaserAudioEmittersSpawnData() = default;
		explicit LaserAudioEmittersSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t LaserAudioCurveAsset {};
		uint64_t LaserAudioCurveEmitterAsset {};
		uint64_t LaserAudioImpactEmitterAsset {};
		uint32_t ParentActorHandleData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LaserAudioEmittersSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
