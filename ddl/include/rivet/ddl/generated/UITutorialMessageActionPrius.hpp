// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xe50c3252.hpp>
#include <rivet/ddl/generated/enums/PauseTabs.hpp>
#include <rivet/ddl/generated/enums/xb7095bb8.hpp>
#include <rivet/ddl/generated/enums/x8693007e.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct UITutorialAction;
	struct QueuedMessage; 

	struct RIVET_DDL_SHARED UITutorialMessageActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UITutorialMessageActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x61715e38;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view TempText_type_name = "TempText";
		constexpr static rivet::rivet_type_id TempText_type_id = 0x99f2b59f;
		constexpr static std::string_view LocTag_type_name = "LocTag";
		constexpr static rivet::rivet_type_id LocTag_type_id = 0x6f8b0e5;
		constexpr static std::string_view Header_type_name = "Header";
		constexpr static rivet::rivet_type_id Header_type_id = 0x500ae6a6;
		constexpr static std::string_view QueuedMessages_type_name = "QueuedMessages";
		constexpr static rivet::rivet_type_id QueuedMessages_type_id = 0x1dcb4c5b;
		constexpr static std::string_view DisableOtherMessages_type_name = "DisableOtherMessages";
		constexpr static rivet::rivet_type_id DisableOtherMessages_type_id = 0x63fbaf6b;
		constexpr static std::string_view MessageType_type_name = "MessageType";
		constexpr static rivet::rivet_type_id MessageType_type_id = 0xc56e3ada;
		constexpr static std::string_view Duration_type_name = "Duration";
		constexpr static rivet::rivet_type_id Duration_type_id = 0x7c5e3db0;
		constexpr static std::string_view MinimumDuration_type_name = "MinimumDuration";
		constexpr static rivet::rivet_type_id MinimumDuration_type_id = 0x356ada74;
		constexpr static std::string_view ConfirmationDelay_type_name = "ConfirmationDelay";
		constexpr static rivet::rivet_type_id ConfirmationDelay_type_id = 0xb0aef304;
		constexpr static std::string_view DisableMessageClear_type_name = "DisableMessageClear";
		constexpr static rivet::rivet_type_id DisableMessageClear_type_id = 0x9c3653d6;
		constexpr static std::string_view SkipInChallengeMode_type_name = "SkipInChallengeMode";
		constexpr static rivet::rivet_type_id SkipInChallengeMode_type_id = 0x65d92dfc;
		constexpr static std::string_view ButtonInputType_type_name = "ButtonInputType";
		constexpr static rivet::rivet_type_id ButtonInputType_type_id = 0x622a1c;
		constexpr static std::string_view Actions_type_name = "Actions";
		constexpr static rivet::rivet_type_id Actions_type_id = 0x4a292d7;
		constexpr static std::string_view Buttons_type_name = "Buttons";
		constexpr static rivet::rivet_type_id Buttons_type_id = 0x42b6e68e;
		constexpr static std::string_view TriggerOnAllButtons_type_name = "TriggerOnAllButtons";
		constexpr static rivet::rivet_type_id TriggerOnAllButtons_type_id = 0xd0defc45;
		constexpr static std::string_view TriggerOnHoldTime_type_name = "TriggerOnHoldTime";
		constexpr static rivet::rivet_type_id TriggerOnHoldTime_type_id = 0xf621e570;
		constexpr static std::string_view TriggerOnHeld_type_name = "TriggerOnHeld";
		constexpr static rivet::rivet_type_id TriggerOnHeld_type_id = 0xa4a100c;
		constexpr static std::string_view InputPassThrough_type_name = "InputPassThrough";
		constexpr static rivet::rivet_type_id InputPassThrough_type_id = 0xc9d3d9d2;
		constexpr static std::string_view InputPassThroughHoldTime_type_name = "InputPassThroughHoldTime";
		constexpr static rivet::rivet_type_id InputPassThroughHoldTime_type_id = 0x702cc043;
		constexpr static std::string_view SendButtonsIndividally_type_name = "SendButtonsIndividally";
		constexpr static rivet::rivet_type_id SendButtonsIndividally_type_id = 0x9cccaff8;
		constexpr static std::string_view LockHeroMoves_type_name = "LockHeroMoves";
		constexpr static rivet::rivet_type_id LockHeroMoves_type_id = 0x237b9813;
		constexpr static std::string_view LockHeroMoveAbility_type_name = "LockHeroMoveAbility";
		constexpr static rivet::rivet_type_id LockHeroMoveAbility_type_id = 0x589f01a8;
		constexpr static std::string_view SlomoTimescale_type_name = "SlomoTimescale";
		constexpr static rivet::rivet_type_id SlomoTimescale_type_id = 0x18e8c05c;
		constexpr static std::string_view SlomoDelay_type_name = "SlomoDelay";
		constexpr static rivet::rivet_type_id SlomoDelay_type_id = 0x30e4005b;
		constexpr static std::string_view SlomoTimeIn_type_name = "SlomoTimeIn";
		constexpr static rivet::rivet_type_id SlomoTimeIn_type_id = 0xf05636f3;
		constexpr static std::string_view SlomoTimeOut_type_name = "SlomoTimeOut";
		constexpr static rivet::rivet_type_id SlomoTimeOut_type_id = 0xde97f79d;
		constexpr static std::string_view ForcePauseDelay_type_name = "ForcePauseDelay";
		constexpr static rivet::rivet_type_id ForcePauseDelay_type_id = 0xec2eb46f;
		constexpr static std::string_view SlomoEndDelay_type_name = "SlomoEndDelay";
		constexpr static rivet::rivet_type_id SlomoEndDelay_type_id = 0xe26cd860;
		constexpr static std::string_view ChangePausePage_type_name = "ChangePausePage";
		constexpr static rivet::rivet_type_id ChangePausePage_type_id = 0xfd83c222;
		constexpr static std::string_view PauseScreen_type_name = "PauseScreen";
		constexpr static rivet::rivet_type_id PauseScreen_type_id = 0xe1b6b84;
		constexpr static std::string_view PauseSubScreen_type_name = "PauseSubScreen";
		constexpr static rivet::rivet_type_id PauseSubScreen_type_id = 0x8c6a4ff1; 

		explicit UITutorialMessageActionPrius() = default;
		explicit UITutorialMessageActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view TempText {};
		std::string_view LocTag {};
		std::string_view Header {};
		std::vector<std::shared_ptr<rivet::ddl::generated::QueuedMessage>> QueuedMessages {};
		bool DisableOtherMessages {};
		rivet::ddl::generated::x8693007e MessageType {};
		float Duration {};
		float MinimumDuration {};
		float ConfirmationDelay {};
		bool DisableMessageClear {};
		bool SkipInChallengeMode {};
		rivet::ddl::generated::xb7095bb8 ButtonInputType {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UITutorialAction>> Actions {};
		std::vector<rivet::ddl::generated::xe50c3252> Buttons {};
		bool TriggerOnAllButtons {};
		float TriggerOnHoldTime {};
		bool TriggerOnHeld {};
		bool InputPassThrough {};
		float InputPassThroughHoldTime {};
		bool SendButtonsIndividally {};
		bool LockHeroMoves {};
		bool LockHeroMoveAbility {};
		float SlomoTimescale {};
		float SlomoDelay {};
		float SlomoTimeIn {};
		float SlomoTimeOut {};
		float ForcePauseDelay {};
		float SlomoEndDelay {};
		bool ChangePausePage {};
		rivet::ddl::generated::PauseTabs PauseScreen {};
		uint32_t PauseSubScreen {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UITutorialMessageActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
