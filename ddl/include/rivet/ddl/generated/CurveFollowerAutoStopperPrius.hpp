// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CurveFollowerAutoStopperPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CurveFollowerAutoStopperPrius";
		constexpr static rivet::rivet_type_id type_id = 0xd9d54076;

		constexpr static std::string_view StartEnabled_type_name = "StartEnabled";
		constexpr static rivet::rivet_type_id StartEnabled_type_id = 0x6f36ca8b;
		constexpr static std::string_view StopDist_type_name = "StopDist";
		constexpr static rivet::rivet_type_id StopDist_type_id = 0xa5a1fdc7;
		constexpr static std::string_view LookAheadDist_type_name = "LookAheadDist";
		constexpr static rivet::rivet_type_id LookAheadDist_type_id = 0xa8d0cb1d;
		constexpr static std::string_view OverrideAccel_type_name = "OverrideAccel";
		constexpr static rivet::rivet_type_id OverrideAccel_type_id = 0x6de8a897;
		constexpr static std::string_view ResumeAccel_type_name = "ResumeAccel";
		constexpr static rivet::rivet_type_id ResumeAccel_type_id = 0xb202f9e5;
		constexpr static std::string_view OneCollCheck_type_name = "OneCollCheck";
		constexpr static rivet::rivet_type_id OneCollCheck_type_id = 0x31686ff3;
		constexpr static std::string_view StopCollCheckTime_type_name = "StopCollCheckTime";
		constexpr static rivet::rivet_type_id StopCollCheckTime_type_id = 0x38035175;
		constexpr static std::string_view ResumeDist_type_name = "ResumeDist";
		constexpr static rivet::rivet_type_id ResumeDist_type_id = 0xa5c98a92; 

		explicit CurveFollowerAutoStopperPrius() = default;
		explicit CurveFollowerAutoStopperPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool StartEnabled {};
		float StopDist {};
		float LookAheadDist {};
		bool OverrideAccel {};
		float ResumeAccel {};
		bool OneCollCheck {};
		float StopCollCheckTime {};
		float ResumeDist {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CurveFollowerAutoStopperPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
