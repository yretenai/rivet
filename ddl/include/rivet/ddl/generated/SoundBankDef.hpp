// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct SoundGameSyncDataDef;
	struct SoundWwiseMapDef;
	struct SoundEventDef;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED SoundBankDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SoundBankDef";
		constexpr static rivet::rivet_type_id type_id = 0xe9120aac;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view Bank_type_name = "Bank";
		constexpr static rivet::rivet_type_id Bank_type_id = 0xe8f07fca;
		constexpr static std::string_view Streams_type_name = "Streams";
		constexpr static rivet::rivet_type_id Streams_type_id = 0xe1519c2;
		constexpr static std::string_view Events_type_name = "Events";
		constexpr static rivet::rivet_type_id Events_type_id = 0x6dff192d;
		constexpr static std::string_view GameSyncData_type_name = "GameSyncData";
		constexpr static rivet::rivet_type_id GameSyncData_type_id = 0x2596f890;
		constexpr static std::string_view AutoLoadOnRef_type_name = "AutoLoadOnRef";
		constexpr static rivet::rivet_type_id AutoLoadOnRef_type_id = 0x6c668944; 

		explicit SoundBankDef() = default;
		explicit SoundBankDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::shared_ptr<rivet::ddl::generated::SoundWwiseMapDef> Bank {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SoundWwiseMapDef>> Streams {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SoundEventDef>> Events {};
		std::shared_ptr<rivet::ddl::generated::SoundGameSyncDataDef> GameSyncData {};
		bool AutoLoadOnRef {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SoundBankDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
