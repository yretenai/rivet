// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct Nav3DSmoothPathStepElement;
	struct SVOAStarDebugStepElement;
	struct DDLVector3; 

	struct RIVET_DDL_SHARED SVOAStarDebugDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SVOAStarDebugDef";
		constexpr static rivet::rivet_type_id type_id = 0x8487e95;

		constexpr static std::string_view Start_type_name = "Start";
		constexpr static rivet::rivet_type_id Start_type_id = 0x862a994e;
		constexpr static std::string_view Steps_type_name = "Steps";
		constexpr static rivet::rivet_type_id Steps_type_id = 0x2d71c6b3;
		constexpr static std::string_view End_type_name = "End";
		constexpr static rivet::rivet_type_id End_type_id = 0x2aa91a78;
		constexpr static std::string_view PathPoints_type_name = "PathPoints";
		constexpr static rivet::rivet_type_id PathPoints_type_id = 0x847a9164;
		constexpr static std::string_view PathHandles_type_name = "PathHandles";
		constexpr static rivet::rivet_type_id PathHandles_type_id = 0x3e5c37e4;
		constexpr static std::string_view SmoothingConsideredNeighbors_type_name = "SmoothingConsideredNeighbors";
		constexpr static rivet::rivet_type_id SmoothingConsideredNeighbors_type_id = 0xac341ebd;
		constexpr static std::string_view SmoothPathSteps_type_name = "SmoothPathSteps";
		constexpr static rivet::rivet_type_id SmoothPathSteps_type_id = 0xa6e24f1d; 

		explicit SVOAStarDebugDef() = default;
		explicit SVOAStarDebugDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLVector3> Start {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SVOAStarDebugStepElement>> Steps {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> End {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DDLVector3>> PathPoints {};
		std::vector<uint64_t> PathHandles {};
		std::vector<bool> SmoothingConsideredNeighbors {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Nav3DSmoothPathStepElement>> SmoothPathSteps {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SVOAStarDebugDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
