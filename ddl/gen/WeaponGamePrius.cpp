// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/DDLVector3.hpp>
#include <rivet/ddl/generated/WeaponMeleePrius.hpp>
#include <rivet/ddl/generated/BasicRecoilPrius.hpp>
#include <rivet/ddl/generated/WeaponTunnelerPrius.hpp>
#include <rivet/ddl/generated/WeaponMagShieldPrius.hpp>
#include <rivet/ddl/generated/WeaponBouncerPrius.hpp>
#include <rivet/ddl/generated/WeaponSchrodingerPrius.hpp>
#include <rivet/ddl/generated/WeaponPitOfDeathPrius.hpp>
#include <rivet/ddl/generated/WeaponRYNOPrius.hpp>
#include <rivet/ddl/generated/WeaponDetCordPrius.hpp>
#include <rivet/ddl/generated/WeaponFossilizerPrius.hpp>
#include <rivet/ddl/generated/WeaponKamehamehaPrius.hpp>
#include <rivet/ddl/generated/WeaponCarpetBomberPrius.hpp>
#include <rivet/ddl/generated/WeaponPyrocitorPrius.hpp>
#include <rivet/ddl/generated/WeaponRicochetPrius.hpp>
#include <rivet/ddl/generated/WeaponBurstPistolPrius.hpp>
#include <rivet/ddl/generated/WeaponRevolverPrius.hpp>
#include <rivet/ddl/generated/WeaponMrFunGuyPrius.hpp>
#include <rivet/ddl/generated/WeaponSheepinatorPrius.hpp>
#include <rivet/ddl/generated/WeaponPixelizerPrius.hpp>
#include <rivet/ddl/generated/WeaponStickyBlasterPrius.hpp>
#include <rivet/ddl/generated/WeaponWarpRiflePrius.hpp>
#include <rivet/ddl/generated/WeaponMagnaMissilePrius.hpp>
#include <rivet/ddl/generated/WeaponPredatorPrius.hpp>
#include <rivet/ddl/generated/WeaponBuzzBladesPrius.hpp>
#include <rivet/ddl/generated/WeaponPlasmaStrikerPrius.hpp>
#include <rivet/ddl/generated/WeaponNailGunPrius.hpp>
#include <rivet/ddl/generated/WeaponWarmongerPrius.hpp>
#include <rivet/ddl/generated/WeaponProtoShotgunPrius.hpp>
#include <rivet/ddl/generated/WeaponLightningRodPrius.hpp>
#include <rivet/ddl/generated/WeaponGroovitronPrius.hpp>
#include <rivet/ddl/generated/WeaponIcicleBlastPrius.hpp>
#include <rivet/ddl/generated/WeaponChargeUpPrius.hpp>
#include <rivet/ddl/generated/WeaponThumperPrius.hpp>
#include <rivet/ddl/generated/WeaponWalloperPrius.hpp>
#include <rivet/ddl/generated/WeaponClankPuzzlePrius.hpp>
#include <rivet/ddl/generated/WeaponTopiaryBlasterPrius.hpp>
#include <rivet/ddl/generated/WeaponBlunderBusterPrius.hpp>
#include <rivet/ddl/generated/WeaponFusionGrenadePrius.hpp>
#include <rivet/ddl/generated/WeaponZurkonPrius.hpp>
#include <rivet/ddl/generated/WeaponSeismicShockPrius.hpp>
#include <rivet/ddl/generated/WeaponBlasterPrius.hpp> 

#include <rivet/ddl/generated/WeaponGamePrius.hpp>

namespace rivet::ddl::generated {
	WeaponGamePrius::WeaponGamePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): WeaponBasePrius(serialized) {
		DebugColorEnabled = serialized->get_bool(DebugColorEnabled_type_id);
		DebugColor = serialized->unwrap_into<rivet::ddl::generated::DDLVector3>(DebugColor_type_id);
		IgnoreCameraContextVolumesForAiming = serialized->get_bool(IgnoreCameraContextVolumesForAiming_type_id);
		SupportsToggleFire = serialized->get_bool(SupportsToggleFire_type_id);
		SupportsHoldFire = serialized->get_bool(SupportsHoldFire_type_id);
		Recoil = serialized->unwrap_into_many<rivet::ddl::generated::BasicRecoilPrius>(Recoil_type_id); 
	}

	[[nodiscard]] auto
	WeaponGamePrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	WeaponGamePrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponGamePrius> {
		if (incoming_type_id == WeaponGamePrius::type_id) {
			return std::make_shared<WeaponGamePrius>(serialized);
		}

		auto WeaponTunnelerPrius_ptr = WeaponTunnelerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponTunnelerPrius_ptr != nullptr) {
			return WeaponTunnelerPrius_ptr;
		}

		auto WeaponSchrodingerPrius_ptr = WeaponSchrodingerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponSchrodingerPrius_ptr != nullptr) {
			return WeaponSchrodingerPrius_ptr;
		}

		auto WeaponRYNOPrius_ptr = WeaponRYNOPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponRYNOPrius_ptr != nullptr) {
			return WeaponRYNOPrius_ptr;
		}

		auto WeaponDetCordPrius_ptr = WeaponDetCordPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponDetCordPrius_ptr != nullptr) {
			return WeaponDetCordPrius_ptr;
		}

		auto WeaponCarpetBomberPrius_ptr = WeaponCarpetBomberPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponCarpetBomberPrius_ptr != nullptr) {
			return WeaponCarpetBomberPrius_ptr;
		}

		auto WeaponMeleePrius_ptr = WeaponMeleePrius::from_substruct(incoming_type_id, serialized);
		if (WeaponMeleePrius_ptr != nullptr) {
			return WeaponMeleePrius_ptr;
		}

		auto WeaponPyrocitorPrius_ptr = WeaponPyrocitorPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponPyrocitorPrius_ptr != nullptr) {
			return WeaponPyrocitorPrius_ptr;
		}

		auto WeaponBurstPistolPrius_ptr = WeaponBurstPistolPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponBurstPistolPrius_ptr != nullptr) {
			return WeaponBurstPistolPrius_ptr;
		}

		auto WeaponRicochetPrius_ptr = WeaponRicochetPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponRicochetPrius_ptr != nullptr) {
			return WeaponRicochetPrius_ptr;
		}

		auto WeaponMrFunGuyPrius_ptr = WeaponMrFunGuyPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponMrFunGuyPrius_ptr != nullptr) {
			return WeaponMrFunGuyPrius_ptr;
		}

		auto WeaponStickyBlasterPrius_ptr = WeaponStickyBlasterPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponStickyBlasterPrius_ptr != nullptr) {
			return WeaponStickyBlasterPrius_ptr;
		}

		auto WeaponWarpRiflePrius_ptr = WeaponWarpRiflePrius::from_substruct(incoming_type_id, serialized);
		if (WeaponWarpRiflePrius_ptr != nullptr) {
			return WeaponWarpRiflePrius_ptr;
		}

		auto WeaponBouncerPrius_ptr = WeaponBouncerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponBouncerPrius_ptr != nullptr) {
			return WeaponBouncerPrius_ptr;
		}

		auto WeaponMagnaMissilePrius_ptr = WeaponMagnaMissilePrius::from_substruct(incoming_type_id, serialized);
		if (WeaponMagnaMissilePrius_ptr != nullptr) {
			return WeaponMagnaMissilePrius_ptr;
		}

		auto WeaponPredatorPrius_ptr = WeaponPredatorPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponPredatorPrius_ptr != nullptr) {
			return WeaponPredatorPrius_ptr;
		}

		auto WeaponPlasmaStrikerPrius_ptr = WeaponPlasmaStrikerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponPlasmaStrikerPrius_ptr != nullptr) {
			return WeaponPlasmaStrikerPrius_ptr;
		}

		auto WeaponWarmongerPrius_ptr = WeaponWarmongerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponWarmongerPrius_ptr != nullptr) {
			return WeaponWarmongerPrius_ptr;
		}

		auto WeaponPitOfDeathPrius_ptr = WeaponPitOfDeathPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponPitOfDeathPrius_ptr != nullptr) {
			return WeaponPitOfDeathPrius_ptr;
		}

		auto WeaponMagShieldPrius_ptr = WeaponMagShieldPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponMagShieldPrius_ptr != nullptr) {
			return WeaponMagShieldPrius_ptr;
		}

		auto WeaponProtoShotgunPrius_ptr = WeaponProtoShotgunPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponProtoShotgunPrius_ptr != nullptr) {
			return WeaponProtoShotgunPrius_ptr;
		}

		auto WeaponLightningRodPrius_ptr = WeaponLightningRodPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponLightningRodPrius_ptr != nullptr) {
			return WeaponLightningRodPrius_ptr;
		}

		auto WeaponGroovitronPrius_ptr = WeaponGroovitronPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponGroovitronPrius_ptr != nullptr) {
			return WeaponGroovitronPrius_ptr;
		}

		auto WeaponIcicleBlastPrius_ptr = WeaponIcicleBlastPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponIcicleBlastPrius_ptr != nullptr) {
			return WeaponIcicleBlastPrius_ptr;
		}

		auto WeaponKamehamehaPrius_ptr = WeaponKamehamehaPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponKamehamehaPrius_ptr != nullptr) {
			return WeaponKamehamehaPrius_ptr;
		}

		auto WeaponNailGunPrius_ptr = WeaponNailGunPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponNailGunPrius_ptr != nullptr) {
			return WeaponNailGunPrius_ptr;
		}

		auto WeaponChargeUpPrius_ptr = WeaponChargeUpPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponChargeUpPrius_ptr != nullptr) {
			return WeaponChargeUpPrius_ptr;
		}

		auto WeaponRevolverPrius_ptr = WeaponRevolverPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponRevolverPrius_ptr != nullptr) {
			return WeaponRevolverPrius_ptr;
		}

		auto WeaponThumperPrius_ptr = WeaponThumperPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponThumperPrius_ptr != nullptr) {
			return WeaponThumperPrius_ptr;
		}

		auto WeaponPixelizerPrius_ptr = WeaponPixelizerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponPixelizerPrius_ptr != nullptr) {
			return WeaponPixelizerPrius_ptr;
		}

		auto WeaponWalloperPrius_ptr = WeaponWalloperPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponWalloperPrius_ptr != nullptr) {
			return WeaponWalloperPrius_ptr;
		}

		auto WeaponClankPuzzlePrius_ptr = WeaponClankPuzzlePrius::from_substruct(incoming_type_id, serialized);
		if (WeaponClankPuzzlePrius_ptr != nullptr) {
			return WeaponClankPuzzlePrius_ptr;
		}

		auto WeaponBlunderBusterPrius_ptr = WeaponBlunderBusterPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponBlunderBusterPrius_ptr != nullptr) {
			return WeaponBlunderBusterPrius_ptr;
		}

		auto WeaponFusionGrenadePrius_ptr = WeaponFusionGrenadePrius::from_substruct(incoming_type_id, serialized);
		if (WeaponFusionGrenadePrius_ptr != nullptr) {
			return WeaponFusionGrenadePrius_ptr;
		}

		auto WeaponFossilizerPrius_ptr = WeaponFossilizerPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponFossilizerPrius_ptr != nullptr) {
			return WeaponFossilizerPrius_ptr;
		}

		auto WeaponSeismicShockPrius_ptr = WeaponSeismicShockPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponSeismicShockPrius_ptr != nullptr) {
			return WeaponSeismicShockPrius_ptr;
		}

		auto WeaponBlasterPrius_ptr = WeaponBlasterPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponBlasterPrius_ptr != nullptr) {
			return WeaponBlasterPrius_ptr;
		}

		auto WeaponSheepinatorPrius_ptr = WeaponSheepinatorPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponSheepinatorPrius_ptr != nullptr) {
			return WeaponSheepinatorPrius_ptr;
		}

		auto WeaponTopiaryBlasterPrius_ptr = WeaponTopiaryBlasterPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponTopiaryBlasterPrius_ptr != nullptr) {
			return WeaponTopiaryBlasterPrius_ptr;
		}

		auto WeaponZurkonPrius_ptr = WeaponZurkonPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponZurkonPrius_ptr != nullptr) {
			return WeaponZurkonPrius_ptr;
		}

		auto WeaponBuzzBladesPrius_ptr = WeaponBuzzBladesPrius::from_substruct(incoming_type_id, serialized);
		if (WeaponBuzzBladesPrius_ptr != nullptr) {
			return WeaponBuzzBladesPrius_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
