// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct DebugDrawColor; 

	struct RIVET_DDL_SHARED DebugDrawCurveActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DebugDrawCurveActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0xef62f3f5;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view Color_type_name = "Color";
		constexpr static rivet::rivet_type_id Color_type_id = 0x7f058428;
		constexpr static std::string_view YOffset_type_name = "YOffset";
		constexpr static rivet::rivet_type_id YOffset_type_id = 0xa1247fb;
		constexpr static std::string_view LineWidth_type_name = "LineWidth";
		constexpr static rivet::rivet_type_id LineWidth_type_id = 0x194e76e5;
		constexpr static std::string_view DrawPoints_type_name = "DrawPoints";
		constexpr static rivet::rivet_type_id DrawPoints_type_id = 0x9abf1d2a;
		constexpr static std::string_view DrawTangents_type_name = "DrawTangents";
		constexpr static rivet::rivet_type_id DrawTangents_type_id = 0xb609818d;
		constexpr static std::string_view DrawMatrix_type_name = "DrawMatrix";
		constexpr static rivet::rivet_type_id DrawMatrix_type_id = 0x4536d2cc; 

		explicit DebugDrawCurveActionPrius() = default;
		explicit DebugDrawCurveActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::shared_ptr<rivet::ddl::generated::DebugDrawColor> Color {};
		float YOffset {};
		float LineWidth {};
		bool DrawPoints {};
		bool DrawTangents {};
		bool DrawMatrix {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugDrawCurveActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
