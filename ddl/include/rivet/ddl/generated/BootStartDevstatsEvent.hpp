// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x8b182f8e.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BootStartDevstatsEvent : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BootStartDevstatsEvent";
		constexpr static rivet::rivet_type_id type_id = 0x7f516d00;

		constexpr static std::string_view event_type_type_name = "event_type";
		constexpr static rivet::rivet_type_id event_type_type_id = 0x77e466b;
		constexpr static std::string_view title_name_type_name = "title_name";
		constexpr static rivet::rivet_type_id title_name_type_id = 0x8192f990;
		constexpr static std::string_view issuer_id_type_name = "issuer_id";
		constexpr static rivet::rivet_type_id issuer_id_type_id = 0xbb917241;
		constexpr static std::string_view platform_type_name = "platform";
		constexpr static rivet::rivet_type_id platform_type_id = 0x3a250fed;
		constexpr static std::string_view device_type_type_name = "device_type";
		constexpr static rivet::rivet_type_id device_type_type_id = 0xea75c1f;
		constexpr static std::string_view build_version_type_name = "build_version";
		constexpr static rivet::rivet_type_id build_version_type_id = 0x1e8e072f;
		constexpr static std::string_view build_name_type_name = "build_name";
		constexpr static rivet::rivet_type_id build_name_type_id = 0xcd344e05;
		constexpr static std::string_view launch_method_type_name = "launch_method";
		constexpr static rivet::rivet_type_id launch_method_type_id = 0xb87062a0;
		constexpr static std::string_view owner_id_type_name = "owner_id";
		constexpr static rivet::rivet_type_id owner_id_type_id = 0x7d4bbedf; 

		explicit BootStartDevstatsEvent() = default;
		explicit BootStartDevstatsEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view event_type {};
		std::string_view title_name {};
		std::string_view issuer_id {};
		std::string_view platform {};
		std::string_view device_type {};
		std::string_view build_version {};
		std::string_view build_name {};
		rivet::ddl::generated::x8b182f8e launch_method {};
		std::string_view owner_id {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BootStartDevstatsEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
