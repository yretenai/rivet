// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xa1814bf4.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HoudiniMenuItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HoudiniMenuItem";
		constexpr static rivet::rivet_type_id type_id = 0xed89b267;

		constexpr static std::string_view Title_type_name = "Title";
		constexpr static rivet::rivet_type_id Title_type_id = 0x3265b4aa;
		constexpr static std::string_view Tooltip_type_name = "Tooltip";
		constexpr static rivet::rivet_type_id Tooltip_type_id = 0xa0533c88;
		constexpr static std::string_view HythonCode_type_name = "HythonCode";
		constexpr static rivet::rivet_type_id HythonCode_type_id = 0x1f0caeb4;
		constexpr static std::string_view Behavior_type_name = "Behavior";
		constexpr static rivet::rivet_type_id Behavior_type_id = 0xc1aa1dc0; 

		explicit HoudiniMenuItem() = default;
		explicit HoudiniMenuItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Title {};
		std::string_view Tooltip {};
		std::vector<std::string_view> HythonCode {};
		rivet::ddl::generated::xa1814bf4 Behavior {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HoudiniMenuItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
