// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotComboMoveBase.hpp> 

namespace rivet::ddl::generated {
	struct ProtonSeekerFiringPattern; 

	struct RIVET_DDL_SHARED BotComboMoveFinaleProtonSeeker : BotComboMoveBase {
		constexpr static std::string_view type_name = "BotComboMoveFinaleProtonSeeker";
		constexpr static rivet::rivet_type_id type_id = 0x12896da3;

		constexpr static std::string_view SpawnedShotConfigTargeted_type_name = "SpawnedShotConfigTargeted";
		constexpr static rivet::rivet_type_id SpawnedShotConfigTargeted_type_id = 0x332351ea;
		constexpr static std::string_view SpawnedShotConfigScatter_type_name = "SpawnedShotConfigScatter";
		constexpr static rivet::rivet_type_id SpawnedShotConfigScatter_type_id = 0x21ea3f;
		constexpr static std::string_view SpawnedShotConfigExplosive_type_name = "SpawnedShotConfigExplosive";
		constexpr static rivet::rivet_type_id SpawnedShotConfigExplosive_type_id = 0xfeaa8997;
		constexpr static std::string_view PortalActorAsset_type_name = "PortalActorAsset";
		constexpr static rivet::rivet_type_id PortalActorAsset_type_id = 0xfec29c86;
		constexpr static std::string_view WeaponActorAsset_type_name = "WeaponActorAsset";
		constexpr static rivet::rivet_type_id WeaponActorAsset_type_id = 0xf03001b;
		constexpr static std::string_view WeaponActorId_type_name = "WeaponActorId";
		constexpr static rivet::rivet_type_id WeaponActorId_type_id = 0x59c9ba1f;
		constexpr static std::string_view WeaponActorVol_type_name = "WeaponActorVol";
		constexpr static rivet::rivet_type_id WeaponActorVol_type_id = 0x3ddbd4ba;
		constexpr static std::string_view WeaponActorEmitLocator_type_name = "WeaponActorEmitLocator";
		constexpr static rivet::rivet_type_id WeaponActorEmitLocator_type_id = 0x40094dbd;
		constexpr static std::string_view CancelOutOfVolume_type_name = "CancelOutOfVolume";
		constexpr static rivet::rivet_type_id CancelOutOfVolume_type_id = 0xb95b8abe;
		constexpr static std::string_view RemainAfterAttack_type_name = "RemainAfterAttack";
		constexpr static rivet::rivet_type_id RemainAfterAttack_type_id = 0xe09d2afc;
		constexpr static std::string_view GoThruEachFiringPattern_type_name = "GoThruEachFiringPattern";
		constexpr static rivet::rivet_type_id GoThruEachFiringPattern_type_id = 0xd081eca5;
		constexpr static std::string_view FiringPatterns_type_name = "FiringPatterns";
		constexpr static rivet::rivet_type_id FiringPatterns_type_id = 0xe7a793dd; 

		explicit BotComboMoveFinaleProtonSeeker() = default;
		explicit BotComboMoveFinaleProtonSeeker([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view SpawnedShotConfigTargeted {};
		std::string_view SpawnedShotConfigScatter {};
		std::string_view SpawnedShotConfigExplosive {};
		std::string_view PortalActorAsset {};
		std::string_view WeaponActorAsset {};
		uint64_t WeaponActorId {};
		uint64_t WeaponActorVol {};
		std::string_view WeaponActorEmitLocator {};
		bool CancelOutOfVolume {};
		bool RemainAfterAttack {};
		bool GoThruEachFiringPattern {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ProtonSeekerFiringPattern>> FiringPatterns {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotComboMoveFinaleProtonSeeker>;
	};
} // namespace rivet::ddl::generated

// clang-format on
