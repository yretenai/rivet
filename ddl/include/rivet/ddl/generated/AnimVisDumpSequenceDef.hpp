// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct AnimVisDumpMorphTargetDef;
	struct AnimVisDumpJointDef; 

	struct RIVET_DDL_SHARED AnimVisDumpSequenceDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimVisDumpSequenceDef";
		constexpr static rivet::rivet_type_id type_id = 0xf752ff17;

		constexpr static std::string_view FrameCount_type_name = "FrameCount";
		constexpr static rivet::rivet_type_id FrameCount_type_id = 0x163326b9;
		constexpr static std::string_view TimeStart_type_name = "TimeStart";
		constexpr static rivet::rivet_type_id TimeStart_type_id = 0x2cdd9cb1;
		constexpr static std::string_view TimeEnd_type_name = "TimeEnd";
		constexpr static rivet::rivet_type_id TimeEnd_type_id = 0x1f00e62;
		constexpr static std::string_view SampleRate_type_name = "SampleRate";
		constexpr static rivet::rivet_type_id SampleRate_type_id = 0xb9228075;
		constexpr static std::string_view JointNames_type_name = "JointNames";
		constexpr static rivet::rivet_type_id JointNames_type_id = 0xcedbe25;
		constexpr static std::string_view MorphTargetNames_type_name = "MorphTargetNames";
		constexpr static rivet::rivet_type_id MorphTargetNames_type_id = 0x5a71d67a;
		constexpr static std::string_view Joints_type_name = "Joints";
		constexpr static rivet::rivet_type_id Joints_type_id = 0xbb8fe1b3;
		constexpr static std::string_view MorphTargets_type_name = "MorphTargets";
		constexpr static rivet::rivet_type_id MorphTargets_type_id = 0x31092478; 

		explicit AnimVisDumpSequenceDef() = default;
		explicit AnimVisDumpSequenceDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t FrameCount {};
		float TimeStart {};
		float TimeEnd {};
		float SampleRate {};
		std::vector<std::string_view> JointNames {};
		std::vector<std::string_view> MorphTargetNames {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimVisDumpJointDef>> Joints {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimVisDumpMorphTargetDef>> MorphTargets {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimVisDumpSequenceDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
