// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/SpaceshipHeroFlightConfig.hpp>

namespace rivet::ddl::generated {
	SpaceshipHeroFlightConfig::SpaceshipHeroFlightConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): ConfigBase(serialized) {
		HitCollDmgPercent = serialized->get_float(HitCollDmgPercent_type_id, 0.100000f);
		HitCollDmgMinAmount = serialized->get_float(HitCollDmgMinAmount_type_id, 1.000000f);
		TargetingRange = serialized->get_float(TargetingRange_type_id, 200.000000f);
		DefaultMovementSpeed = serialized->get_float(DefaultMovementSpeed_type_id, 20.000000f);
		FiringMovmentSpeed = serialized->get_float(FiringMovmentSpeed_type_id, 15.000000f);
		ThrustMovementSpeed = serialized->get_float(ThrustMovementSpeed_type_id, 50.000000f);
		AllowBulletsWhenThrusting = serialized->get_bool(AllowBulletsWhenThrusting_type_id, false);
		AllowNonDirRoll = serialized->get_bool(AllowNonDirRoll_type_id, false);
		CamDefaultFOV = serialized->get_float(CamDefaultFOV_type_id, 80.389999f);
		CamDefaultFollowHeight = serialized->get_float(CamDefaultFollowHeight_type_id, 6.250000f);
		CamDefaultFollowDist = serialized->get_float(CamDefaultFollowDist_type_id, -18.500000f);
		CamDefaultTargetRelYOffset = serialized->get_float(CamDefaultTargetRelYOffset_type_id, -1.000000f);
		CamDefaultBasePitchOffset = serialized->get_float(CamDefaultBasePitchOffset_type_id, 4.050000f); 
	}

	[[nodiscard]] auto
	SpaceshipHeroFlightConfig::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	SpaceshipHeroFlightConfig::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SpaceshipHeroFlightConfig> {
		if (incoming_type_id == SpaceshipHeroFlightConfig::type_id) {
			return std::make_shared<SpaceshipHeroFlightConfig>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
