// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RetargetWalk : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RetargetWalk";
		constexpr static rivet::rivet_type_id type_id = 0x1dfb5dec;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view MinHideTime_type_name = "MinHideTime";
		constexpr static rivet::rivet_type_id MinHideTime_type_id = 0xc4bc3fc;
		constexpr static std::string_view DelayBeforeWalk_type_name = "DelayBeforeWalk";
		constexpr static rivet::rivet_type_id DelayBeforeWalk_type_id = 0x4acbe5dc;
		constexpr static std::string_view WalkTime_type_name = "WalkTime";
		constexpr static rivet::rivet_type_id WalkTime_type_id = 0x6b41dcdb;
		constexpr static std::string_view WaitingAimMul_type_name = "WaitingAimMul";
		constexpr static rivet::rivet_type_id WaitingAimMul_type_id = 0x1c92d996;
		constexpr static std::string_view LowCoverOffsetY_type_name = "LowCoverOffsetY";
		constexpr static rivet::rivet_type_id LowCoverOffsetY_type_id = 0x5dd4e668;
		constexpr static std::string_view LowCoverOffsetZ_type_name = "LowCoverOffsetZ";
		constexpr static rivet::rivet_type_id LowCoverOffsetZ_type_id = 0xc4ddb7d2;
		constexpr static std::string_view HighCoverOffsetY_type_name = "HighCoverOffsetY";
		constexpr static rivet::rivet_type_id HighCoverOffsetY_type_id = 0xfda4440d;
		constexpr static std::string_view HighCoverOffsetZ_type_name = "HighCoverOffsetZ";
		constexpr static rivet::rivet_type_id HighCoverOffsetZ_type_id = 0x64ad15b7; 

		explicit RetargetWalk() = default;
		explicit RetargetWalk([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		float MinHideTime {};
		float DelayBeforeWalk {};
		float WalkTime {};
		float WaitingAimMul {};
		float LowCoverOffsetY {};
		float LowCoverOffsetZ {};
		float HighCoverOffsetY {};
		float HighCoverOffsetZ {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RetargetWalk>;
	};
} // namespace rivet::ddl::generated

// clang-format on
