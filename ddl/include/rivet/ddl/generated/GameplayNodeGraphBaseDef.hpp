// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/NodeGraphBaseDef.hpp> 

namespace rivet::ddl::generated {
	struct CommentBaseDef;
	struct ConnectionTuidDef;
	struct ReferencedGraphNodeBaseDef;
	struct EmbeddedGraphNodeBaseDef; 

	struct RIVET_DDL_SHARED GameplayNodeGraphBaseDef : NodeGraphBaseDef {
		constexpr static std::string_view type_name = "GameplayNodeGraphBaseDef";
		constexpr static rivet::rivet_type_id type_id = 0xe91b7f23;

		constexpr static std::string_view EmbeddedSubGraphs_type_name = "EmbeddedSubGraphs";
		constexpr static rivet::rivet_type_id EmbeddedSubGraphs_type_id = 0x5895c331;
		constexpr static std::string_view SubGraphs_type_name = "SubGraphs";
		constexpr static rivet::rivet_type_id SubGraphs_type_id = 0x774f06ee;
		constexpr static std::string_view Connections_type_name = "Connections";
		constexpr static rivet::rivet_type_id Connections_type_id = 0x322aadce;
		constexpr static std::string_view Comments_type_name = "Comments";
		constexpr static rivet::rivet_type_id Comments_type_id = 0xa59f2b5a; 

		explicit GameplayNodeGraphBaseDef() = default;
		explicit GameplayNodeGraphBaseDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::EmbeddedGraphNodeBaseDef>> EmbeddedSubGraphs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ReferencedGraphNodeBaseDef>> SubGraphs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ConnectionTuidDef>> Connections {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CommentBaseDef>> Comments {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameplayNodeGraphBaseDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
