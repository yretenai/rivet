// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BotCommandJuiceDistractionScriptActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BotCommandJuiceDistractionScriptActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x560743d5;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view DistractionAlertAnim_type_name = "DistractionAlertAnim";
		constexpr static rivet::rivet_type_id DistractionAlertAnim_type_id = 0x6376fae0;
		constexpr static std::string_view DistractionIntroAnim_type_name = "DistractionIntroAnim";
		constexpr static rivet::rivet_type_id DistractionIntroAnim_type_id = 0x4c126e6c;
		constexpr static std::string_view DistractionLoopAnim_type_name = "DistractionLoopAnim";
		constexpr static rivet::rivet_type_id DistractionLoopAnim_type_id = 0xbde81daa;
		constexpr static std::string_view DistractionOutroAnim_type_name = "DistractionOutroAnim";
		constexpr static rivet::rivet_type_id DistractionOutroAnim_type_id = 0x1ed93a9b;
		constexpr static std::string_view DistractionTime_type_name = "DistractionTime";
		constexpr static rivet::rivet_type_id DistractionTime_type_id = 0xe4701ac7; 

		explicit BotCommandJuiceDistractionScriptActionPrius() = default;
		explicit BotCommandJuiceDistractionScriptActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view DistractionAlertAnim {};
		std::string_view DistractionIntroAnim {};
		std::string_view DistractionLoopAnim {};
		std::string_view DistractionOutroAnim {};
		float DistractionTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotCommandJuiceDistractionScriptActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
