// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct MouseControl; 

	struct RIVET_DDL_SHARED PreferencesSave : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PreferencesSave";
		constexpr static rivet::rivet_type_id type_id = 0x8579df44;

		constexpr static std::string_view LookSensitivity_type_name = "LookSensitivity";
		constexpr static rivet::rivet_type_id LookSensitivity_type_id = 0x687252d3;
		constexpr static std::string_view GammaCorrection_type_name = "GammaCorrection";
		constexpr static rivet::rivet_type_id GammaCorrection_type_id = 0x7ce7a3ec;
		constexpr static std::string_view CameraInvertX_type_name = "CameraInvertX";
		constexpr static rivet::rivet_type_id CameraInvertX_type_id = 0xbec8f849;
		constexpr static std::string_view CameraInvertY_type_name = "CameraInvertY";
		constexpr static rivet::rivet_type_id CameraInvertY_type_id = 0xc9cfc8df;
		constexpr static std::string_view RumbleEnabled_type_name = "RumbleEnabled";
		constexpr static rivet::rivet_type_id RumbleEnabled_type_id = 0x386a1547;
		constexpr static std::string_view ControllerSpeakerEnabled_type_name = "ControllerSpeakerEnabled";
		constexpr static rivet::rivet_type_id ControllerSpeakerEnabled_type_id = 0xdf19bbde;
		constexpr static std::string_view SubtitlesEnabled_type_name = "SubtitlesEnabled";
		constexpr static rivet::rivet_type_id SubtitlesEnabled_type_id = 0x7fe01227;
		constexpr static std::string_view TextSubtitlesEnabled_type_name = "TextSubtitlesEnabled";
		constexpr static rivet::rivet_type_id TextSubtitlesEnabled_type_id = 0xf08f6078;
		constexpr static std::string_view GoreEnabled_type_name = "GoreEnabled";
		constexpr static rivet::rivet_type_id GoreEnabled_type_id = 0xfb2e249b;
		constexpr static std::string_view ProfanityEnabled_type_name = "ProfanityEnabled";
		constexpr static rivet::rivet_type_id ProfanityEnabled_type_id = 0x288fa10a;
		constexpr static std::string_view OutlinesEnabled_type_name = "OutlinesEnabled";
		constexpr static rivet::rivet_type_id OutlinesEnabled_type_id = 0x29e32c27;
		constexpr static std::string_view VoiceChatEnabled_type_name = "VoiceChatEnabled";
		constexpr static rivet::rivet_type_id VoiceChatEnabled_type_id = 0xfa015d76;
		constexpr static std::string_view MasterVolume_type_name = "MasterVolume";
		constexpr static rivet::rivet_type_id MasterVolume_type_id = 0xc3c57025;
		constexpr static std::string_view MusicVolume_type_name = "MusicVolume";
		constexpr static rivet::rivet_type_id MusicVolume_type_id = 0xde5b0e67;
		constexpr static std::string_view DialogVolume_type_name = "DialogVolume";
		constexpr static rivet::rivet_type_id DialogVolume_type_id = 0x74cab5ec;
		constexpr static std::string_view SFXVolume_type_name = "SFXVolume";
		constexpr static rivet::rivet_type_id SFXVolume_type_id = 0x5de67143;
		constexpr static std::string_view UIVolume_type_name = "UIVolume";
		constexpr static rivet::rivet_type_id UIVolume_type_id = 0xa5f4a40c;
		constexpr static std::string_view HitConfirmVolume_type_name = "HitConfirmVolume";
		constexpr static rivet::rivet_type_id HitConfirmVolume_type_id = 0x5f94eee6;
		constexpr static std::string_view ControllerSpeakerVolume_type_name = "ControllerSpeakerVolume";
		constexpr static rivet::rivet_type_id ControllerSpeakerVolume_type_id = 0x336e1824;
		constexpr static std::string_view ListeningMode_type_name = "ListeningMode";
		constexpr static rivet::rivet_type_id ListeningMode_type_id = 0x4b360d91;
		constexpr static std::string_view HeadphonesListeningMode_type_name = "HeadphonesListeningMode";
		constexpr static rivet::rivet_type_id HeadphonesListeningMode_type_id = 0xd78a4e53;
		constexpr static std::string_view UIAdjustX_type_name = "UIAdjustX";
		constexpr static rivet::rivet_type_id UIAdjustX_type_id = 0x6e3c6b00;
		constexpr static std::string_view UIAdjustY_type_name = "UIAdjustY";
		constexpr static rivet::rivet_type_id UIAdjustY_type_id = 0x193b5b96;
		constexpr static std::string_view UIAdjustW_type_name = "UIAdjustW";
		constexpr static rivet::rivet_type_id UIAdjustW_type_id = 0xfe837691;
		constexpr static std::string_view UIAdjustH_type_name = "UIAdjustH";
		constexpr static rivet::rivet_type_id UIAdjustH_type_id = 0x738b7b64;
		constexpr static std::string_view MouseControlNormal_type_name = "MouseControlNormal";
		constexpr static rivet::rivet_type_id MouseControlNormal_type_id = 0x77d219fa;
		constexpr static std::string_view MouseControlAiming_type_name = "MouseControlAiming";
		constexpr static rivet::rivet_type_id MouseControlAiming_type_id = 0x16fd74dd; 

		explicit PreferencesSave() = default;
		explicit PreferencesSave([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float LookSensitivity {};
		float GammaCorrection {};
		bool CameraInvertX {};
		bool CameraInvertY {};
		bool RumbleEnabled {};
		bool ControllerSpeakerEnabled {};
		bool SubtitlesEnabled {};
		bool TextSubtitlesEnabled {};
		bool GoreEnabled {};
		bool ProfanityEnabled {};
		bool OutlinesEnabled {};
		bool VoiceChatEnabled {};
		float MasterVolume {};
		float MusicVolume {};
		float DialogVolume {};
		float SFXVolume {};
		float UIVolume {};
		float HitConfirmVolume {};
		float ControllerSpeakerVolume {};
		int32_t ListeningMode {};
		int32_t HeadphonesListeningMode {};
		int32_t UIAdjustX {};
		int32_t UIAdjustY {};
		int32_t UIAdjustW {};
		int32_t UIAdjustH {};
		std::shared_ptr<rivet::ddl::generated::MouseControl> MouseControlNormal {};
		std::shared_ptr<rivet::ddl::generated::MouseControl> MouseControlAiming {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PreferencesSave>;
	};
} // namespace rivet::ddl::generated

// clang-format on
