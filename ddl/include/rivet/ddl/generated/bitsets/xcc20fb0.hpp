// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view xcc20fb0_type_name = "xcc20fb0";
	constexpr static rivet::rivet_type_id xcc20fb0_type_id = 0xcc20fb0;

	constexpr static std::array<std::tuple<std::string_view, uint64_t>, 10> xcc20fb0_values = {
		std::make_tuple("kTypeVisualEffect", 0x1),
		std::make_tuple("kTypeImpostor", 0x2),
		std::make_tuple("kTypeModel", 0x4),
		std::make_tuple("kTypeActor", 0x8),
		std::make_tuple("kTypeLight", 0x10),
		std::make_tuple("kTypeLightGrid", 0x20),
		std::make_tuple("kTypeEnvProbe", 0x40),
		std::make_tuple("kTypeDecal", 0x80),
		std::make_tuple("kTypeAtmosphere", 0x100),
		std::make_tuple("kTypeWater", 0x200), 
	};

	enum class xcc20fb0 : uint64_t {
		TypeVisualEffect = 0x1,
		TypeImpostor = 0x2,
		TypeModel = 0x4,
		TypeActor = 0x8,
		TypeLight = 0x10,
		TypeLightGrid = 0x20,
		TypeEnvProbe = 0x40,
		TypeDecal = 0x80,
		TypeAtmosphere = 0x100,
		TypeWater = 0x200, 
	};
} // namespace rivet::ddl::generated

// clang-format on
