// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x6200f389.hpp>
#include <rivet/ddl/generated/TriggerByBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct TriggerByOthersEntry; 

	struct RIVET_DDL_SHARED TriggerByOthersPrius : TriggerByBasePrius {
		constexpr static std::string_view type_name = "TriggerByOthersPrius";
		constexpr static rivet::rivet_type_id type_id = 0x25134682;

		constexpr static std::string_view Mode_type_name = "Mode";
		constexpr static rivet::rivet_type_id Mode_type_id = 0xa75a871b;
		constexpr static std::string_view Number_type_name = "Number";
		constexpr static rivet::rivet_type_id Number_type_id = 0xa8e85133;
		constexpr static std::string_view TriggeringActors_type_name = "TriggeringActors";
		constexpr static rivet::rivet_type_id TriggeringActors_type_id = 0xc435c16c; 

		explicit TriggerByOthersPrius() = default;
		explicit TriggerByOthersPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x6200f389 Mode {};
		int32_t Number {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TriggerByOthersEntry>> TriggeringActors {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TriggerByOthersPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
