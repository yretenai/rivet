// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ChangeBatch; 

	struct RIVET_DDL_SHARED ModifyRequest : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ModifyRequest";
		constexpr static rivet::rivet_type_id type_id = 0x1bcb3ca6;

		constexpr static std::string_view SessionId_type_name = "SessionId";
		constexpr static rivet::rivet_type_id SessionId_type_id = 0xbbad2afa;
		constexpr static std::string_view Replayable_type_name = "Replayable";
		constexpr static rivet::rivet_type_id Replayable_type_id = 0x37817015;
		constexpr static std::string_view Batch_type_name = "Batch";
		constexpr static rivet::rivet_type_id Batch_type_id = 0xe1589e15;
		constexpr static std::string_view MergeJson_type_name = "MergeJson";
		constexpr static rivet::rivet_type_id MergeJson_type_id = 0x84761034;
		constexpr static std::string_view ClientData_type_name = "ClientData";
		constexpr static rivet::rivet_type_id ClientData_type_id = 0xbc38883a;
		constexpr static std::string_view Source_type_name = "Source";
		constexpr static rivet::rivet_type_id Source_type_id = 0x61f23114; 

		explicit ModifyRequest() = default;
		explicit ModifyRequest([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t SessionId {};
		bool Replayable {};
		std::shared_ptr<rivet::ddl::generated::ChangeBatch> Batch {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> MergeJson {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> ClientData {};
		std::string_view Source {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ModifyRequest>;
	};
} // namespace rivet::ddl::generated

// clang-format on
