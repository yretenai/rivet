// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VolumetricCloudsWindDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VolumetricCloudsWindDef";
		constexpr static rivet::rivet_type_id type_id = 0x13f293b2;

		constexpr static std::string_view WindAzimuth_type_name = "WindAzimuth";
		constexpr static rivet::rivet_type_id WindAzimuth_type_id = 0x931be921;
		constexpr static std::string_view WindIntensity_type_name = "WindIntensity";
		constexpr static rivet::rivet_type_id WindIntensity_type_id = 0x1595bff9;
		constexpr static std::string_view EnabledRotation_type_name = "EnabledRotation";
		constexpr static rivet::rivet_type_id EnabledRotation_type_id = 0x2c6c3d4a;
		constexpr static std::string_view RotationPivotAzimuth_type_name = "RotationPivotAzimuth";
		constexpr static rivet::rivet_type_id RotationPivotAzimuth_type_id = 0x2a4a3014;
		constexpr static std::string_view RotationPivotDistance_type_name = "RotationPivotDistance";
		constexpr static rivet::rivet_type_id RotationPivotDistance_type_id = 0xdb7d6806;
		constexpr static std::string_view RotationIntensity_type_name = "RotationIntensity";
		constexpr static rivet::rivet_type_id RotationIntensity_type_id = 0x54e789cb;
		constexpr static std::string_view RisingVaporIntensity_type_name = "RisingVaporIntensity";
		constexpr static rivet::rivet_type_id RisingVaporIntensity_type_id = 0xfdf15711;
		constexpr static std::string_view NoiseFlowAzimuth_type_name = "NoiseFlowAzimuth";
		constexpr static rivet::rivet_type_id NoiseFlowAzimuth_type_id = 0xa84042f9;
		constexpr static std::string_view NoiseFlowIntensity_type_name = "NoiseFlowIntensity";
		constexpr static rivet::rivet_type_id NoiseFlowIntensity_type_id = 0x1d70b1d5; 

		explicit VolumetricCloudsWindDef() = default;
		explicit VolumetricCloudsWindDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float WindAzimuth {};
		float WindIntensity {};
		bool EnabledRotation {};
		float RotationPivotAzimuth {};
		float RotationPivotDistance {};
		float RotationIntensity {};
		float RisingVaporIntensity {};
		float NoiseFlowAzimuth {};
		float NoiseFlowIntensity {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VolumetricCloudsWindDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
