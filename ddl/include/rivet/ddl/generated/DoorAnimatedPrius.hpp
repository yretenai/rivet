// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/DoorPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DoorAnimatedPrius : DoorPrius {
		constexpr static std::string_view type_name = "DoorAnimatedPrius";
		constexpr static rivet::rivet_type_id type_id = 0x884fb111;

		constexpr static std::string_view AnimRate_type_name = "AnimRate";
		constexpr static rivet::rivet_type_id AnimRate_type_id = 0x482857f1;
		constexpr static std::string_view OpenAnim_type_name = "OpenAnim";
		constexpr static rivet::rivet_type_id OpenAnim_type_id = 0xe2664399;
		constexpr static std::string_view OpenIdleAnim_type_name = "OpenIdleAnim";
		constexpr static rivet::rivet_type_id OpenIdleAnim_type_id = 0x3ec25832;
		constexpr static std::string_view CloseAnim_type_name = "CloseAnim";
		constexpr static rivet::rivet_type_id CloseAnim_type_id = 0xc1192c10;
		constexpr static std::string_view CloseIdleAnim_type_name = "CloseIdleAnim";
		constexpr static rivet::rivet_type_id CloseIdleAnim_type_id = 0xe7d839d5;
		constexpr static std::string_view ReverseOpenAnim_type_name = "ReverseOpenAnim";
		constexpr static rivet::rivet_type_id ReverseOpenAnim_type_id = 0xf18bb3c6;
		constexpr static std::string_view ReverseCloseAnim_type_name = "ReverseCloseAnim";
		constexpr static rivet::rivet_type_id ReverseCloseAnim_type_id = 0x3ade8d85; 

		explicit DoorAnimatedPrius() = default;
		explicit DoorAnimatedPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float AnimRate {};
		std::string_view OpenAnim {};
		std::string_view OpenIdleAnim {};
		std::string_view CloseAnim {};
		std::string_view CloseIdleAnim {};
		std::string_view ReverseOpenAnim {};
		std::string_view ReverseCloseAnim {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DoorAnimatedPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
