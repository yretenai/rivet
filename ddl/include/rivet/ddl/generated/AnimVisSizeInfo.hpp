// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AnimVisSizeInfo : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimVisSizeInfo";
		constexpr static rivet::rivet_type_id type_id = 0x57e487a9;

		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view BuiltAnimSetSize_type_name = "BuiltAnimSetSize";
		constexpr static rivet::rivet_type_id BuiltAnimSetSize_type_id = 0xe421daec;
		constexpr static std::string_view BuiltClipsSize_type_name = "BuiltClipsSize";
		constexpr static rivet::rivet_type_id BuiltClipsSize_type_id = 0xe48f3b62;
		constexpr static std::string_view BuiltClipGroupsSize_type_name = "BuiltClipGroupsSize";
		constexpr static rivet::rivet_type_id BuiltClipGroupsSize_type_id = 0x4bc9a16b;
		constexpr static std::string_view BuiltDriversSize_type_name = "BuiltDriversSize";
		constexpr static rivet::rivet_type_id BuiltDriversSize_type_id = 0xee7544ee;
		constexpr static std::string_view ClipCount_type_name = "ClipCount";
		constexpr static rivet::rivet_type_id ClipCount_type_id = 0x11681bbb;
		constexpr static std::string_view ClipGroupCount_type_name = "ClipGroupCount";
		constexpr static rivet::rivet_type_id ClipGroupCount_type_id = 0x307f6ef5;
		constexpr static std::string_view DriverCount_type_name = "DriverCount";
		constexpr static rivet::rivet_type_id DriverCount_type_id = 0x734bac33; 

		explicit AnimVisSizeInfo() = default;
		explicit AnimVisSizeInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Name {};
		uint32_t BuiltAnimSetSize {};
		uint32_t BuiltClipsSize {};
		uint32_t BuiltClipGroupsSize {};
		uint32_t BuiltDriversSize {};
		uint32_t ClipCount {};
		uint32_t ClipGroupCount {};
		uint32_t DriverCount {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimVisSizeInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
