// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x6c25f7e9.hpp>
#include <rivet/ddl/generated/bitsets/x9bcbd6ed.hpp>
#include <rivet/ddl/generated/StructuredLogStatement.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector2; 

	struct RIVET_DDL_SHARED StructuredLogAnimDriverVar : StructuredLogStatement {
		constexpr static std::string_view type_name = "StructuredLogAnimDriverVar";
		constexpr static rivet::rivet_type_id type_id = 0xaf7f3cb8;

		constexpr static std::string_view Flags_type_name = "Flags";
		constexpr static rivet::rivet_type_id Flags_type_id = 0x12568d7b;
		constexpr static std::string_view Float_type_name = "Float";
		constexpr static rivet::rivet_type_id Float_type_id = 0xd0f69254;
		constexpr static std::string_view Vec2_type_name = "Vec2";
		constexpr static rivet::rivet_type_id Vec2_type_id = 0x979b80c3;
		constexpr static std::string_view NameHash_type_name = "NameHash";
		constexpr static rivet::rivet_type_id NameHash_type_id = 0xc2f561e2;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799; 

		explicit StructuredLogAnimDriverVar() = default;
		explicit StructuredLogAnimDriverVar([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x9bcbd6ed Flags {};
		float Float {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Vec2 {};
		uint32_t NameHash {};
		rivet::ddl::generated::x6c25f7e9 Type {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<StructuredLogAnimDriverVar>;
	};
} // namespace rivet::ddl::generated

// clang-format on
