// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct DevstatsPlayerPositionInfo; 

	struct RIVET_DDL_SHARED DevstatsOpenWorldTaskCompletedEvent : EventBase {
		constexpr static std::string_view type_name = "DevstatsOpenWorldTaskCompletedEvent";
		constexpr static rivet::rivet_type_id type_id = 0x3a918a6f;

		constexpr static std::string_view EventId_type_name = "EventId";
		constexpr static rivet::rivet_type_id EventId_type_id = 0x2ac4d854;
		constexpr static std::string_view LastGoldenPathMission_type_name = "LastGoldenPathMission";
		constexpr static rivet::rivet_type_id LastGoldenPathMission_type_id = 0x7f2ae876;
		constexpr static std::string_view TaskType_type_name = "TaskType";
		constexpr static rivet::rivet_type_id TaskType_type_id = 0xf404a41a;
		constexpr static std::string_view TaskName_type_name = "TaskName";
		constexpr static rivet::rivet_type_id TaskName_type_id = 0x26f98d35;
		constexpr static std::string_view TaskDuration_type_name = "TaskDuration";
		constexpr static rivet::rivet_type_id TaskDuration_type_id = 0xd70e1181;
		constexpr static std::string_view PlayerPosInfo_type_name = "PlayerPosInfo";
		constexpr static rivet::rivet_type_id PlayerPosInfo_type_id = 0xeadcc3e4; 

		explicit DevstatsOpenWorldTaskCompletedEvent() = default;
		explicit DevstatsOpenWorldTaskCompletedEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view EventId {};
		std::string_view LastGoldenPathMission {};
		std::string_view TaskType {};
		std::string_view TaskName {};
		float TaskDuration {};
		std::shared_ptr<rivet::ddl::generated::DevstatsPlayerPositionInfo> PlayerPosInfo {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DevstatsOpenWorldTaskCompletedEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
