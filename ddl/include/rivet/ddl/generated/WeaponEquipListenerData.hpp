// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct EquipLooksPair; 

	struct RIVET_DDL_SHARED WeaponEquipListenerData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "WeaponEquipListenerData";
		constexpr const static rivet::rivet_type_id type_id = 0xbc8bd80c;

		constexpr const static std::string_view Animset_type_name = "Animset";
		constexpr const static rivet::rivet_type_id Animset_type_id = 0xc7825311;
		constexpr const static std::string_view StartUnarmedChance_type_name = "StartUnarmedChance";
		constexpr const static rivet::rivet_type_id StartUnarmedChance_type_id = 0x579e93c1;
		constexpr const static std::string_view EnableAutoEquip_type_name = "EnableAutoEquip";
		constexpr const static rivet::rivet_type_id EnableAutoEquip_type_id = 0xa1871282;
		constexpr const static std::string_view EquipLooksPairs_type_name = "EquipLooksPairs";
		constexpr const static rivet::rivet_type_id EquipLooksPairs_type_id = 0x1cf95900; 

		explicit WeaponEquipListenerData() = default;
		explicit WeaponEquipListenerData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Animset {};
		float StartUnarmedChance {};
		bool EnableAutoEquip {};
		std::vector<std::shared_ptr<rivet::ddl::generated::EquipLooksPair>> EquipLooksPairs {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponEquipListenerData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
