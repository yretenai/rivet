// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HardwareProfileDevstatsEvent : EventBase {
		constexpr static std::string_view type_name = "HardwareProfileDevstatsEvent";
		constexpr static rivet::rivet_type_id type_id = 0xf1d48158;

		constexpr static std::string_view language_type_name = "language";
		constexpr static rivet::rivet_type_id language_type_id = 0xd7acae93;
		constexpr static std::string_view resolution_type_name = "resolution";
		constexpr static rivet::rivet_type_id resolution_type_id = 0x69b85263;
		constexpr static std::string_view refresh_rate_type_name = "refresh_rate";
		constexpr static rivet::rivet_type_id refresh_rate_type_id = 0xaef3ce03;
		constexpr static std::string_view hdr_capable_type_name = "hdr_capable";
		constexpr static rivet::rivet_type_id hdr_capable_type_id = 0xbcf2e2b2;
		constexpr static std::string_view dsd_card_name_type_name = "dsd_card_name";
		constexpr static rivet::rivet_type_id dsd_card_name_type_id = 0xe2e65c5b;
		constexpr static std::string_view dsd_displaymemory_type_name = "dsd_displaymemory";
		constexpr static rivet::rivet_type_id dsd_displaymemory_type_id = 0x8f844b80;
		constexpr static std::string_view dsd_displaymode_type_name = "dsd_displaymode";
		constexpr static rivet::rivet_type_id dsd_displaymode_type_id = 0xe7676ab8;
		constexpr static std::string_view dsd_drivermodel_type_name = "dsd_drivermodel";
		constexpr static rivet::rivet_type_id dsd_drivermodel_type_id = 0x84897be4;
		constexpr static std::string_view dsd_driverversion_type_name = "dsd_driverversion";
		constexpr static rivet::rivet_type_id dsd_driverversion_type_id = 0xedf1623a;
		constexpr static std::string_view dsd_monitor_number_type_name = "dsd_monitor_number";
		constexpr static rivet::rivet_type_id dsd_monitor_number_type_id = 0xeea1893f;
		constexpr static std::string_view dsd_primary_monitor_model_type_name = "dsd_primary_monitor_model";
		constexpr static rivet::rivet_type_id dsd_primary_monitor_model_type_id = 0xcb5baabd;
		constexpr static std::string_view dsd_primary_monitor_name_type_name = "dsd_primary_monitor_name";
		constexpr static rivet::rivet_type_id dsd_primary_monitor_name_type_id = 0xf3f00871;
		constexpr static std::string_view si_bios_type_name = "si_bios";
		constexpr static rivet::rivet_type_id si_bios_type_id = 0xe643d12d;
		constexpr static std::string_view si_directxversion_type_name = "si_directxversion";
		constexpr static rivet::rivet_type_id si_directxversion_type_id = 0x98d18927;
		constexpr static std::string_view streaming_provider_type_name = "streaming_provider";
		constexpr static rivet::rivet_type_id streaming_provider_type_id = 0x15e1757;
		constexpr static std::string_view si_operating_system_type_name = "si_operating_system";
		constexpr static rivet::rivet_type_id si_operating_system_type_id = 0x73769486;
		constexpr static std::string_view si_page_file_type_name = "si_page_file";
		constexpr static rivet::rivet_type_id si_page_file_type_id = 0x7d6a3d0f;
		constexpr static std::string_view si_memory_type_name = "si_memory";
		constexpr static rivet::rivet_type_id si_memory_type_id = 0x6ebd4149;
		constexpr static std::string_view si_processor_type_name = "si_processor";
		constexpr static rivet::rivet_type_id si_processor_type_id = 0x5ff15195;
		constexpr static std::string_view si_system_dpi_setting_type_name = "si_system_dpi_setting";
		constexpr static rivet::rivet_type_id si_system_dpi_setting_type_id = 0xede51104;
		constexpr static std::string_view si_user_dpi_setting_type_name = "si_user_dpi_setting";
		constexpr static rivet::rivet_type_id si_user_dpi_setting_type_id = 0x65899a2f;
		constexpr static std::string_view si_pcdx_adapter_type_name = "si_pcdx_adapter";
		constexpr static rivet::rivet_type_id si_pcdx_adapter_type_id = 0x3110216e;
		constexpr static std::string_view si_controller_type_name = "si_controller";
		constexpr static rivet::rivet_type_id si_controller_type_id = 0x75888e3f;
		constexpr static std::string_view si_audio_device_type_name = "si_audio_device";
		constexpr static rivet::rivet_type_id si_audio_device_type_id = 0x3758be4b;
		constexpr static std::string_view si_asset_disk_model_type_name = "si_asset_disk_model";
		constexpr static rivet::rivet_type_id si_asset_disk_model_type_id = 0x85299a54;
		constexpr static std::string_view si_asset_disk_type_type_name = "si_asset_disk_type";
		constexpr static rivet::rivet_type_id si_asset_disk_type_type_id = 0x57be9cbc; 

		explicit HardwareProfileDevstatsEvent() = default;
		explicit HardwareProfileDevstatsEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view language {};
		std::string_view resolution {};
		float refresh_rate {};
		bool hdr_capable {};
		std::string_view dsd_card_name {};
		std::string_view dsd_displaymemory {};
		std::string_view dsd_displaymode {};
		std::string_view dsd_drivermodel {};
		std::string_view dsd_driverversion {};
		int32_t dsd_monitor_number {};
		std::string_view dsd_primary_monitor_model {};
		std::string_view dsd_primary_monitor_name {};
		std::string_view si_bios {};
		std::string_view si_directxversion {};
		std::string_view streaming_provider {};
		std::string_view si_operating_system {};
		std::string_view si_page_file {};
		std::string_view si_memory {};
		std::string_view si_processor {};
		std::string_view si_system_dpi_setting {};
		std::string_view si_user_dpi_setting {};
		std::string_view si_pcdx_adapter {};
		std::string_view si_controller {};
		std::string_view si_audio_device {};
		std::string_view si_asset_disk_model {};
		std::string_view si_asset_disk_type {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HardwareProfileDevstatsEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
