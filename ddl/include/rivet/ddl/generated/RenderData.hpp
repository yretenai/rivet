// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED RenderData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RenderData";
		constexpr static rivet::rivet_type_id type_id = 0x91c2d379;

		constexpr static std::string_view CustomInput_type_name = "CustomInput";
		constexpr static rivet::rivet_type_id CustomInput_type_id = 0xc866f4ee;
		constexpr static std::string_view Color_type_name = "Color";
		constexpr static rivet::rivet_type_id Color_type_id = 0x7f058428;
		constexpr static std::string_view AlphaValue_type_name = "AlphaValue";
		constexpr static rivet::rivet_type_id AlphaValue_type_id = 0x71fbe471;
		constexpr static std::string_view AlphaSortBias_type_name = "AlphaSortBias";
		constexpr static rivet::rivet_type_id AlphaSortBias_type_id = 0x96243d40;
		constexpr static std::string_view ZBias_type_name = "ZBias";
		constexpr static rivet::rivet_type_id ZBias_type_id = 0xafe2d9cb; 

		explicit RenderData() = default;
		explicit RenderData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLVector3> CustomInput {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Color {};
		float AlphaValue {};
		float AlphaSortBias {};
		float ZBias {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RenderData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
