// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/HeroTypes.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BoltCrankBasePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BoltCrankBasePrius";
		constexpr static rivet::rivet_type_id type_id = 0xb1b51a6e;

		constexpr static std::string_view SaveUsedState_type_name = "SaveUsedState";
		constexpr static rivet::rivet_type_id SaveUsedState_type_id = 0x511c7518;
		constexpr static std::string_view HeroType_type_name = "HeroType";
		constexpr static rivet::rivet_type_id HeroType_type_id = 0x1583d108;
		constexpr static std::string_view Camera_type_name = "Camera";
		constexpr static rivet::rivet_type_id Camera_type_id = 0x564a062;
		constexpr static std::string_view CameraBlendInTime_type_name = "CameraBlendInTime";
		constexpr static rivet::rivet_type_id CameraBlendInTime_type_id = 0xe1abdb4f;
		constexpr static std::string_view CameraBlendOutTime_type_name = "CameraBlendOutTime";
		constexpr static rivet::rivet_type_id CameraBlendOutTime_type_id = 0xddcb88c3;
		constexpr static std::string_view ButtonDisplayRange_type_name = "ButtonDisplayRange";
		constexpr static rivet::rivet_type_id ButtonDisplayRange_type_id = 0xfb94b9ac;
		constexpr static std::string_view BoltDynJoint_type_name = "BoltDynJoint";
		constexpr static rivet::rivet_type_id BoltDynJoint_type_id = 0xa5458b7a;
		constexpr static std::string_view SecondaryJoint_type_name = "SecondaryJoint";
		constexpr static rivet::rivet_type_id SecondaryJoint_type_id = 0x85fdd6ed;
		constexpr static std::string_view IdleDriver_type_name = "IdleDriver";
		constexpr static rivet::rivet_type_id IdleDriver_type_id = 0xed03c7a7;
		constexpr static std::string_view InUseDriver_type_name = "InUseDriver";
		constexpr static rivet::rivet_type_id InUseDriver_type_id = 0x6670550d;
		constexpr static std::string_view CompleteDriver_type_name = "CompleteDriver";
		constexpr static rivet::rivet_type_id CompleteDriver_type_id = 0x99b0169e;
		constexpr static std::string_view CrankTimeMax_type_name = "CrankTimeMax";
		constexpr static rivet::rivet_type_id CrankTimeMax_type_id = 0xa99db830;
		constexpr static std::string_view MemoryResetSpeed_type_name = "MemoryResetSpeed";
		constexpr static rivet::rivet_type_id MemoryResetSpeed_type_id = 0x7b8909b0;
		constexpr static std::string_view MemoryResetWait_type_name = "MemoryResetWait";
		constexpr static rivet::rivet_type_id MemoryResetWait_type_id = 0x6ca12f40;
		constexpr static std::string_view DoShimmer_type_name = "DoShimmer";
		constexpr static rivet::rivet_type_id DoShimmer_type_id = 0x21ca7a63; 

		explicit BoltCrankBasePrius() = default;
		explicit BoltCrankBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool SaveUsedState {};
		rivet::ddl::generated::HeroTypes HeroType {};
		uint64_t Camera {};
		float CameraBlendInTime {};
		float CameraBlendOutTime {};
		float ButtonDisplayRange {};
		std::string_view BoltDynJoint {};
		std::string_view SecondaryJoint {};
		std::string_view IdleDriver {};
		std::string_view InUseDriver {};
		std::string_view CompleteDriver {};
		float CrankTimeMax {};
		float MemoryResetSpeed {};
		float MemoryResetWait {};
		bool DoShimmer {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BoltCrankBasePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
