// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotPrius.hpp> 

namespace rivet::ddl::generated {
	struct HoverShuffleData; 

	struct RIVET_DDL_SHARED BossBotNefariousFinalePrius : BotPrius {
		constexpr static std::string_view type_name = "BossBotNefariousFinalePrius";
		constexpr static rivet::rivet_type_id type_id = 0x3a9c2ad0;

		constexpr static std::string_view HoverShuffleData_type_name = "HoverShuffleData";
		constexpr static rivet::rivet_type_id HoverShuffleData_type_id = 0x5d8cb773;
		constexpr static std::string_view EmpNefariousPilotAsset_type_name = "EmpNefariousPilotAsset";
		constexpr static rivet::rivet_type_id EmpNefariousPilotAsset_type_id = 0x4fbfd7c8;
		constexpr static std::string_view DocNefariousPilotAsset_type_name = "DocNefariousPilotAsset";
		constexpr static rivet::rivet_type_id DocNefariousPilotAsset_type_id = 0xf33c549a;
		constexpr static std::string_view DamageStates_Eye_LF_type_name = "DamageStates_Eye_LF";
		constexpr static rivet::rivet_type_id DamageStates_Eye_LF_type_id = 0xff454979;
		constexpr static std::string_view DamageStates_Eye_RT_type_name = "DamageStates_Eye_RT";
		constexpr static rivet::rivet_type_id DamageStates_Eye_RT_type_id = 0xd8bd07ee;
		constexpr static std::string_view DamageStates_Arm_LF_type_name = "DamageStates_Arm_LF";
		constexpr static rivet::rivet_type_id DamageStates_Arm_LF_type_id = 0xd6b01291;
		constexpr static std::string_view DamageStates_Arm_RT_type_name = "DamageStates_Arm_RT";
		constexpr static rivet::rivet_type_id DamageStates_Arm_RT_type_id = 0xf1485c06; 

		explicit BossBotNefariousFinalePrius() = default;
		explicit BossBotNefariousFinalePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::HoverShuffleData> HoverShuffleData {};
		std::string_view EmpNefariousPilotAsset {};
		std::string_view DocNefariousPilotAsset {};
		std::string_view DamageStates_Eye_LF {};
		std::string_view DamageStates_Eye_RT {};
		std::string_view DamageStates_Arm_LF {};
		std::string_view DamageStates_Arm_RT {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BossBotNefariousFinalePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
