// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xb521b086.hpp> 

namespace rivet::ddl::generated {
	struct AnimSetSequenceDef;
	struct AnimSetCommentDef;
	struct AnimAttachmentDef;
	struct AnimDriverTransitionDef;
	struct AnimDriverTransitionDataDef;
	struct AnimDriverDef;
	struct AnimClipGroupDef;
	struct AnimSetPreviewData;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED AnimSetDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimSetDef";
		constexpr static rivet::rivet_type_id type_id = 0x43a05ebe;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view AnimClips_type_name = "AnimClips";
		constexpr static rivet::rivet_type_id AnimClips_type_id = 0x8f5f7a83;
		constexpr static std::string_view ModelAssetPath_type_name = "ModelAssetPath";
		constexpr static rivet::rivet_type_id ModelAssetPath_type_id = 0xb8b499c3;
		constexpr static std::string_view PreviewData_type_name = "PreviewData";
		constexpr static rivet::rivet_type_id PreviewData_type_id = 0xb76e93dc;
		constexpr static std::string_view PruneLevel_type_name = "PruneLevel";
		constexpr static rivet::rivet_type_id PruneLevel_type_id = 0xeaa97a2b;
		constexpr static std::string_view StreamData_type_name = "StreamData";
		constexpr static rivet::rivet_type_id StreamData_type_id = 0x31f983e0;
		constexpr static std::string_view AnimClipGroups_type_name = "AnimClipGroups";
		constexpr static rivet::rivet_type_id AnimClipGroups_type_id = 0xe28a8539;
		constexpr static std::string_view AnimDrivers_type_name = "AnimDrivers";
		constexpr static rivet::rivet_type_id AnimDrivers_type_id = 0xb5c03a7c;
		constexpr static std::string_view DefaultTransition_type_name = "DefaultTransition";
		constexpr static rivet::rivet_type_id DefaultTransition_type_id = 0x2d9108f6;
		constexpr static std::string_view Transitions_type_name = "Transitions";
		constexpr static rivet::rivet_type_id Transitions_type_id = 0x1d9b339d;
		constexpr static std::string_view AttachmentCollection_type_name = "AttachmentCollection";
		constexpr static rivet::rivet_type_id AttachmentCollection_type_id = 0xafcec3f9;
		constexpr static std::string_view Attachments_type_name = "Attachments";
		constexpr static rivet::rivet_type_id Attachments_type_id = 0xca18ab0d;
		constexpr static std::string_view Sequences_type_name = "Sequences";
		constexpr static rivet::rivet_type_id Sequences_type_id = 0x351d2f90;
		constexpr static std::string_view UiTimeStamp_type_name = "UiTimeStamp";
		constexpr static rivet::rivet_type_id UiTimeStamp_type_id = 0x44336e0b;
		constexpr static std::string_view Comments_type_name = "Comments";
		constexpr static rivet::rivet_type_id Comments_type_id = 0xa59f2b5a; 

		explicit AnimSetDef() = default;
		explicit AnimSetDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::vector<std::string_view> AnimClips {};
		std::string_view ModelAssetPath {};
		std::shared_ptr<rivet::ddl::generated::AnimSetPreviewData> PreviewData {};
		rivet::ddl::generated::xb521b086 PruneLevel {};
		bool StreamData {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimClipGroupDef>> AnimClipGroups {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimDriverDef>> AnimDrivers {};
		std::shared_ptr<rivet::ddl::generated::AnimDriverTransitionDataDef> DefaultTransition {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimDriverTransitionDef>> Transitions {};
		std::string_view AttachmentCollection {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimAttachmentDef>> Attachments {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceDef>> Sequences {};
		std::string_view UiTimeStamp {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetCommentDef>> Comments {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimSetDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
