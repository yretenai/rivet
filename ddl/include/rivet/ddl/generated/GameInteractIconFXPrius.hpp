// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EnabledComponentBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED GameInteractIconFXPrius : EnabledComponentBasePrius {
		constexpr static std::string_view type_name = "GameInteractIconFXPrius";
		constexpr static rivet::rivet_type_id type_id = 0x853e284a;

		constexpr static std::string_view DistToDisplayLocked_type_name = "DistToDisplayLocked";
		constexpr static rivet::rivet_type_id DistToDisplayLocked_type_id = 0xe890961b;
		constexpr static std::string_view DistToDisplayAvail_type_name = "DistToDisplayAvail";
		constexpr static rivet::rivet_type_id DistToDisplayAvail_type_id = 0xb5adfacf;
		constexpr static std::string_view OutOfRangePadding_type_name = "OutOfRangePadding";
		constexpr static rivet::rivet_type_id OutOfRangePadding_type_id = 0xdc931a12;
		constexpr static std::string_view AutoUseButtonPOIDist_type_name = "AutoUseButtonPOIDist";
		constexpr static rivet::rivet_type_id AutoUseButtonPOIDist_type_id = 0xe078a881;
		constexpr static std::string_view NonPOIOffCloseDist_type_name = "NonPOIOffCloseDist";
		constexpr static rivet::rivet_type_id NonPOIOffCloseDist_type_id = 0xd11d0848; 

		explicit GameInteractIconFXPrius() = default;
		explicit GameInteractIconFXPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float DistToDisplayLocked {};
		float DistToDisplayAvail {};
		float OutOfRangePadding {};
		float AutoUseButtonPOIDist {};
		float NonPOIOffCloseDist {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameInteractIconFXPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
