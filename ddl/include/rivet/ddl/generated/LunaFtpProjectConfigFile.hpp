// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x5753f3c8.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LunaFtpProjectConfigFile : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LunaFtpProjectConfigFile";
		constexpr static rivet::rivet_type_id type_id = 0xbb3c57ae;

		constexpr static std::string_view ProjectId_type_name = "ProjectId";
		constexpr static rivet::rivet_type_id ProjectId_type_id = 0xee6efffb;
		constexpr static std::string_view IgProject_type_name = "IgProject";
		constexpr static rivet::rivet_type_id IgProject_type_id = 0x337823f3;
		constexpr static std::string_view CodeName_type_name = "CodeName";
		constexpr static rivet::rivet_type_id CodeName_type_id = 0xa15b4218;
		constexpr static std::string_view TitleName_type_name = "TitleName";
		constexpr static rivet::rivet_type_id TitleName_type_id = 0xef896feb;
		constexpr static std::string_view ProductionBranch_type_name = "ProductionBranch";
		constexpr static rivet::rivet_type_id ProductionBranch_type_id = 0x6d1bcd43;
		constexpr static std::string_view Platforms_type_name = "Platforms";
		constexpr static rivet::rivet_type_id Platforms_type_id = 0x957c19ef; 

		explicit LunaFtpProjectConfigFile() = default;
		explicit LunaFtpProjectConfigFile([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ProjectId {};
		std::string_view IgProject {};
		std::string_view CodeName {};
		std::string_view TitleName {};
		std::string_view ProductionBranch {};
		rivet::ddl::generated::x5753f3c8 Platforms {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LunaFtpProjectConfigFile>;
	};
} // namespace rivet::ddl::generated

// clang-format on
