// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED PortalRenderPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PortalRenderPrius";
		constexpr static rivet::rivet_type_id type_id = 0x9decefec;

		constexpr static std::string_view OverrideMaterial_type_name = "OverrideMaterial";
		constexpr static rivet::rivet_type_id OverrideMaterial_type_id = 0x21926360;
		constexpr static std::string_view OverrideMaterialName_type_name = "OverrideMaterialName";
		constexpr static rivet::rivet_type_id OverrideMaterialName_type_id = 0xa1fc7498;
		constexpr static std::string_view OverrideTextureName_type_name = "OverrideTextureName";
		constexpr static rivet::rivet_type_id OverrideTextureName_type_id = 0x65e0b511;
		constexpr static std::string_view TimeToOpenConstantName_type_name = "TimeToOpenConstantName";
		constexpr static rivet::rivet_type_id TimeToOpenConstantName_type_id = 0x376f1a65;
		constexpr static std::string_view TimeToOpen_type_name = "TimeToOpen";
		constexpr static rivet::rivet_type_id TimeToOpen_type_id = 0xcc5ab81;
		constexpr static std::string_view ResolutionMultiplier_type_name = "ResolutionMultiplier";
		constexpr static rivet::rivet_type_id ResolutionMultiplier_type_id = 0x6ff88051;
		constexpr static std::string_view LuminanceScaleConstantName_type_name = "LuminanceScaleConstantName";
		constexpr static rivet::rivet_type_id LuminanceScaleConstantName_type_id = 0xfff3b681;
		constexpr static std::string_view LuminanceScale_type_name = "LuminanceScale";
		constexpr static rivet::rivet_type_id LuminanceScale_type_id = 0x57e1ba0a;
		constexpr static std::string_view EnableToneMapping_type_name = "EnableToneMapping";
		constexpr static rivet::rivet_type_id EnableToneMapping_type_id = 0x5398763d;
		constexpr static std::string_view ThresholdClipExtents_type_name = "ThresholdClipExtents";
		constexpr static rivet::rivet_type_id ThresholdClipExtents_type_id = 0x77e8ecd6; 

		explicit PortalRenderPrius() = default;
		explicit PortalRenderPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view OverrideMaterial {};
		std::string_view OverrideMaterialName {};
		std::string_view OverrideTextureName {};
		std::string_view TimeToOpenConstantName {};
		float TimeToOpen {};
		float ResolutionMultiplier {};
		std::string_view LuminanceScaleConstantName {};
		float LuminanceScale {};
		bool EnableToneMapping {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> ThresholdClipExtents {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PortalRenderPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
