// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct CameraShakingData; 

	struct RIVET_DDL_SHARED SpaceshipThrustConfig : ConfigBase {
		constexpr const static std::string_view type_name = "SpaceshipThrustConfig";
		constexpr const static rivet::rivet_type_id type_id = 0x54c4dd2c;

		constexpr const static std::string_view ThrustFOV_type_name = "ThrustFOV";
		constexpr const static rivet::rivet_type_id ThrustFOV_type_id = 0x317c04a8;
		constexpr const static std::string_view ThrustCameraOffset_type_name = "ThrustCameraOffset";
		constexpr const static rivet::rivet_type_id ThrustCameraOffset_type_id = 0xd9a69145;
		constexpr const static std::string_view ThrustOffsetDuration_type_name = "ThrustOffsetDuration";
		constexpr const static rivet::rivet_type_id ThrustOffsetDuration_type_id = 0x747b44ec;
		constexpr const static std::string_view ThrustOffsetCurve_type_name = "ThrustOffsetCurve";
		constexpr const static rivet::rivet_type_id ThrustOffsetCurve_type_id = 0xb0ea6da3;
		constexpr const static std::string_view ThrustCameraShake_type_name = "ThrustCameraShake";
		constexpr const static rivet::rivet_type_id ThrustCameraShake_type_id = 0xb2501af1; 

		explicit SpaceshipThrustConfig() = default;
		explicit SpaceshipThrustConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float ThrustFOV {};
		float ThrustCameraOffset {};
		float ThrustOffsetDuration {};
		std::string_view ThrustOffsetCurve {};
		std::shared_ptr<rivet::ddl::generated::CameraShakingData> ThrustCameraShake {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SpaceshipThrustConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
