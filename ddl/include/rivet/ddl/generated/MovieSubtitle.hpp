// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MovieSubtitle : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MovieSubtitle";
		constexpr static rivet::rivet_type_id type_id = 0xc354b421;

		constexpr static std::string_view FrameStart_type_name = "FrameStart";
		constexpr static rivet::rivet_type_id FrameStart_type_id = 0xc933754;
		constexpr static std::string_view FrameEnd_type_name = "FrameEnd";
		constexpr static rivet::rivet_type_id FrameEnd_type_id = 0x9b52ce56;
		constexpr static std::string_view LocTag_type_name = "LocTag";
		constexpr static rivet::rivet_type_id LocTag_type_id = 0x6f8b0e5; 

		explicit MovieSubtitle() = default;
		explicit MovieSubtitle([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t FrameStart {};
		uint32_t FrameEnd {};
		std::string_view LocTag {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MovieSubtitle>;
	};
} // namespace rivet::ddl::generated

// clang-format on
