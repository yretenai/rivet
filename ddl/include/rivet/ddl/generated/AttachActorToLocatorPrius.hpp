// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x6d3f730c.hpp> 

namespace rivet::ddl::generated {
	struct EventBase; 

	struct RIVET_DDL_SHARED AttachActorToLocatorPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AttachActorToLocatorPrius";
		constexpr static rivet::rivet_type_id type_id = 0x44be10e9;

		constexpr static std::string_view ActorToAttach_type_name = "ActorToAttach";
		constexpr static rivet::rivet_type_id ActorToAttach_type_id = 0xc8d395cf;
		constexpr static std::string_view SyncedSpawn_type_name = "SyncedSpawn";
		constexpr static rivet::rivet_type_id SyncedSpawn_type_id = 0x9c04be09;
		constexpr static std::string_view LocatorName_type_name = "LocatorName";
		constexpr static rivet::rivet_type_id LocatorName_type_id = 0x5814524d;
		constexpr static std::string_view SpawnOnInit_type_name = "SpawnOnInit";
		constexpr static rivet::rivet_type_id SpawnOnInit_type_id = 0xded88e48;
		constexpr static std::string_view SpawnOnEvent_type_name = "SpawnOnEvent";
		constexpr static rivet::rivet_type_id SpawnOnEvent_type_id = 0xc6db35c7;
		constexpr static std::string_view Flags_type_name = "Flags";
		constexpr static rivet::rivet_type_id Flags_type_id = 0x12568d7b;
		constexpr static std::string_view DestroyAttachOnDestruction_type_name = "DestroyAttachOnDestruction";
		constexpr static rivet::rivet_type_id DestroyAttachOnDestruction_type_id = 0xcb34dbe1; 

		explicit AttachActorToLocatorPrius() = default;
		explicit AttachActorToLocatorPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ActorToAttach {};
		bool SyncedSpawn {};
		std::string_view LocatorName {};
		bool SpawnOnInit {};
		std::shared_ptr<rivet::ddl::generated::EventBase> SpawnOnEvent {};
		rivet::ddl::generated::x6d3f730c Flags {};
		bool DestroyAttachOnDestruction {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AttachActorToLocatorPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
