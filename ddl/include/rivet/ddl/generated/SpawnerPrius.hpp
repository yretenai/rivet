// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x14738916.hpp>
#include <rivet/ddl/generated/enums/x59f4ecd6.hpp>
#include <rivet/ddl/generated/enums/FactorySelectionMethod.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SpawnerPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SpawnerPrius";
		constexpr static rivet::rivet_type_id type_id = 0xc028b90d;

		constexpr static std::string_view FactoryGroup_type_name = "FactoryGroup";
		constexpr static rivet::rivet_type_id FactoryGroup_type_id = 0x4dc3e095;
		constexpr static std::string_view FactorySelectionMethod_type_name = "FactorySelectionMethod";
		constexpr static rivet::rivet_type_id FactorySelectionMethod_type_id = 0xb2f1d014;
		constexpr static std::string_view Templates_type_name = "Templates";
		constexpr static rivet::rivet_type_id Templates_type_id = 0xedd5e282;
		constexpr static std::string_view TemplateSelectionMethod_type_name = "TemplateSelectionMethod";
		constexpr static rivet::rivet_type_id TemplateSelectionMethod_type_id = 0xdc449308;
		constexpr static std::string_view SpawnLocations_type_name = "SpawnLocations";
		constexpr static rivet::rivet_type_id SpawnLocations_type_id = 0x77c7ed1a;
		constexpr static std::string_view LocationSelectionMethod_type_name = "LocationSelectionMethod";
		constexpr static rivet::rivet_type_id LocationSelectionMethod_type_id = 0xe9400b68;
		constexpr static std::string_view InViewValidate_type_name = "InViewValidate";
		constexpr static rivet::rivet_type_id InViewValidate_type_id = 0xd0e897f6;
		constexpr static std::string_view CheckNoLOS_type_name = "CheckNoLOS";
		constexpr static rivet::rivet_type_id CheckNoLOS_type_id = 0xdd348be3;
		constexpr static std::string_view SnapToNav_type_name = "SnapToNav";
		constexpr static rivet::rivet_type_id SnapToNav_type_id = 0x5f0a2cd0;
		constexpr static std::string_view ForceSpawn_type_name = "ForceSpawn";
		constexpr static rivet::rivet_type_id ForceSpawn_type_id = 0xfc60458f;
		constexpr static std::string_view RandomizeX_type_name = "RandomizeX";
		constexpr static rivet::rivet_type_id RandomizeX_type_id = 0xc1f2312a;
		constexpr static std::string_view RandomizeY_type_name = "RandomizeY";
		constexpr static rivet::rivet_type_id RandomizeY_type_id = 0xb6f501bc;
		constexpr static std::string_view RandomizeZ_type_name = "RandomizeZ";
		constexpr static rivet::rivet_type_id RandomizeZ_type_id = 0x2ffc5006;
		constexpr static std::string_view RandomizeT_type_name = "RandomizeT";
		constexpr static rivet::rivet_type_id RandomizeT_type_id = 0xc8447d01;
		constexpr static std::string_view InitialSpawnDelayMin_type_name = "InitialSpawnDelayMin";
		constexpr static rivet::rivet_type_id InitialSpawnDelayMin_type_id = 0xefbc6265;
		constexpr static std::string_view InitialSpawnDelayMax_type_name = "InitialSpawnDelayMax";
		constexpr static rivet::rivet_type_id InitialSpawnDelayMax_type_id = 0xd3b15d3c;
		constexpr static std::string_view SpawnIntervalMin_type_name = "SpawnIntervalMin";
		constexpr static rivet::rivet_type_id SpawnIntervalMin_type_id = 0x8415252;
		constexpr static std::string_view SpawnIntervalMax_type_name = "SpawnIntervalMax";
		constexpr static rivet::rivet_type_id SpawnIntervalMax_type_id = 0x344c6d0b;
		constexpr static std::string_view RespawnDelayMin_type_name = "RespawnDelayMin";
		constexpr static rivet::rivet_type_id RespawnDelayMin_type_id = 0x9ffb163f;
		constexpr static std::string_view RespawnDelayMax_type_name = "RespawnDelayMax";
		constexpr static rivet::rivet_type_id RespawnDelayMax_type_id = 0xa3f62966;
		constexpr static std::string_view NumSpawns_type_name = "NumSpawns";
		constexpr static rivet::rivet_type_id NumSpawns_type_id = 0x6d1a71cf;
		constexpr static std::string_view MaxSimultaneousSpawns_type_name = "MaxSimultaneousSpawns";
		constexpr static rivet::rivet_type_id MaxSimultaneousSpawns_type_id = 0x32702f73;
		constexpr static std::string_view MinDistanceFromPlayers_type_name = "MinDistanceFromPlayers";
		constexpr static rivet::rivet_type_id MinDistanceFromPlayers_type_id = 0x949df3ba; 

		explicit SpawnerPrius() = default;
		explicit SpawnerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<uint64_t> FactoryGroup {};
		rivet::ddl::generated::FactorySelectionMethod FactorySelectionMethod {};
		std::vector<uint64_t> Templates {};
		rivet::ddl::generated::x59f4ecd6 TemplateSelectionMethod {};
		std::vector<uint64_t> SpawnLocations {};
		rivet::ddl::generated::x14738916 LocationSelectionMethod {};
		bool InViewValidate {};
		bool CheckNoLOS {};
		bool SnapToNav {};
		bool ForceSpawn {};
		bool RandomizeX {};
		bool RandomizeY {};
		bool RandomizeZ {};
		bool RandomizeT {};
		float InitialSpawnDelayMin {};
		float InitialSpawnDelayMax {};
		float SpawnIntervalMin {};
		float SpawnIntervalMax {};
		float RespawnDelayMin {};
		float RespawnDelayMax {};
		int32_t NumSpawns {};
		int32_t MaxSimultaneousSpawns {};
		float MinDistanceFromPlayers {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SpawnerPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
