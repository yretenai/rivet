// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/ComboDisplayDataActionControl.hpp>
#include <rivet/ddl/generated/ComboDisplayDataComboString.hpp>
#include <rivet/ddl/generated/ComboDisplayDataPadButtonList.hpp>
#include <rivet/ddl/generated/ComboDisplayDataStringOnly.hpp> 

#include <rivet/ddl/generated/ComboDisplayDataBase.hpp>

namespace rivet::ddl::generated {
	ComboDisplayDataBase::ComboDisplayDataBase([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		DisplayName = serialized->get_string(DisplayName_type_id); 
	}

	[[nodiscard]] auto
	ComboDisplayDataBase::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	ComboDisplayDataBase::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ComboDisplayDataBase> {
		if (incoming_type_id == ComboDisplayDataBase::type_id) {
			return std::make_shared<ComboDisplayDataBase>(serialized);
		}

		auto ComboDisplayDataStringOnly_ptr = ComboDisplayDataStringOnly::from_substruct(incoming_type_id, serialized);
		if (ComboDisplayDataStringOnly_ptr != nullptr) {
			return ComboDisplayDataStringOnly_ptr;
		}

		auto ComboDisplayDataPadButtonList_ptr = ComboDisplayDataPadButtonList::from_substruct(incoming_type_id, serialized);
		if (ComboDisplayDataPadButtonList_ptr != nullptr) {
			return ComboDisplayDataPadButtonList_ptr;
		}

		auto ComboDisplayDataComboString_ptr = ComboDisplayDataComboString::from_substruct(incoming_type_id, serialized);
		if (ComboDisplayDataComboString_ptr != nullptr) {
			return ComboDisplayDataComboString_ptr;
		}

		auto ComboDisplayDataActionControl_ptr = ComboDisplayDataActionControl::from_substruct(incoming_type_id, serialized);
		if (ComboDisplayDataActionControl_ptr != nullptr) {
			return ComboDisplayDataActionControl_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
