// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct MaterialNodeConnectedOutputPort;
	struct MaterialNodeConnectedInputPort;
	struct MaterialNodeUserInput;
	struct MaterialNodePortUI; 

	struct RIVET_DDL_SHARED MaterialGraphNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MaterialGraphNode";
		constexpr static rivet::rivet_type_id type_id = 0x181846f2;

		constexpr static std::string_view XPos_type_name = "XPos";
		constexpr static rivet::rivet_type_id XPos_type_id = 0xf88aee81;
		constexpr static std::string_view YPos_type_name = "YPos";
		constexpr static rivet::rivet_type_id YPos_type_id = 0x403689e4;
		constexpr static std::string_view IdLow_type_name = "IdLow";
		constexpr static rivet::rivet_type_id IdLow_type_id = 0xaa93a9e7;
		constexpr static std::string_view IdHigh_type_name = "IdHigh";
		constexpr static rivet::rivet_type_id IdHigh_type_id = 0xbc80f4ac;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view VariableName_type_name = "VariableName";
		constexpr static rivet::rivet_type_id VariableName_type_id = 0x11d33588;
		constexpr static std::string_view PortUIs_type_name = "PortUIs";
		constexpr static rivet::rivet_type_id PortUIs_type_id = 0x6cc36d17;
		constexpr static std::string_view UserInputs_type_name = "UserInputs";
		constexpr static rivet::rivet_type_id UserInputs_type_id = 0xb701ec85;
		constexpr static std::string_view ConnectedInputs_type_name = "ConnectedInputs";
		constexpr static rivet::rivet_type_id ConnectedInputs_type_id = 0x8ca57bf5;
		constexpr static std::string_view ConnectedOutputs_type_name = "ConnectedOutputs";
		constexpr static rivet::rivet_type_id ConnectedOutputs_type_id = 0x824bee0e;
		constexpr static std::string_view PrependNodeName_type_name = "PrependNodeName";
		constexpr static rivet::rivet_type_id PrependNodeName_type_id = 0x5dda1f00;
		constexpr static std::string_view IsSubGraph_type_name = "IsSubGraph";
		constexpr static rivet::rivet_type_id IsSubGraph_type_id = 0xf2039ed8;
		constexpr static std::string_view AssetPath_type_name = "AssetPath";
		constexpr static rivet::rivet_type_id AssetPath_type_id = 0xefa614b;
		constexpr static std::string_view SortOrder_type_name = "SortOrder";
		constexpr static rivet::rivet_type_id SortOrder_type_id = 0xbd9f03f1; 

		explicit MaterialGraphNode() = default;
		explicit MaterialGraphNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t XPos {};
		int32_t YPos {};
		uint32_t IdLow {};
		uint32_t IdHigh {};
		std::string_view Name {};
		std::string_view VariableName {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MaterialNodePortUI>> PortUIs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MaterialNodeUserInput>> UserInputs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MaterialNodeConnectedInputPort>> ConnectedInputs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MaterialNodeConnectedOutputPort>> ConnectedOutputs {};
		bool PrependNodeName {};
		bool IsSubGraph {};
		std::string_view AssetPath {};
		int32_t SortOrder {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MaterialGraphNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
