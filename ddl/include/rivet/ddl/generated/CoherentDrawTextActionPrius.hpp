// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x84bbe706.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED CoherentDrawTextActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CoherentDrawTextActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x99eda668;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view Text_type_name = "Text";
		constexpr static rivet::rivet_type_id Text_type_id = 0xb1b6777;
		constexpr static std::string_view TextColor_type_name = "TextColor";
		constexpr static rivet::rivet_type_id TextColor_type_id = 0x7f31f6cf;
		constexpr static std::string_view TextAlpha_type_name = "TextAlpha";
		constexpr static rivet::rivet_type_id TextAlpha_type_id = 0xc987874c;
		constexpr static std::string_view BackgroundColor_type_name = "BackgroundColor";
		constexpr static rivet::rivet_type_id BackgroundColor_type_id = 0xcbda4a;
		constexpr static std::string_view BackgroundAlpha_type_name = "BackgroundAlpha";
		constexpr static rivet::rivet_type_id BackgroundAlpha_type_id = 0xb67dabc9;
		constexpr static std::string_view Alignment_type_name = "Alignment";
		constexpr static rivet::rivet_type_id Alignment_type_id = 0xae338150;
		constexpr static std::string_view FontSize_type_name = "FontSize";
		constexpr static rivet::rivet_type_id FontSize_type_id = 0xbc438b44; 

		explicit CoherentDrawTextActionPrius() = default;
		explicit CoherentDrawTextActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view Text {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> TextColor {};
		float TextAlpha {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> BackgroundColor {};
		float BackgroundAlpha {};
		rivet::ddl::generated::x84bbe706 Alignment {};
		uint32_t FontSize {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CoherentDrawTextActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
