// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x79dd0c33.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VelocityFollowerData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "VelocityFollowerData";
		constexpr const static rivet::rivet_type_id type_id = 0x28cefc9c;

		constexpr const static std::string_view Enabled_type_name = "Enabled";
		constexpr const static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr const static std::string_view MotionMode_type_name = "MotionMode";
		constexpr const static rivet::rivet_type_id MotionMode_type_id = 0x6057228c;
		constexpr const static std::string_view DefaultPitch_type_name = "DefaultPitch";
		constexpr const static rivet::rivet_type_id DefaultPitch_type_id = 0x3d04e240;
		constexpr const static std::string_view SpeedTrigger_type_name = "SpeedTrigger";
		constexpr const static rivet::rivet_type_id SpeedTrigger_type_id = 0x288cb339;
		constexpr const static std::string_view PostInputDelay_type_name = "PostInputDelay";
		constexpr const static rivet::rivet_type_id PostInputDelay_type_id = 0x9ce4492d;
		constexpr const static std::string_view SpeedMaxYaw_type_name = "SpeedMaxYaw";
		constexpr const static rivet::rivet_type_id SpeedMaxYaw_type_id = 0xee2137e5;
		constexpr const static std::string_view SpeedMaxPitch_type_name = "SpeedMaxPitch";
		constexpr const static rivet::rivet_type_id SpeedMaxPitch_type_id = 0x5cef694e;
		constexpr const static std::string_view AccelOrGain_type_name = "AccelOrGain";
		constexpr const static rivet::rivet_type_id AccelOrGain_type_id = 0xd0dd75a7;
		constexpr const static std::string_view AccelOrGainAccel_type_name = "AccelOrGainAccel";
		constexpr const static rivet::rivet_type_id AccelOrGainAccel_type_id = 0xc0909ea8;
		constexpr const static std::string_view DecelOrDamp_type_name = "DecelOrDamp";
		constexpr const static rivet::rivet_type_id DecelOrDamp_type_id = 0x2042fe2b;
		constexpr const static std::string_view DeadBackAngle_type_name = "DeadBackAngle";
		constexpr const static rivet::rivet_type_id DeadBackAngle_type_id = 0x34ca5d60;
		constexpr const static std::string_view DeadFrontAngle_type_name = "DeadFrontAngle";
		constexpr const static rivet::rivet_type_id DeadFrontAngle_type_id = 0x5ed6ef1d;
		constexpr const static std::string_view PitchScaleUp_type_name = "PitchScaleUp";
		constexpr const static rivet::rivet_type_id PitchScaleUp_type_id = 0xbee0bd55;
		constexpr const static std::string_view PitchScaleDown_type_name = "PitchScaleDown";
		constexpr const static rivet::rivet_type_id PitchScaleDown_type_id = 0x47b7af19;
		constexpr const static std::string_view MinYawPitchDiffTolerance_type_name = "MinYawPitchDiffTolerance";
		constexpr const static rivet::rivet_type_id MinYawPitchDiffTolerance_type_id = 0x17c900d0;
		constexpr const static std::string_view MinSpeedTolerance_type_name = "MinSpeedTolerance";
		constexpr const static rivet::rivet_type_id MinSpeedTolerance_type_id = 0x1979b47;
		constexpr const static std::string_view MaxYawDiff_type_name = "MaxYawDiff";
		constexpr const static rivet::rivet_type_id MaxYawDiff_type_id = 0xd219dd80;
		constexpr const static std::string_view MaxPitch_type_name = "MaxPitch";
		constexpr const static rivet::rivet_type_id MaxPitch_type_id = 0x3e01794e;
		constexpr const static std::string_view MinPitch_type_name = "MinPitch";
		constexpr const static rivet::rivet_type_id MinPitch_type_id = 0xd861d6af; 

		explicit VelocityFollowerData() = default;
		explicit VelocityFollowerData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		rivet::ddl::generated::x79dd0c33 MotionMode {};
		float DefaultPitch {};
		float SpeedTrigger {};
		float PostInputDelay {};
		float SpeedMaxYaw {};
		float SpeedMaxPitch {};
		float AccelOrGain {};
		float AccelOrGainAccel {};
		float DecelOrDamp {};
		float DeadBackAngle {};
		float DeadFrontAngle {};
		float PitchScaleUp {};
		float PitchScaleDown {};
		float MinYawPitchDiffTolerance {};
		float MinSpeedTolerance {};
		float MaxYawDiff {};
		float MaxPitch {};
		float MinPitch {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VelocityFollowerData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
