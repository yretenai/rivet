// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ChargeAttackParams : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ChargeAttackParams";
		constexpr static rivet::rivet_type_id type_id = 0x23222987;

		constexpr static std::string_view MinChargeTime_type_name = "MinChargeTime";
		constexpr static rivet::rivet_type_id MinChargeTime_type_id = 0x91ca2410;
		constexpr static std::string_view MaxChargeTime_type_name = "MaxChargeTime";
		constexpr static rivet::rivet_type_id MaxChargeTime_type_id = 0xd1855c66;
		constexpr static std::string_view MaxDamage_type_name = "MaxDamage";
		constexpr static rivet::rivet_type_id MaxDamage_type_id = 0xadb823c1;
		constexpr static std::string_view MaxKnockbackForce_type_name = "MaxKnockbackForce";
		constexpr static rivet::rivet_type_id MaxKnockbackForce_type_id = 0xd93e37b8; 

		explicit ChargeAttackParams() = default;
		explicit ChargeAttackParams([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MinChargeTime {};
		float MaxChargeTime {};
		float MaxDamage {};
		float MaxKnockbackForce {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ChargeAttackParams>;
	};
} // namespace rivet::ddl::generated

// clang-format on
