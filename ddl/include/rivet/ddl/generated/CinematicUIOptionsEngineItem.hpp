// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xd7e26c97.hpp>
#include <rivet/ddl/generated/enums/xe8324e15.hpp> 

namespace rivet::ddl::generated {
	struct CameraOptions; 

	struct RIVET_DDL_SHARED CinematicUIOptionsEngineItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CinematicUIOptionsEngineItem";
		constexpr static rivet::rivet_type_id type_id = 0x460d47bd;

		constexpr static std::string_view DOFVisualization_type_name = "DOFVisualization";
		constexpr static rivet::rivet_type_id DOFVisualization_type_id = 0x3b521405;
		constexpr static std::string_view LookAtVisualization_type_name = "LookAtVisualization";
		constexpr static rivet::rivet_type_id LookAtVisualization_type_id = 0xdd23ef46;
		constexpr static std::string_view CameraConeVisualization_type_name = "CameraConeVisualization";
		constexpr static rivet::rivet_type_id CameraConeVisualization_type_id = 0xe2271685;
		constexpr static std::string_view IgnoreJumpToShot_type_name = "IgnoreJumpToShot";
		constexpr static rivet::rivet_type_id IgnoreJumpToShot_type_id = 0x25a7afb0;
		constexpr static std::string_view AnimControllerActor_type_name = "AnimControllerActor";
		constexpr static rivet::rivet_type_id AnimControllerActor_type_id = 0x98709ed5;
		constexpr static std::string_view AnimDynamicsActor_type_name = "AnimDynamicsActor";
		constexpr static rivet::rivet_type_id AnimDynamicsActor_type_id = 0x8c857658;
		constexpr static std::string_view AutoKeyframe_type_name = "AutoKeyframe";
		constexpr static rivet::rivet_type_id AutoKeyframe_type_id = 0xa2f618e;
		constexpr static std::string_view ShowAnimDebugHud_type_name = "ShowAnimDebugHud";
		constexpr static rivet::rivet_type_id ShowAnimDebugHud_type_id = 0x2266257a;
		constexpr static std::string_view UseFastSeekVFX_type_name = "UseFastSeekVFX";
		constexpr static rivet::rivet_type_id UseFastSeekVFX_type_id = 0xe75f043a;
		constexpr static std::string_view ShowSkeletonHud_type_name = "ShowSkeletonHud";
		constexpr static rivet::rivet_type_id ShowSkeletonHud_type_id = 0xb39f18be;
		constexpr static std::string_view ShowClothHud_type_name = "ShowClothHud";
		constexpr static rivet::rivet_type_id ShowClothHud_type_id = 0x33ce180e;
		constexpr static std::string_view ShowDebugVertHud_type_name = "ShowDebugVertHud";
		constexpr static rivet::rivet_type_id ShowDebugVertHud_type_id = 0x75e70013;
		constexpr static std::string_view ShowAudioListener_type_name = "ShowAudioListener";
		constexpr static rivet::rivet_type_id ShowAudioListener_type_id = 0xffbf7f1d;
		constexpr static std::string_view ShowEmptyTracks_type_name = "ShowEmptyTracks";
		constexpr static rivet::rivet_type_id ShowEmptyTracks_type_id = 0xb580e821;
		constexpr static std::string_view Sound_type_name = "Sound";
		constexpr static rivet::rivet_type_id Sound_type_id = 0xe1dd0f45;
		constexpr static std::string_view Subtitles_type_name = "Subtitles";
		constexpr static rivet::rivet_type_id Subtitles_type_id = 0x25c4568a;
		constexpr static std::string_view TimecodeMode_type_name = "TimecodeMode";
		constexpr static rivet::rivet_type_id TimecodeMode_type_id = 0x71f2be5e;
		constexpr static std::string_view PlatformFilter_type_name = "PlatformFilter";
		constexpr static rivet::rivet_type_id PlatformFilter_type_id = 0x92542397;
		constexpr static std::string_view DebugCinematicCameraOptions_type_name = "DebugCinematicCameraOptions";
		constexpr static rivet::rivet_type_id DebugCinematicCameraOptions_type_id = 0x3ac9549;
		constexpr static std::string_view DebugCameraOptions_type_name = "DebugCameraOptions";
		constexpr static rivet::rivet_type_id DebugCameraOptions_type_id = 0x919bb384; 

		explicit CinematicUIOptionsEngineItem() = default;
		explicit CinematicUIOptionsEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool DOFVisualization {};
		bool LookAtVisualization {};
		bool CameraConeVisualization {};
		bool IgnoreJumpToShot {};
		uint64_t AnimControllerActor {};
		uint64_t AnimDynamicsActor {};
		bool AutoKeyframe {};
		bool ShowAnimDebugHud {};
		bool UseFastSeekVFX {};
		bool ShowSkeletonHud {};
		bool ShowClothHud {};
		bool ShowDebugVertHud {};
		bool ShowAudioListener {};
		bool ShowEmptyTracks {};
		bool Sound {};
		bool Subtitles {};
		rivet::ddl::generated::xe8324e15 TimecodeMode {};
		rivet::ddl::generated::xd7e26c97 PlatformFilter {};
		std::shared_ptr<rivet::ddl::generated::CameraOptions> DebugCinematicCameraOptions {};
		std::shared_ptr<rivet::ddl::generated::CameraOptions> DebugCameraOptions {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CinematicUIOptionsEngineItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
