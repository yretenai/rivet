// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/SplineTypes.hpp> 

namespace rivet::ddl::generated {
	struct TerrainRoadCurveData;
	struct CurveHoudiniData;
	struct CurveUsage;
	struct SceneNode;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED CurveDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CurveDef";
		constexpr static rivet::rivet_type_id type_id = 0x885ffaca;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view Points_type_name = "Points";
		constexpr static rivet::rivet_type_id Points_type_id = 0x19c2c04e;
		constexpr static std::string_view IsLooped_type_name = "IsLooped";
		constexpr static rivet::rivet_type_id IsLooped_type_id = 0x8b1e8c12;
		constexpr static std::string_view LoopStartPointIndex_type_name = "LoopStartPointIndex";
		constexpr static rivet::rivet_type_id LoopStartPointIndex_type_id = 0xbd8d3c97;
		constexpr static std::string_view IsReversed_type_name = "IsReversed";
		constexpr static rivet::rivet_type_id IsReversed_type_id = 0x5b90e340;
		constexpr static std::string_view SplineType_type_name = "SplineType";
		constexpr static rivet::rivet_type_id SplineType_type_id = 0x228fc6df;
		constexpr static std::string_view Usage_type_name = "Usage";
		constexpr static rivet::rivet_type_id Usage_type_id = 0xc9b892b1;
		constexpr static std::string_view HoudiniData_type_name = "HoudiniData";
		constexpr static rivet::rivet_type_id HoudiniData_type_id = 0x5642110d;
		constexpr static std::string_view TerrainRoadData_type_name = "TerrainRoadData";
		constexpr static rivet::rivet_type_id TerrainRoadData_type_id = 0x83d421b5; 

		explicit CurveDef() = default;
		explicit CurveDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SceneNode>> Points {};
		bool IsLooped {};
		uint16_t LoopStartPointIndex {};
		bool IsReversed {};
		rivet::ddl::generated::SplineTypes SplineType {};
		std::shared_ptr<rivet::ddl::generated::CurveUsage> Usage {};
		std::shared_ptr<rivet::ddl::generated::CurveHoudiniData> HoudiniData {};
		std::shared_ptr<rivet::ddl::generated::TerrainRoadCurveData> TerrainRoadData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CurveDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
