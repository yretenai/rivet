// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x8b303a8b_type_name = "x8b303a8b";
	constexpr static rivet::rivet_type_id x8b303a8b_type_id = 0x8b303a8b;

	constexpr static std::array<std::tuple<std::string_view, uint64_t>, 6> x8b303a8b_values = {
		std::make_tuple("kNone", 0x1),
		std::make_tuple("kOne", 0x2),
		std::make_tuple("kTwo", 0x4),
		std::make_tuple("kThree", 0x8),
		std::make_tuple("kFour", 0x10),
		std::make_tuple("kFive", 0x20), 
	};

	enum class x8b303a8b : uint64_t {
		None = 0x1,
		One = 0x2,
		Two = 0x4,
		Three = 0x8,
		Four = 0x10,
		Five = 0x20, 
	};
} // namespace rivet::ddl::generated

// clang-format on
