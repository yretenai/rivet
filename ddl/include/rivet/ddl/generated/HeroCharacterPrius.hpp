// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/Voice.hpp>
#include <rivet/ddl/generated/enums/HeroTypes.hpp> 

namespace rivet::ddl::generated {
	struct HeroMoveAbilities; 

	struct RIVET_DDL_SHARED HeroCharacterPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroCharacterPrius";
		constexpr static rivet::rivet_type_id type_id = 0x4bb5c57d;

		constexpr static std::string_view HeroType_type_name = "HeroType";
		constexpr static rivet::rivet_type_id HeroType_type_id = 0x1583d108;
		constexpr static std::string_view DisplayName_type_name = "DisplayName";
		constexpr static rivet::rivet_type_id DisplayName_type_id = 0xeaf33243;
		constexpr static std::string_view Voice_type_name = "Voice";
		constexpr static rivet::rivet_type_id Voice_type_id = 0xfea894fa;
		constexpr static std::string_view MoveAbilities_type_name = "MoveAbilities";
		constexpr static rivet::rivet_type_id MoveAbilities_type_id = 0xde8da163;
		constexpr static std::string_view StartElevation_type_name = "StartElevation";
		constexpr static rivet::rivet_type_id StartElevation_type_id = 0xdd693ad4;
		constexpr static std::string_view FirstSpawn_type_name = "FirstSpawn";
		constexpr static rivet::rivet_type_id FirstSpawn_type_id = 0x202e71f5;
		constexpr static std::string_view OrientGravityToUp_type_name = "OrientGravityToUp";
		constexpr static rivet::rivet_type_id OrientGravityToUp_type_id = 0x4498a5d4; 

		explicit HeroCharacterPrius() = default;
		explicit HeroCharacterPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::HeroTypes HeroType {};
		std::string_view DisplayName {};
		rivet::ddl::generated::Voice Voice {};
		std::shared_ptr<rivet::ddl::generated::HeroMoveAbilities> MoveAbilities {};
		int32_t StartElevation {};
		bool FirstSpawn {};
		bool OrientGravityToUp {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroCharacterPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
