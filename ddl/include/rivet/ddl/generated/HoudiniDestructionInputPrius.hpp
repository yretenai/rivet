// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector2;
	struct DDLTransform; 

	struct RIVET_DDL_SHARED HoudiniDestructionInputPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HoudiniDestructionInputPrius";
		constexpr static rivet::rivet_type_id type_id = 0x1c200b68;

		constexpr static std::string_view ObjToWorld_type_name = "ObjToWorld";
		constexpr static rivet::rivet_type_id ObjToWorld_type_id = 0x3842c592;
		constexpr static std::string_view Velocity_type_name = "Velocity";
		constexpr static rivet::rivet_type_id Velocity_type_id = 0x44d96bd9;
		constexpr static std::string_view RevolutionsPerSecond_type_name = "RevolutionsPerSecond";
		constexpr static rivet::rivet_type_id RevolutionsPerSecond_type_id = 0xfee8687;
		constexpr static std::string_view Falloff_type_name = "Falloff";
		constexpr static rivet::rivet_type_id Falloff_type_id = 0x4e874fc0; 

		explicit HoudiniDestructionInputPrius() = default;
		explicit HoudiniDestructionInputPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLTransform> ObjToWorld {};
		float Velocity {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> RevolutionsPerSecond {};
		float Falloff {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HoudiniDestructionInputPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
