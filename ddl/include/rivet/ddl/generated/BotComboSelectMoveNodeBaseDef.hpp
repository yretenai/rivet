// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ComboNodeBaseDef.hpp> 

namespace rivet::ddl::generated {
	struct OutputPlugSignal;
	struct InputPlugFloat;
	struct InputPlugSignal; 

	struct RIVET_DDL_SHARED BotComboSelectMoveNodeBaseDef : ComboNodeBaseDef {
		constexpr static std::string_view type_name = "BotComboSelectMoveNodeBaseDef";
		constexpr static rivet::rivet_type_id type_id = 0xca9ad18e;

		constexpr static std::string_view Queue_type_name = "Queue";
		constexpr static rivet::rivet_type_id Queue_type_id = 0x66aeb3a2;
		constexpr static std::string_view Weight_type_name = "Weight";
		constexpr static rivet::rivet_type_id Weight_type_id = 0x39b51b26;
		constexpr static std::string_view Selected_type_name = "Selected";
		constexpr static rivet::rivet_type_id Selected_type_id = 0x62a802f6;
		constexpr static std::string_view MoveName_type_name = "MoveName";
		constexpr static rivet::rivet_type_id MoveName_type_id = 0xfacff3ba; 

		explicit BotComboSelectMoveNodeBaseDef() = default;
		explicit BotComboSelectMoveNodeBaseDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::InputPlugSignal> Queue {};
		std::shared_ptr<rivet::ddl::generated::InputPlugFloat> Weight {};
		std::shared_ptr<rivet::ddl::generated::OutputPlugSignal> Selected {};
		std::string_view MoveName {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotComboSelectMoveNodeBaseDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
