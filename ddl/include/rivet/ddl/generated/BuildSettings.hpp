// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BuildSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BuildSettings";
		constexpr static rivet::rivet_type_id type_id = 0x7a97bcf7;

		constexpr static std::string_view AssetBranch_type_name = "AssetBranch";
		constexpr static rivet::rivet_type_id AssetBranch_type_id = 0x2e958d29;
		constexpr static std::string_view VersionTag_type_name = "VersionTag";
		constexpr static rivet::rivet_type_id VersionTag_type_id = 0xcd0f4d6f;
		constexpr static std::string_view ArchiveAssetsChangelist_type_name = "ArchiveAssetsChangelist";
		constexpr static rivet::rivet_type_id ArchiveAssetsChangelist_type_id = 0x6f3622cd;
		constexpr static std::string_view TimeZone_type_name = "TimeZone";
		constexpr static rivet::rivet_type_id TimeZone_type_id = 0x6d32a0d9; 

		explicit BuildSettings() = default;
		explicit BuildSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view AssetBranch {};
		std::string_view VersionTag {};
		int32_t ArchiveAssetsChangelist {};
		std::string_view TimeZone {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BuildSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
