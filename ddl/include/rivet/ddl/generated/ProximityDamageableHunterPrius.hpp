// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ProximityDamageData; 

	struct RIVET_DDL_SHARED ProximityDamageableHunterPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ProximityDamageableHunterPrius";
		constexpr static rivet::rivet_type_id type_id = 0x2e8da9fe;

		constexpr static std::string_view DamageData_type_name = "DamageData";
		constexpr static rivet::rivet_type_id DamageData_type_id = 0xa521b107;
		constexpr static std::string_view GatherRadius_type_name = "GatherRadius";
		constexpr static rivet::rivet_type_id GatherRadius_type_id = 0x33c91dc;
		constexpr static std::string_view GatherFrameDelay_type_name = "GatherFrameDelay";
		constexpr static rivet::rivet_type_id GatherFrameDelay_type_id = 0x75d349f4;
		constexpr static std::string_view DamageCheckDelay_type_name = "DamageCheckDelay";
		constexpr static rivet::rivet_type_id DamageCheckDelay_type_id = 0x49246c69;
		constexpr static std::string_view IsHero_type_name = "IsHero";
		constexpr static rivet::rivet_type_id IsHero_type_id = 0xce8b35ed; 

		explicit ProximityDamageableHunterPrius() = default;
		explicit ProximityDamageableHunterPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::ProximityDamageData> DamageData {};
		float GatherRadius {};
		uint8_t GatherFrameDelay {};
		uint8_t DamageCheckDelay {};
		bool IsHero {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ProximityDamageableHunterPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
