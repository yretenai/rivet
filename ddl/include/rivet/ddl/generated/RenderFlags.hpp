// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RenderFlags : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RenderFlags";
		constexpr static rivet::rivet_type_id type_id = 0x2459666d;

		constexpr static std::string_view Hibernate_type_name = "Hibernate";
		constexpr static rivet::rivet_type_id Hibernate_type_id = 0x6f8e6b06;
		constexpr static std::string_view SkipDecals_type_name = "SkipDecals";
		constexpr static rivet::rivet_type_id SkipDecals_type_id = 0x7de13186;
		constexpr static std::string_view SkipStaticDecals_type_name = "SkipStaticDecals";
		constexpr static rivet::rivet_type_id SkipStaticDecals_type_id = 0x19ffacec;
		constexpr static std::string_view SkipEnvProbe_type_name = "SkipEnvProbe";
		constexpr static rivet::rivet_type_id SkipEnvProbe_type_id = 0xf219f226;
		constexpr static std::string_view OnlyLightCapture_type_name = "OnlyLightCapture";
		constexpr static rivet::rivet_type_id OnlyLightCapture_type_id = 0x1559dec2;
		constexpr static std::string_view NoEmbeddedSamples_type_name = "NoEmbeddedSamples";
		constexpr static rivet::rivet_type_id NoEmbeddedSamples_type_id = 0x28b04558;
		constexpr static std::string_view SkipImpostor_type_name = "SkipImpostor";
		constexpr static rivet::rivet_type_id SkipImpostor_type_id = 0xffc4e1c0;
		constexpr static std::string_view SkipShadowCast_type_name = "SkipShadowCast";
		constexpr static rivet::rivet_type_id SkipShadowCast_type_id = 0x40b0e1ca;
		constexpr static std::string_view IgnoreDepth_type_name = "IgnoreDepth";
		constexpr static rivet::rivet_type_id IgnoreDepth_type_id = 0xbd1d2439;
		constexpr static std::string_view ReverseIndoorStatus_type_name = "ReverseIndoorStatus";
		constexpr static rivet::rivet_type_id ReverseIndoorStatus_type_id = 0xa242edf0;
		constexpr static std::string_view NeverOcclude_type_name = "NeverOcclude";
		constexpr static rivet::rivet_type_id NeverOcclude_type_id = 0xa65f70d7;
		constexpr static std::string_view RenderAsWireframe_type_name = "RenderAsWireframe";
		constexpr static rivet::rivet_type_id RenderAsWireframe_type_id = 0x11f20a7c; 

		explicit RenderFlags() = default;
		explicit RenderFlags([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Hibernate {};
		bool SkipDecals {};
		bool SkipStaticDecals {};
		bool SkipEnvProbe {};
		bool OnlyLightCapture {};
		bool NoEmbeddedSamples {};
		bool SkipImpostor {};
		bool SkipShadowCast {};
		bool IgnoreDepth {};
		bool ReverseIndoorStatus {};
		bool NeverOcclude {};
		bool RenderAsWireframe {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RenderFlags>;
	};
} // namespace rivet::ddl::generated

// clang-format on
