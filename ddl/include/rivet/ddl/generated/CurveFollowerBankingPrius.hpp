// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CurveFollowerBankingPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CurveFollowerBankingPrius";
		constexpr static rivet::rivet_type_id type_id = 0xbd7c1f6;

		constexpr static std::string_view StartEnabled_type_name = "StartEnabled";
		constexpr static rivet::rivet_type_id StartEnabled_type_id = 0x6f36ca8b;
		constexpr static std::string_view UseBankAnim_type_name = "UseBankAnim";
		constexpr static rivet::rivet_type_id UseBankAnim_type_id = 0x1e1c5a38;
		constexpr static std::string_view UseLeanAnimVar_type_name = "UseLeanAnimVar";
		constexpr static rivet::rivet_type_id UseLeanAnimVar_type_id = 0x18350f9a;
		constexpr static std::string_view NormalizeBank_type_name = "NormalizeBank";
		constexpr static rivet::rivet_type_id NormalizeBank_type_id = 0x6c86d595;
		constexpr static std::string_view ReverseNormBank_type_name = "ReverseNormBank";
		constexpr static rivet::rivet_type_id ReverseNormBank_type_id = 0x4a0fccad;
		constexpr static std::string_view MaxBankAngle_type_name = "MaxBankAngle";
		constexpr static rivet::rivet_type_id MaxBankAngle_type_id = 0x289fc108;
		constexpr static std::string_view SpeedForMaxAngle_type_name = "SpeedForMaxAngle";
		constexpr static rivet::rivet_type_id SpeedForMaxAngle_type_id = 0xd2b9577f;
		constexpr static std::string_view LookAheadTime_type_name = "LookAheadTime";
		constexpr static rivet::rivet_type_id LookAheadTime_type_id = 0x463883af;
		constexpr static std::string_view TimeToMaxBank_type_name = "TimeToMaxBank";
		constexpr static rivet::rivet_type_id TimeToMaxBank_type_id = 0x380feea;
		constexpr static std::string_view TimeToExitBank_type_name = "TimeToExitBank";
		constexpr static rivet::rivet_type_id TimeToExitBank_type_id = 0x9958de50;
		constexpr static std::string_view AccelTime_type_name = "AccelTime";
		constexpr static rivet::rivet_type_id AccelTime_type_id = 0x21cf03a7; 

		explicit CurveFollowerBankingPrius() = default;
		explicit CurveFollowerBankingPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool StartEnabled {};
		bool UseBankAnim {};
		bool UseLeanAnimVar {};
		bool NormalizeBank {};
		bool ReverseNormBank {};
		float MaxBankAngle {};
		float SpeedForMaxAngle {};
		float LookAheadTime {};
		float TimeToMaxBank {};
		float TimeToExitBank {};
		float AccelTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CurveFollowerBankingPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
