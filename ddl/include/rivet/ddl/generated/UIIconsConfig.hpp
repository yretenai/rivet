// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct LogoCustomData;
	struct WeaponImageData;
	struct VanityIconData;
	struct CollectibleImageData;
	struct PauseMapIconData;
	struct ShortcutIconData;
	struct GadgetIconData;
	struct WeaponIconData; 

	struct RIVET_DDL_SHARED UIIconsConfig : ConfigBase {
		constexpr static std::string_view type_name = "UIIconsConfig";
		constexpr static rivet::rivet_type_id type_id = 0x5416c35b;

		constexpr static std::string_view Weapons_type_name = "Weapons";
		constexpr static rivet::rivet_type_id Weapons_type_id = 0x53e4d8d9;
		constexpr static std::string_view Gadgets_type_name = "Gadgets";
		constexpr static rivet::rivet_type_id Gadgets_type_id = 0x173f995a;
		constexpr static std::string_view Shortcuts_type_name = "Shortcuts";
		constexpr static rivet::rivet_type_id Shortcuts_type_id = 0x60647757;
		constexpr static std::string_view MapIcons_type_name = "MapIcons";
		constexpr static rivet::rivet_type_id MapIcons_type_id = 0xffa71584;
		constexpr static std::string_view VanityIcons_type_name = "VanityIcons";
		constexpr static rivet::rivet_type_id VanityIcons_type_id = 0xac6fd639;
		constexpr static std::string_view WeaponImages_type_name = "WeaponImages";
		constexpr static rivet::rivet_type_id WeaponImages_type_id = 0x83bf9f25;
		constexpr static std::string_view CollectibleImages_type_name = "CollectibleImages";
		constexpr static rivet::rivet_type_id CollectibleImages_type_id = 0xe3c87c5a;
		constexpr static std::string_view LogoImage_type_name = "LogoImage";
		constexpr static rivet::rivet_type_id LogoImage_type_id = 0xa20558a7;
		constexpr static std::string_view CustomLogos_type_name = "CustomLogos";
		constexpr static rivet::rivet_type_id CustomLogos_type_id = 0x8f1ac676; 

		explicit UIIconsConfig() = default;
		explicit UIIconsConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::WeaponIconData>> Weapons {};
		std::vector<std::shared_ptr<rivet::ddl::generated::GadgetIconData>> Gadgets {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ShortcutIconData>> Shortcuts {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PauseMapIconData>> MapIcons {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityIconData>> VanityIcons {};
		std::vector<std::shared_ptr<rivet::ddl::generated::WeaponImageData>> WeaponImages {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CollectibleImageData>> CollectibleImages {};
		std::string_view LogoImage {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LogoCustomData>> CustomLogos {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UIIconsConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
