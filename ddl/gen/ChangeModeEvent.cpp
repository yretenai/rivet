// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/MechanicAvailabilityChangeEvent.hpp>
#include <rivet/ddl/generated/MechanicInventoryChangeEvent.hpp>
#include <rivet/ddl/generated/ActivityAvailabilityChangeEvent.hpp>
#include <rivet/ddl/generated/MechanicLoadoutChangeEvent.hpp> 

#include <rivet/ddl/generated/ChangeModeEvent.hpp>

namespace rivet::ddl::generated {
	ChangeModeEvent::ChangeModeEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): UDSEventBase(serialized) {
		mode = serialized->get_enum<rivet::ddl::generated::x7080cd4b>(mode_type_id, rivet::ddl::generated::x7080cd4b_values); 
	}

	[[nodiscard]] auto
	ChangeModeEvent::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	ChangeModeEvent::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ChangeModeEvent> {
		if (incoming_type_id == ChangeModeEvent::type_id) {
			return std::make_shared<ChangeModeEvent>(serialized);
		}

		auto MechanicLoadoutChangeEvent_ptr = MechanicLoadoutChangeEvent::from_substruct(incoming_type_id, serialized);
		if (MechanicLoadoutChangeEvent_ptr != nullptr) {
			return MechanicLoadoutChangeEvent_ptr;
		}

		auto MechanicInventoryChangeEvent_ptr = MechanicInventoryChangeEvent::from_substruct(incoming_type_id, serialized);
		if (MechanicInventoryChangeEvent_ptr != nullptr) {
			return MechanicInventoryChangeEvent_ptr;
		}

		auto MechanicAvailabilityChangeEvent_ptr = MechanicAvailabilityChangeEvent::from_substruct(incoming_type_id, serialized);
		if (MechanicAvailabilityChangeEvent_ptr != nullptr) {
			return MechanicAvailabilityChangeEvent_ptr;
		}

		auto ActivityAvailabilityChangeEvent_ptr = ActivityAvailabilityChangeEvent::from_substruct(incoming_type_id, serialized);
		if (ActivityAvailabilityChangeEvent_ptr != nullptr) {
			return ActivityAvailabilityChangeEvent_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
