// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x28ef8b07.hpp>
#include <rivet/ddl/generated/enums/x6898de8f.hpp>
#include <rivet/ddl/generated/enums/AssetExtensions.hpp> 

namespace rivet::ddl::generated {
	struct AssetReferenceDef;
	struct ComponentPrius;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED ActorDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ActorDef";
		constexpr static rivet::rivet_type_id type_id = 0xb8132d8b;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view AssetType_type_name = "AssetType";
		constexpr static rivet::rivet_type_id AssetType_type_id = 0x8970bd6d;
		constexpr static std::string_view AssetPath_type_name = "AssetPath";
		constexpr static rivet::rivet_type_id AssetPath_type_id = 0xefa614b;
		constexpr static std::string_view Template_type_name = "Template";
		constexpr static rivet::rivet_type_id Template_type_id = 0x6d61a2f3;
		constexpr static std::string_view StartActive_type_name = "StartActive";
		constexpr static rivet::rivet_type_id StartActive_type_id = 0x3e035e82;
		constexpr static std::string_view BuilderOnly_type_name = "BuilderOnly";
		constexpr static rivet::rivet_type_id BuilderOnly_type_id = 0x4c7a05db;
		constexpr static std::string_view LookGroup_type_name = "LookGroup";
		constexpr static rivet::rivet_type_id LookGroup_type_id = 0xa286144c;
		constexpr static std::string_view UIColor_type_name = "UIColor";
		constexpr static rivet::rivet_type_id UIColor_type_id = 0x6b34889e;
		constexpr static std::string_view UIOpacity_type_name = "UIOpacity";
		constexpr static rivet::rivet_type_id UIOpacity_type_id = 0xf93e5f7a;
		constexpr static std::string_view Components_type_name = "Components";
		constexpr static rivet::rivet_type_id Components_type_id = 0x357eabc4;
		constexpr static std::string_view AssetRefs_type_name = "AssetRefs";
		constexpr static rivet::rivet_type_id AssetRefs_type_id = 0x516bb823;
		constexpr static std::string_view OldAssetData_type_name = "OldAssetData";
		constexpr static rivet::rivet_type_id OldAssetData_type_id = 0x2e07bd45; 

		explicit ActorDef() = default;
		explicit ActorDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		rivet::ddl::generated::AssetExtensions AssetType {};
		std::string_view AssetPath {};
		bool Template {};
		bool StartActive {};
		bool BuilderOnly {};
		std::string_view LookGroup {};
		rivet::ddl::generated::x6898de8f UIColor {};
		rivet::ddl::generated::x28ef8b07 UIOpacity {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ComponentPrius>> Components {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AssetReferenceDef>> AssetRefs {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> OldAssetData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActorDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
