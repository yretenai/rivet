// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct UIArenaChallengeReward; 

	struct RIVET_DDL_SHARED UIArenaChallenge : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UIArenaChallenge";
		constexpr static rivet::rivet_type_id type_id = 0x8d9cbbf4;

		constexpr static std::string_view Title_type_name = "Title";
		constexpr static rivet::rivet_type_id Title_type_id = 0x3265b4aa;
		constexpr static std::string_view Description_type_name = "Description";
		constexpr static rivet::rivet_type_id Description_type_id = 0xe03811fd;
		constexpr static std::string_view Reward_type_name = "Reward";
		constexpr static rivet::rivet_type_id Reward_type_id = 0x70a93c34;
		constexpr static std::string_view RewardSecondary_type_name = "RewardSecondary";
		constexpr static rivet::rivet_type_id RewardSecondary_type_id = 0x705ae88;
		constexpr static std::string_view ChallengeModeReward_type_name = "ChallengeModeReward";
		constexpr static rivet::rivet_type_id ChallengeModeReward_type_id = 0x4f23303;
		constexpr static std::string_view ChallengeModeRewardSecondary_type_name = "ChallengeModeRewardSecondary";
		constexpr static rivet::rivet_type_id ChallengeModeRewardSecondary_type_id = 0x2514e3a5;
		constexpr static std::string_view MissionName_type_name = "MissionName";
		constexpr static rivet::rivet_type_id MissionName_type_id = 0xa5c30e60;
		constexpr static std::string_view GlobalSaveTableKey_type_name = "GlobalSaveTableKey";
		constexpr static rivet::rivet_type_id GlobalSaveTableKey_type_id = 0x6cecc314; 

		explicit UIArenaChallenge() = default;
		explicit UIArenaChallenge([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Title {};
		std::string_view Description {};
		std::shared_ptr<rivet::ddl::generated::UIArenaChallengeReward> Reward {};
		std::shared_ptr<rivet::ddl::generated::UIArenaChallengeReward> RewardSecondary {};
		std::shared_ptr<rivet::ddl::generated::UIArenaChallengeReward> ChallengeModeReward {};
		std::shared_ptr<rivet::ddl::generated::UIArenaChallengeReward> ChallengeModeRewardSecondary {};
		std::string_view MissionName {};
		std::string_view GlobalSaveTableKey {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UIArenaChallenge>;
	};
} // namespace rivet::ddl::generated

// clang-format on
