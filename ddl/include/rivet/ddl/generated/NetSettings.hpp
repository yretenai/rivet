// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED NetSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "NetSettings";
		constexpr static rivet::rivet_type_id type_id = 0x7691d1e;

		constexpr static std::string_view LanTimeoutEnable_type_name = "LanTimeoutEnable";
		constexpr static rivet::rivet_type_id LanTimeoutEnable_type_id = 0x6596fc13;
		constexpr static std::string_view VersionCheckEnable_type_name = "VersionCheckEnable";
		constexpr static rivet::rivet_type_id VersionCheckEnable_type_id = 0xbf139f5;
		constexpr static std::string_view PingPort_type_name = "PingPort";
		constexpr static rivet::rivet_type_id PingPort_type_id = 0xf6561226;
		constexpr static std::string_view PingPortExternal_type_name = "PingPortExternal";
		constexpr static rivet::rivet_type_id PingPortExternal_type_id = 0x16fdb4a6;
		constexpr static std::string_view RoomListRequestPort_type_name = "RoomListRequestPort";
		constexpr static rivet::rivet_type_id RoomListRequestPort_type_id = 0xd6d9ca8c;
		constexpr static std::string_view RoomListResponsePort_type_name = "RoomListResponsePort";
		constexpr static rivet::rivet_type_id RoomListResponsePort_type_id = 0xf433af4c;
		constexpr static std::string_view DefaultBrowsePool_type_name = "DefaultBrowsePool";
		constexpr static rivet::rivet_type_id DefaultBrowsePool_type_id = 0xe0cefa80;
		constexpr static std::string_view RestrictBrowseGamesToFriends_type_name = "RestrictBrowseGamesToFriends";
		constexpr static rivet::rivet_type_id RestrictBrowseGamesToFriends_type_id = 0x98bd7c55;
		constexpr static std::string_view RestoreRoomAvailableWhenLoseClients_type_name = "RestoreRoomAvailableWhenLoseClients";
		constexpr static rivet::rivet_type_id RestoreRoomAvailableWhenLoseClients_type_id = 0x4da22870;
		constexpr static std::string_view IntrospectionEnable_type_name = "IntrospectionEnable";
		constexpr static rivet::rivet_type_id IntrospectionEnable_type_id = 0x9243e896;
		constexpr static std::string_view TitleId_type_name = "TitleId";
		constexpr static rivet::rivet_type_id TitleId_type_id = 0xf380409e;
		constexpr static std::string_view VersionId_type_name = "VersionId";
		constexpr static rivet::rivet_type_id VersionId_type_id = 0x574d6401;
		constexpr static std::string_view LocalAddress_type_name = "LocalAddress";
		constexpr static rivet::rivet_type_id LocalAddress_type_id = 0xff3cab9b;
		constexpr static std::string_view Enable_type_name = "Enable";
		constexpr static rivet::rivet_type_id Enable_type_id = 0xcdd88655;
		constexpr static std::string_view ProfilingEnable_type_name = "ProfilingEnable";
		constexpr static rivet::rivet_type_id ProfilingEnable_type_id = 0xe9b56f54;
		constexpr static std::string_view LanEnable_type_name = "LanEnable";
		constexpr static rivet::rivet_type_id LanEnable_type_id = 0x5ca50228;
		constexpr static std::string_view P2PEnable_type_name = "P2PEnable";
		constexpr static rivet::rivet_type_id P2PEnable_type_id = 0x35a49967;
		constexpr static std::string_view VoiceChatEnable_type_name = "VoiceChatEnable";
		constexpr static rivet::rivet_type_id VoiceChatEnable_type_id = 0xe60157a;
		constexpr static std::string_view AwardsEnable_type_name = "AwardsEnable";
		constexpr static rivet::rivet_type_id AwardsEnable_type_id = 0xf02a15b5; 

		explicit NetSettings() = default;
		explicit NetSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool LanTimeoutEnable {};
		bool VersionCheckEnable {};
		uint16_t PingPort {};
		uint16_t PingPortExternal {};
		uint16_t RoomListRequestPort {};
		uint16_t RoomListResponsePort {};
		std::string_view DefaultBrowsePool {};
		bool RestrictBrowseGamesToFriends {};
		bool RestoreRoomAvailableWhenLoseClients {};
		bool IntrospectionEnable {};
		uint64_t TitleId {};
		uint32_t VersionId {};
		uint32_t LocalAddress {};
		bool Enable {};
		bool ProfilingEnable {};
		bool LanEnable {};
		bool P2PEnable {};
		bool VoiceChatEnable {};
		bool AwardsEnable {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<NetSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
