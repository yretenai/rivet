// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DebugSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DebugSettings";
		constexpr static rivet::rivet_type_id type_id = 0x177d9f75;

		constexpr static std::string_view DrawCommandLine_type_name = "DrawCommandLine";
		constexpr static rivet::rivet_type_id DrawCommandLine_type_id = 0x3ea7200a;
		constexpr static std::string_view AutoHost_type_name = "AutoHost";
		constexpr static rivet::rivet_type_id AutoHost_type_id = 0xf8b2f124;
		constexpr static std::string_view AutoJoin_type_name = "AutoJoin";
		constexpr static rivet::rivet_type_id AutoJoin_type_id = 0x1ff43a0e;
		constexpr static std::string_view AutoJoinServerName_type_name = "AutoJoinServerName";
		constexpr static rivet::rivet_type_id AutoJoinServerName_type_id = 0x6e052556;
		constexpr static std::string_view FrontendRepeatDelay_type_name = "FrontendRepeatDelay";
		constexpr static rivet::rivet_type_id FrontendRepeatDelay_type_id = 0xf79d0ee6;
		constexpr static std::string_view FrontendRepeatRate_type_name = "FrontendRepeatRate";
		constexpr static rivet::rivet_type_id FrontendRepeatRate_type_id = 0x8544732;
		constexpr static std::string_view FrontendRequireLockCode_type_name = "FrontendRequireLockCode";
		constexpr static rivet::rivet_type_id FrontendRequireLockCode_type_id = 0x9b3fd52e;
		constexpr static std::string_view SpawnSubprocess_type_name = "SpawnSubprocess";
		constexpr static rivet::rivet_type_id SpawnSubprocess_type_id = 0xc9cbdd9b;
		constexpr static std::string_view LoadWithMultiplePlayers_type_name = "LoadWithMultiplePlayers";
		constexpr static rivet::rivet_type_id LoadWithMultiplePlayers_type_id = 0x7dba7981;
		constexpr static std::string_view AutoMatchmake_type_name = "AutoMatchmake";
		constexpr static rivet::rivet_type_id AutoMatchmake_type_id = 0x68777e3;
		constexpr static std::string_view OverrideServerName_type_name = "OverrideServerName";
		constexpr static rivet::rivet_type_id OverrideServerName_type_id = 0x51752de2;
		constexpr static std::string_view DayOffset_type_name = "DayOffset";
		constexpr static rivet::rivet_type_id DayOffset_type_id = 0xefae0092;
		constexpr static std::string_view DebugServerInfoEnable_type_name = "DebugServerInfoEnable";
		constexpr static rivet::rivet_type_id DebugServerInfoEnable_type_id = 0x839b460e;
		constexpr static std::string_view DebugCurrentLocalTimeEnable_type_name = "DebugCurrentLocalTimeEnable";
		constexpr static rivet::rivet_type_id DebugCurrentLocalTimeEnable_type_id = 0xc7f48756;
		constexpr static std::string_view SaveToDisk_type_name = "SaveToDisk";
		constexpr static rivet::rivet_type_id SaveToDisk_type_id = 0xdc14613b;
		constexpr static std::string_view MatOverrideVolumesEnable_type_name = "MatOverrideVolumesEnable";
		constexpr static rivet::rivet_type_id MatOverrideVolumesEnable_type_id = 0x704c5464;
		constexpr static std::string_view DrawLightingCondition_type_name = "DrawLightingCondition";
		constexpr static rivet::rivet_type_id DrawLightingCondition_type_id = 0x550f0891;
		constexpr static std::string_view DisableAllPrefabSpawning_type_name = "DisableAllPrefabSpawning";
		constexpr static rivet::rivet_type_id DisableAllPrefabSpawning_type_id = 0xcc01680d;
		constexpr static std::string_view VignetteMemTest_type_name = "VignetteMemTest";
		constexpr static rivet::rivet_type_id VignetteMemTest_type_id = 0xceddda51;
		constexpr static std::string_view CrimeMemTest_type_name = "CrimeMemTest";
		constexpr static rivet::rivet_type_id CrimeMemTest_type_id = 0x1c427b31;
		constexpr static std::string_view CollectiblesMemTest_type_name = "CollectiblesMemTest";
		constexpr static rivet::rivet_type_id CollectiblesMemTest_type_id = 0x10309889;
		constexpr static std::string_view FullscreenMaterialName_type_name = "FullscreenMaterialName";
		constexpr static rivet::rivet_type_id FullscreenMaterialName_type_id = 0xd19327d1;
		constexpr static std::string_view StagingMemoryLimit_type_name = "StagingMemoryLimit";
		constexpr static rivet::rivet_type_id StagingMemoryLimit_type_id = 0x961d5753;
		constexpr static std::string_view EnableDPadQuickSelect_type_name = "EnableDPadQuickSelect";
		constexpr static rivet::rivet_type_id EnableDPadQuickSelect_type_id = 0x1723ede2;
		constexpr static std::string_view DoWeaponTriggerEffects_type_name = "DoWeaponTriggerEffects";
		constexpr static rivet::rivet_type_id DoWeaponTriggerEffects_type_id = 0x5e8b1743;
		constexpr static std::string_view DoHoverbootSurfaceDeformation_type_name = "DoHoverbootSurfaceDeformation";
		constexpr static rivet::rivet_type_id DoHoverbootSurfaceDeformation_type_id = 0xb5efa675;
		constexpr static std::string_view PlayDialogAudit_type_name = "PlayDialogAudit";
		constexpr static rivet::rivet_type_id PlayDialogAudit_type_id = 0x6401ee36; 

		explicit DebugSettings() = default;
		explicit DebugSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool DrawCommandLine {};
		bool AutoHost {};
		bool AutoJoin {};
		std::string_view AutoJoinServerName {};
		float FrontendRepeatDelay {};
		float FrontendRepeatRate {};
		bool FrontendRequireLockCode {};
		bool SpawnSubprocess {};
		bool LoadWithMultiplePlayers {};
		bool AutoMatchmake {};
		std::string_view OverrideServerName {};
		int32_t DayOffset {};
		bool DebugServerInfoEnable {};
		bool DebugCurrentLocalTimeEnable {};
		bool SaveToDisk {};
		bool MatOverrideVolumesEnable {};
		bool DrawLightingCondition {};
		bool DisableAllPrefabSpawning {};
		bool VignetteMemTest {};
		bool CrimeMemTest {};
		bool CollectiblesMemTest {};
		std::string_view FullscreenMaterialName {};
		uint64_t StagingMemoryLimit {};
		bool EnableDPadQuickSelect {};
		bool DoWeaponTriggerEffects {};
		bool DoHoverbootSurfaceDeformation {};
		bool PlayDialogAudit {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
