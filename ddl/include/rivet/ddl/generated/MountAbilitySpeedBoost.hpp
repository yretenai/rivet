// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/MountAbilityBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MountAbilitySpeedBoost : MountAbilityBase {
		constexpr const static std::string_view type_name = "MountAbilitySpeedBoost";
		constexpr const static rivet::rivet_type_id type_id = 0x3992ae0d;

		constexpr const static std::string_view AdditionalBoostSpeed_type_name = "AdditionalBoostSpeed";
		constexpr const static rivet::rivet_type_id AdditionalBoostSpeed_type_id = 0xb32eb162;
		constexpr const static std::string_view BoostDuration_type_name = "BoostDuration";
		constexpr const static rivet::rivet_type_id BoostDuration_type_id = 0x6d72cb38;
		constexpr const static std::string_view HoldToBoost_type_name = "HoldToBoost";
		constexpr const static rivet::rivet_type_id HoldToBoost_type_id = 0xbde99b1c;
		constexpr const static std::string_view BoostIntroAnim_type_name = "BoostIntroAnim";
		constexpr const static rivet::rivet_type_id BoostIntroAnim_type_id = 0x11558527;
		constexpr const static std::string_view BoostLoopingAnim_type_name = "BoostLoopingAnim";
		constexpr const static rivet::rivet_type_id BoostLoopingAnim_type_id = 0xcdf4dc19;
		constexpr const static std::string_view BoostOutroAnim_type_name = "BoostOutroAnim";
		constexpr const static rivet::rivet_type_id BoostOutroAnim_type_id = 0x439ed1d0; 

		explicit MountAbilitySpeedBoost() = default;
		explicit MountAbilitySpeedBoost([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float AdditionalBoostSpeed {};
		float BoostDuration {};
		bool HoldToBoost {};
		std::string_view BoostIntroAnim {};
		std::string_view BoostLoopingAnim {};
		std::string_view BoostOutroAnim {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MountAbilitySpeedBoost>;
	};
} // namespace rivet::ddl::generated

// clang-format on
