// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/TrapezoidCrossSection.hpp>
#include <rivet/ddl/generated/ModelAsCrossSection.hpp>
#include <rivet/ddl/generated/EllipseCrossSection.hpp>
#include <rivet/ddl/generated/ModelSliceAsCrossSection.hpp>
#include <rivet/ddl/generated/CurveAsCrossSection.hpp> 

#include <rivet/ddl/generated/CrossSectionChoice.hpp>

namespace rivet::ddl::generated {
	CrossSectionChoice::CrossSectionChoice([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {

	}

	[[nodiscard]] auto
	CrossSectionChoice::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	CrossSectionChoice::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CrossSectionChoice> {
		if (incoming_type_id == CrossSectionChoice::type_id) {
			return std::make_shared<CrossSectionChoice>(serialized);
		}

		auto CurveAsCrossSection_ptr = CurveAsCrossSection::from_substruct(incoming_type_id, serialized);
		if (CurveAsCrossSection_ptr != nullptr) {
			return CurveAsCrossSection_ptr;
		}

		auto ModelSliceAsCrossSection_ptr = ModelSliceAsCrossSection::from_substruct(incoming_type_id, serialized);
		if (ModelSliceAsCrossSection_ptr != nullptr) {
			return ModelSliceAsCrossSection_ptr;
		}

		auto EllipseCrossSection_ptr = EllipseCrossSection::from_substruct(incoming_type_id, serialized);
		if (EllipseCrossSection_ptr != nullptr) {
			return EllipseCrossSection_ptr;
		}

		auto ModelAsCrossSection_ptr = ModelAsCrossSection::from_substruct(incoming_type_id, serialized);
		if (ModelAsCrossSection_ptr != nullptr) {
			return ModelAsCrossSection_ptr;
		}

		auto TrapezoidCrossSection_ptr = TrapezoidCrossSection::from_substruct(incoming_type_id, serialized);
		if (TrapezoidCrossSection_ptr != nullptr) {
			return TrapezoidCrossSection_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
