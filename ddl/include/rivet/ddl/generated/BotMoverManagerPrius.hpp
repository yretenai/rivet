// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/MoverManagerPrius.hpp> 

namespace rivet::ddl::generated {
	struct CVCShapeConfig; 

	struct RIVET_DDL_SHARED BotMoverManagerPrius : MoverManagerPrius {
		constexpr static std::string_view type_name = "BotMoverManagerPrius";
		constexpr static rivet::rivet_type_id type_id = 0xf2f8cca5;

		constexpr static std::string_view CVCShape_type_name = "CVCShape";
		constexpr static rivet::rivet_type_id CVCShape_type_id = 0xd25d46cf;
		constexpr static std::string_view UseNavAsGround_type_name = "UseNavAsGround";
		constexpr static rivet::rivet_type_id UseNavAsGround_type_id = 0x4a6496d9;
		constexpr static std::string_view UseSingleMoveSweep_type_name = "UseSingleMoveSweep";
		constexpr static rivet::rivet_type_id UseSingleMoveSweep_type_id = 0x981cd1bd;
		constexpr static std::string_view EnableSpeculativeCollision_type_name = "EnableSpeculativeCollision";
		constexpr static rivet::rivet_type_id EnableSpeculativeCollision_type_id = 0x62f26d8d;
		constexpr static std::string_view PushOnEqual_type_name = "PushOnEqual";
		constexpr static rivet::rivet_type_id PushOnEqual_type_id = 0x6bcc1e52;
		constexpr static std::string_view UseFullSpeedDeflection_type_name = "UseFullSpeedDeflection";
		constexpr static rivet::rivet_type_id UseFullSpeedDeflection_type_id = 0x71222edc;
		constexpr static std::string_view UseSoftCollisions_type_name = "UseSoftCollisions";
		constexpr static rivet::rivet_type_id UseSoftCollisions_type_id = 0xf7e3f4b6;
		constexpr static std::string_view SoftCVCInner_type_name = "SoftCVCInner";
		constexpr static rivet::rivet_type_id SoftCVCInner_type_id = 0x5d1c9b6a;
		constexpr static std::string_view SoftCVCOuter_type_name = "SoftCVCOuter";
		constexpr static rivet::rivet_type_id SoftCVCOuter_type_id = 0x44f598f2; 

		explicit BotMoverManagerPrius() = default;
		explicit BotMoverManagerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::CVCShapeConfig> CVCShape {};
		bool UseNavAsGround {};
		bool UseSingleMoveSweep {};
		bool EnableSpeculativeCollision {};
		bool PushOnEqual {};
		bool UseFullSpeedDeflection {};
		bool UseSoftCollisions {};
		float SoftCVCInner {};
		float SoftCVCOuter {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotMoverManagerPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
