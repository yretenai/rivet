// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xbf5ff3c6.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RYNOPortalObjectPrius : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "RYNOPortalObjectPrius";
		constexpr const static rivet::rivet_type_id type_id = 0x3cdfcbb3;

		constexpr const static std::string_view PostCompositeShader_type_name = "PostCompositeShader";
		constexpr const static rivet::rivet_type_id PostCompositeShader_type_id = 0xe2b72d5f;
		constexpr const static std::string_view PreCompositeShader_type_name = "PreCompositeShader";
		constexpr const static rivet::rivet_type_id PreCompositeShader_type_id = 0x76e460d;
		constexpr const static std::string_view Conduit_type_name = "Conduit";
		constexpr const static rivet::rivet_type_id Conduit_type_id = 0xfc5131b9;
		constexpr const static std::string_view PortalActor_type_name = "PortalActor";
		constexpr const static rivet::rivet_type_id PortalActor_type_id = 0xdfbb9f90;
		constexpr const static std::string_view Size_type_name = "Size";
		constexpr const static rivet::rivet_type_id Size_type_id = 0xc750e4da;
		constexpr const static std::string_view VersionIndex_type_name = "VersionIndex";
		constexpr const static rivet::rivet_type_id VersionIndex_type_id = 0x6e091c9a; 

		explicit RYNOPortalObjectPrius() = default;
		explicit RYNOPortalObjectPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view PostCompositeShader {};
		std::string_view PreCompositeShader {};
		std::string_view Conduit {};
		uint32_t PortalActor {};
		rivet::ddl::generated::xbf5ff3c6 Size {};
		uint8_t VersionIndex {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RYNOPortalObjectPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
