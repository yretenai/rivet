// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct UDSZoneData;
	struct ActivityDef;
	struct ActivitySubCategoryInfo; 

	struct RIVET_DDL_SHARED ActivitySystemConfig : ConfigBase {
		constexpr const static std::string_view type_name = "ActivitySystemConfig";
		constexpr const static rivet::rivet_type_id type_id = 0x62490863;

		constexpr const static std::string_view Activities_type_name = "Activities";
		constexpr const static rivet::rivet_type_id Activities_type_id = 0x6ec7f1dc;
		constexpr const static std::string_view Zones_type_name = "Zones";
		constexpr const static rivet::rivet_type_id Zones_type_id = 0x9c997da9;
		constexpr const static std::string_view SubCategories_type_name = "SubCategories";
		constexpr const static rivet::rivet_type_id SubCategories_type_id = 0x1546408e; 

		explicit ActivitySystemConfig() = default;
		explicit ActivitySystemConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityDef>> Activities {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UDSZoneData>> Zones {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivitySubCategoryInfo>> SubCategories {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActivitySystemConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
