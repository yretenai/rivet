// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED PlaceDecalOnActivatePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PlaceDecalOnActivatePrius";
		constexpr static rivet::rivet_type_id type_id = 0xed1545ca;

		constexpr static std::string_view Delay_type_name = "Delay";
		constexpr static rivet::rivet_type_id Delay_type_id = 0xabc94c5a;
		constexpr static std::string_view DecalMaterial_type_name = "DecalMaterial";
		constexpr static rivet::rivet_type_id DecalMaterial_type_id = 0xe3182aaa;
		constexpr static std::string_view DecalLifetime_type_name = "DecalLifetime";
		constexpr static rivet::rivet_type_id DecalLifetime_type_id = 0xa2416fb7;
		constexpr static std::string_view DecalFadeDist_type_name = "DecalFadeDist";
		constexpr static rivet::rivet_type_id DecalFadeDist_type_id = 0x37c7b9f;
		constexpr static std::string_view DecalFadeTime_type_name = "DecalFadeTime";
		constexpr static rivet::rivet_type_id DecalFadeTime_type_id = 0xed94332d;
		constexpr static std::string_view DecalAlpha_type_name = "DecalAlpha";
		constexpr static rivet::rivet_type_id DecalAlpha_type_id = 0x2dd498f5;
		constexpr static std::string_view SkipBots_type_name = "SkipBots";
		constexpr static rivet::rivet_type_id SkipBots_type_id = 0x12add2f7;
		constexpr static std::string_view DecalOffset_type_name = "DecalOffset";
		constexpr static rivet::rivet_type_id DecalOffset_type_id = 0xeb459f29; 

		explicit PlaceDecalOnActivatePrius() = default;
		explicit PlaceDecalOnActivatePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Delay {};
		std::string_view DecalMaterial {};
		float DecalLifetime {};
		float DecalFadeDist {};
		float DecalFadeTime {};
		float DecalAlpha {};
		bool SkipBots {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> DecalOffset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlaceDecalOnActivatePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
