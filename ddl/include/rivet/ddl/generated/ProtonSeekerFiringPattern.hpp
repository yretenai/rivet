// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ProtonSeekerFiringPattern : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "ProtonSeekerFiringPattern";
		constexpr const static rivet::rivet_type_id type_id = 0xec4465ee;

		constexpr const static std::string_view Weight_type_name = "Weight";
		constexpr const static rivet::rivet_type_id Weight_type_id = 0x39b51b26;
		constexpr const static std::string_view AttackDelay_type_name = "AttackDelay";
		constexpr const static rivet::rivet_type_id AttackDelay_type_id = 0x54b94fb2;
		constexpr const static std::string_view ShotDelay_type_name = "ShotDelay";
		constexpr const static rivet::rivet_type_id ShotDelay_type_id = 0xf6e0e4e5;
		constexpr const static std::string_view AttackCount_type_name = "AttackCount";
		constexpr const static rivet::rivet_type_id AttackCount_type_id = 0x63fa8b4b;
		constexpr const static std::string_view ShotCount_type_name = "ShotCount";
		constexpr const static rivet::rivet_type_id ShotCount_type_id = 0xc1a3201c;
		constexpr const static std::string_view ExtraShotCount_type_name = "ExtraShotCount";
		constexpr const static rivet::rivet_type_id ExtraShotCount_type_id = 0xf3ebd124;
		constexpr const static std::string_view ExplosiveShotCount_type_name = "ExplosiveShotCount";
		constexpr const static rivet::rivet_type_id ExplosiveShotCount_type_id = 0xf01c14b1;
		constexpr const static std::string_view Scatter_type_name = "Scatter";
		constexpr const static rivet::rivet_type_id Scatter_type_id = 0x7a102d4c;
		constexpr const static std::string_view Concurrent_type_name = "Concurrent";
		constexpr const static rivet::rivet_type_id Concurrent_type_id = 0x5489eb5;
		constexpr const static std::string_view TimeToCenterOfCurve_type_name = "TimeToCenterOfCurve";
		constexpr const static rivet::rivet_type_id TimeToCenterOfCurve_type_id = 0xb657148c;
		constexpr const static std::string_view ShotDuration_type_name = "ShotDuration";
		constexpr const static rivet::rivet_type_id ShotDuration_type_id = 0x96302a4d;
		constexpr const static std::string_view ExplosiveShotFuseMin_type_name = "ExplosiveShotFuseMin";
		constexpr const static rivet::rivet_type_id ExplosiveShotFuseMin_type_id = 0x7abf85cd;
		constexpr const static std::string_view ExplosiveShotFuseMax_type_name = "ExplosiveShotFuseMax";
		constexpr const static rivet::rivet_type_id ExplosiveShotFuseMax_type_id = 0x46b2ba94;
		constexpr const static std::string_view CurveActor_type_name = "CurveActor";
		constexpr const static rivet::rivet_type_id CurveActor_type_id = 0xc23a6c53;
		constexpr const static std::string_view AttachCurveToTarget_type_name = "AttachCurveToTarget";
		constexpr const static rivet::rivet_type_id AttachCurveToTarget_type_id = 0xf459bfe3;
		constexpr const static std::string_view AttachCurveTargetVol_type_name = "AttachCurveTargetVol";
		constexpr const static rivet::rivet_type_id AttachCurveTargetVol_type_id = 0xd3a1937; 

		explicit ProtonSeekerFiringPattern() = default;
		explicit ProtonSeekerFiringPattern([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Weight {};
		float AttackDelay {};
		float ShotDelay {};
		uint8_t AttackCount {};
		uint8_t ShotCount {};
		uint8_t ExtraShotCount {};
		uint8_t ExplosiveShotCount {};
		bool Scatter {};
		bool Concurrent {};
		float TimeToCenterOfCurve {};
		float ShotDuration {};
		float ExplosiveShotFuseMin {};
		float ExplosiveShotFuseMax {};
		uint64_t CurveActor {};
		bool AttachCurveToTarget {};
		uint64_t AttachCurveTargetVol {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ProtonSeekerFiringPattern>;
	};
} // namespace rivet::ddl::generated

// clang-format on
