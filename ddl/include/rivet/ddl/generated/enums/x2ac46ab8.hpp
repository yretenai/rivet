// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x2ac46ab8_type_name = "x2ac46ab8";
	constexpr static rivet::rivet_type_id x2ac46ab8_type_id = 0x2ac46ab8;

	constexpr static std::array<std::string_view, 8> x2ac46ab8_values = {
		"kRandom",
		"kIndex",
		"kClosest",
		"kFurthest",
		"kCloserThanDistanceValue",
		"kFurtherThanDistanceValue",
		"kInAnyCameraView",
		"kNotInAnyCameraView", 
	};

	constexpr static std::array<std::string_view, 8> x2ac46ab8_labels = {
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE", 
	};

	enum class x2ac46ab8 : uint64_t {
		Random,
		Index,
		Closest,
		Furthest,
		CloserThanDistanceValue,
		FurtherThanDistanceValue,
		InAnyCameraView,
		NotInAnyCameraView, 
	};
} // namespace rivet::ddl::generated

// clang-format on
