// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/MountAbilityBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MountAbilitySpeedBrake : MountAbilityBase {
		constexpr const static std::string_view type_name = "MountAbilitySpeedBrake";
		constexpr const static rivet::rivet_type_id type_id = 0x79d4b4ee;

		constexpr const static std::string_view BrakeSpeed_type_name = "BrakeSpeed";
		constexpr const static rivet::rivet_type_id BrakeSpeed_type_id = 0xf6f7096d;
		constexpr const static std::string_view BrakeIntro_type_name = "BrakeIntro";
		constexpr const static rivet::rivet_type_id BrakeIntro_type_id = 0xe3d432bb;
		constexpr const static std::string_view BrakeLoop_type_name = "BrakeLoop";
		constexpr const static rivet::rivet_type_id BrakeLoop_type_id = 0xc61d9954;
		constexpr const static std::string_view BrakeOutro_type_name = "BrakeOutro";
		constexpr const static rivet::rivet_type_id BrakeOutro_type_id = 0xeb8c1785; 

		explicit MountAbilitySpeedBrake() = default;
		explicit MountAbilitySpeedBrake([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float BrakeSpeed {};
		std::string_view BrakeIntro {};
		std::string_view BrakeLoop {};
		std::string_view BrakeOutro {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MountAbilitySpeedBrake>;
	};
} // namespace rivet::ddl::generated

// clang-format on
