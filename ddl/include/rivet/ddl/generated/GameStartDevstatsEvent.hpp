// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED GameStartDevstatsEvent : EventBase {
		constexpr static std::string_view type_name = "GameStartDevstatsEvent";
		constexpr static rivet::rivet_type_id type_id = 0xe9795bae;

		constexpr static std::string_view game_id_type_name = "game_id";
		constexpr static rivet::rivet_type_id game_id_type_id = 0x2ad883a1;
		constexpr static std::string_view level_id_type_name = "level_id";
		constexpr static rivet::rivet_type_id level_id_type_id = 0x5cc69481;
		constexpr static std::string_view mode_type_name = "mode";
		constexpr static rivet::rivet_type_id mode_type_id = 0x7682825;
		constexpr static std::string_view player_count_type_name = "player_count";
		constexpr static rivet::rivet_type_id player_count_type_id = 0xe114dc5c;
		constexpr static std::string_view player_count_local_type_name = "player_count_local";
		constexpr static rivet::rivet_type_id player_count_local_type_id = 0xf03ee55c;
		constexpr static std::string_view is_online_type_name = "is_online";
		constexpr static rivet::rivet_type_id is_online_type_id = 0xce772e9a; 

		explicit GameStartDevstatsEvent() = default;
		explicit GameStartDevstatsEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view game_id {};
		std::string_view level_id {};
		std::string_view mode {};
		int32_t player_count {};
		int32_t player_count_local {};
		bool is_online {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameStartDevstatsEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
