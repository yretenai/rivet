// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/WeaponGamePrius.hpp>
#include <rivet/ddl/generated/enums/x17b935fe.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED WeaponClankPuzzlePrius : WeaponGamePrius {
		constexpr const static std::string_view type_name = "WeaponClankPuzzlePrius";
		constexpr const static rivet::rivet_type_id type_id = 0x4fd7e80a;

		constexpr const static std::string_view PuzzleVolumeType_type_name = "PuzzleVolumeType";
		constexpr const static rivet::rivet_type_id PuzzleVolumeType_type_id = 0x15f23e94;
		constexpr const static std::string_view AmmoPerShot_type_name = "AmmoPerShot";
		constexpr const static rivet::rivet_type_id AmmoPerShot_type_id = 0x2570ce83; 

		explicit WeaponClankPuzzlePrius() = default;
		explicit WeaponClankPuzzlePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x17b935fe PuzzleVolumeType {};
		float AmmoPerShot {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponClankPuzzlePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
