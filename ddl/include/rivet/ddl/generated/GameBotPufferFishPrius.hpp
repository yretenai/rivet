// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/GameBotMeleeSwarmerPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED GameBotPufferFishPrius : GameBotMeleeSwarmerPrius {
		constexpr static std::string_view type_name = "GameBotPufferFishPrius";
		constexpr static rivet::rivet_type_id type_id = 0xb1b543b4;

		constexpr static std::string_view SwimVolumes_type_name = "SwimVolumes";
		constexpr static rivet::rivet_type_id SwimVolumes_type_id = 0x62d8446;
		constexpr static std::string_view BreachAnimClues_type_name = "BreachAnimClues";
		constexpr static rivet::rivet_type_id BreachAnimClues_type_id = 0xd57f62e5;
		constexpr static std::string_view EngagedSwimSpeedMult_type_name = "EngagedSwimSpeedMult";
		constexpr static rivet::rivet_type_id EngagedSwimSpeedMult_type_id = 0x451adeb8; 

		explicit GameBotPufferFishPrius() = default;
		explicit GameBotPufferFishPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t SwimVolumes {};
		uint64_t BreachAnimClues {};
		float EngagedSwimSpeedMult {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameBotPufferFishPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
