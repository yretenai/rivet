// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10b3c4cf.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LedgePathPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LedgePathPrius";
		constexpr static rivet::rivet_type_id type_id = 0xe49686c8;

		constexpr static std::string_view Hang_type_name = "Hang";
		constexpr static rivet::rivet_type_id Hang_type_id = 0x8efbd385;
		constexpr static std::string_view Grapple_type_name = "Grapple";
		constexpr static rivet::rivet_type_id Grapple_type_id = 0xfb7145aa;
		constexpr static std::string_view DoubleSided_type_name = "DoubleSided";
		constexpr static rivet::rivet_type_id DoubleSided_type_id = 0x3e799799;
		constexpr static std::string_view Grind_type_name = "Grind";
		constexpr static rivet::rivet_type_id Grind_type_id = 0xc3f2eb51;
		constexpr static std::string_view UnderGrind_type_name = "UnderGrind";
		constexpr static rivet::rivet_type_id UnderGrind_type_id = 0xaafabce5;
		constexpr static std::string_view Slide_type_name = "Slide";
		constexpr static rivet::rivet_type_id Slide_type_id = 0x6bbc22a3;
		constexpr static std::string_view DynamicConnectionsFront_type_name = "DynamicConnectionsFront";
		constexpr static rivet::rivet_type_id DynamicConnectionsFront_type_id = 0xe6edfc98;
		constexpr static std::string_view DynamicConnectionsBack_type_name = "DynamicConnectionsBack";
		constexpr static rivet::rivet_type_id DynamicConnectionsBack_type_id = 0xc37da8c6;
		constexpr static std::string_view DisableLedgeBirds_type_name = "DisableLedgeBirds";
		constexpr static rivet::rivet_type_id DisableLedgeBirds_type_id = 0x2b966d32;
		constexpr static std::string_view DisableBodyCollision_type_name = "DisableBodyCollision";
		constexpr static rivet::rivet_type_id DisableBodyCollision_type_id = 0xc8e3880f;
		constexpr static std::string_view DisableMount_type_name = "DisableMount";
		constexpr static rivet::rivet_type_id DisableMount_type_id = 0x551b97fd;
		constexpr static std::string_view DisableDrop_type_name = "DisableDrop";
		constexpr static rivet::rivet_type_id DisableDrop_type_id = 0x3d656ad2;
		constexpr static std::string_view DisableToLedge_type_name = "DisableToLedge";
		constexpr static rivet::rivet_type_id DisableToLedge_type_id = 0x4d4d8320;
		constexpr static std::string_view UseCurveNormalsAsUp_type_name = "UseCurveNormalsAsUp";
		constexpr static rivet::rivet_type_id UseCurveNormalsAsUp_type_id = 0x32211a4;
		constexpr static std::string_view EnforceCurveDirection_type_name = "EnforceCurveDirection";
		constexpr static rivet::rivet_type_id EnforceCurveDirection_type_id = 0x1f164333;
		constexpr static std::string_view Material_type_name = "Material";
		constexpr static rivet::rivet_type_id Material_type_id = 0x86bfc8e5;
		constexpr static std::string_view ModelActor_type_name = "ModelActor";
		constexpr static rivet::rivet_type_id ModelActor_type_id = 0x2ef07b38; 

		explicit LedgePathPrius() = default;
		explicit LedgePathPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Hang {};
		bool Grapple {};
		bool DoubleSided {};
		bool Grind {};
		bool UnderGrind {};
		bool Slide {};
		bool DynamicConnectionsFront {};
		bool DynamicConnectionsBack {};
		bool DisableLedgeBirds {};
		bool DisableBodyCollision {};
		bool DisableMount {};
		bool DisableDrop {};
		bool DisableToLedge {};
		bool UseCurveNormalsAsUp {};
		bool EnforceCurveDirection {};
		rivet::ddl::generated::x10b3c4cf Material {};
		uint64_t ModelActor {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LedgePathPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
