// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x5eea8b59.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BezierCurveKeyDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BezierCurveKeyDef";
		constexpr static rivet::rivet_type_id type_id = 0x27e050f5;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Time_type_name = "Time";
		constexpr static rivet::rivet_type_id Time_type_id = 0x5f0458f5;
		constexpr static std::string_view Value_type_name = "Value";
		constexpr static rivet::rivet_type_id Value_type_id = 0x42494f5;
		constexpr static std::string_view TangentLocked_type_name = "TangentLocked";
		constexpr static rivet::rivet_type_id TangentLocked_type_id = 0x5f20de0b;
		constexpr static std::string_view TangentTypeIn_type_name = "TangentTypeIn";
		constexpr static rivet::rivet_type_id TangentTypeIn_type_id = 0xced36b14;
		constexpr static std::string_view TangentTimeIn_type_name = "TangentTimeIn";
		constexpr static rivet::rivet_type_id TangentTimeIn_type_id = 0xc4073d4;
		constexpr static std::string_view TangentValueIn_type_name = "TangentValueIn";
		constexpr static rivet::rivet_type_id TangentValueIn_type_id = 0xd69ffa6b;
		constexpr static std::string_view TangentTypeOut_type_name = "TangentTypeOut";
		constexpr static rivet::rivet_type_id TangentTypeOut_type_id = 0xe0c7051b;
		constexpr static std::string_view TangentTimeOut_type_name = "TangentTimeOut";
		constexpr static rivet::rivet_type_id TangentTimeOut_type_id = 0x7b6154b3;
		constexpr static std::string_view TangentValueOut_type_name = "TangentValueOut";
		constexpr static rivet::rivet_type_id TangentValueOut_type_id = 0x20652527; 

		explicit BezierCurveKeyDef() = default;
		explicit BezierCurveKeyDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		float Time {};
		float Value {};
		bool TangentLocked {};
		rivet::ddl::generated::x5eea8b59 TangentTypeIn {};
		float TangentTimeIn {};
		float TangentValueIn {};
		rivet::ddl::generated::x5eea8b59 TangentTypeOut {};
		float TangentTimeOut {};
		float TangentValueOut {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BezierCurveKeyDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
