// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BotHexapodPrius : BotPrius {
		constexpr static std::string_view type_name = "BotHexapodPrius";
		constexpr static rivet::rivet_type_id type_id = 0x4042bbbc;

		constexpr static std::string_view GunWeapon_type_name = "GunWeapon";
		constexpr static rivet::rivet_type_id GunWeapon_type_id = 0xbc92ccf0;
		constexpr static std::string_view LobWeapon_type_name = "LobWeapon";
		constexpr static rivet::rivet_type_id LobWeapon_type_id = 0x141c15ba;
		constexpr static std::string_view CameraShake_type_name = "CameraShake";
		constexpr static rivet::rivet_type_id CameraShake_type_id = 0xefd546ca;
		constexpr static std::string_view CameraPitchAdjustmentUp_type_name = "CameraPitchAdjustmentUp";
		constexpr static rivet::rivet_type_id CameraPitchAdjustmentUp_type_id = 0xd1096e16;
		constexpr static std::string_view CameraPitchAdjustmentDown_type_name = "CameraPitchAdjustmentDown";
		constexpr static rivet::rivet_type_id CameraPitchAdjustmentDown_type_id = 0x83395f58; 

		explicit BotHexapodPrius() = default;
		explicit BotHexapodPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view GunWeapon {};
		std::string_view LobWeapon {};
		std::string_view CameraShake {};
		float CameraPitchAdjustmentUp {};
		float CameraPitchAdjustmentDown {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotHexapodPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
