// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x80286938.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AimAssistAutoTargetLocation : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "AimAssistAutoTargetLocation";
		constexpr const static rivet::rivet_type_id type_id = 0x6734eaa9;

		constexpr const static std::string_view AssistZoneParent_type_name = "AssistZoneParent";
		constexpr const static rivet::rivet_type_id AssistZoneParent_type_id = 0x951f65ee;
		constexpr const static std::string_view FaceAngle_type_name = "FaceAngle";
		constexpr const static rivet::rivet_type_id FaceAngle_type_id = 0xb2c98628;
		constexpr const static std::string_view OverrideRange_type_name = "OverrideRange";
		constexpr const static rivet::rivet_type_id OverrideRange_type_id = 0xa393c43b;
		constexpr const static std::string_view OverrideAngle_type_name = "OverrideAngle";
		constexpr const static rivet::rivet_type_id OverrideAngle_type_id = 0x3095db7b;
		constexpr const static std::string_view RequireBodyVisible_type_name = "RequireBodyVisible";
		constexpr const static rivet::rivet_type_id RequireBodyVisible_type_id = 0xb49e6b43;
		constexpr const static std::string_view RequireHeadVisible_type_name = "RequireHeadVisible";
		constexpr const static rivet::rivet_type_id RequireHeadVisible_type_id = 0xec3ac2bb;
		constexpr const static std::string_view OnlyAsFallback_type_name = "OnlyAsFallback";
		constexpr const static rivet::rivet_type_id OnlyAsFallback_type_id = 0x10937c5e;
		constexpr const static std::string_view LocationType_type_name = "LocationType";
		constexpr const static rivet::rivet_type_id LocationType_type_id = 0xc3db52f8; 

		explicit AimAssistAutoTargetLocation() = default;
		explicit AimAssistAutoTargetLocation([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t AssistZoneParent {};
		float FaceAngle {};
		float OverrideRange {};
		float OverrideAngle {};
		bool RequireBodyVisible {};
		bool RequireHeadVisible {};
		bool OnlyAsFallback {};
		rivet::ddl::generated::x80286938 LocationType {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AimAssistAutoTargetLocation>;
	};
} // namespace rivet::ddl::generated

// clang-format on
