// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/AccessibilitySystemConfig.hpp> 

namespace rivet::ddl::generated {
	struct AccessibilityColorData;
	struct AccessibilityOption; 

	struct RIVET_DDL_SHARED AccessibilitySystemConfigGame : AccessibilitySystemConfig {
		constexpr static std::string_view type_name = "AccessibilitySystemConfigGame";
		constexpr static rivet::rivet_type_id type_id = 0x4306d034;

		constexpr static std::string_view HighContrastPingMaterial_type_name = "HighContrastPingMaterial";
		constexpr static rivet::rivet_type_id HighContrastPingMaterial_type_id = 0xb0b11dfa;
		constexpr static std::string_view ChaseAssistVehicleSpeedMult_type_name = "ChaseAssistVehicleSpeedMult";
		constexpr static rivet::rivet_type_id ChaseAssistVehicleSpeedMult_type_id = 0x36ea2060;
		constexpr static std::string_view ChaseAssistStopDistance_type_name = "ChaseAssistStopDistance";
		constexpr static rivet::rivet_type_id ChaseAssistStopDistance_type_id = 0x155d3c26;
		constexpr static std::string_view DefaultHeroAccesibilityHighlightConfig_type_name = "DefaultHeroAccesibilityHighlightConfig";
		constexpr static rivet::rivet_type_id DefaultHeroAccesibilityHighlightConfig_type_id = 0x6fe830dd;
		constexpr static std::string_view AccessibilityOptions_type_name = "AccessibilityOptions";
		constexpr static rivet::rivet_type_id AccessibilityOptions_type_id = 0xd328654f;
		constexpr static std::string_view ArcColors_type_name = "ArcColors";
		constexpr static rivet::rivet_type_id ArcColors_type_id = 0xf17b9da; 

		explicit AccessibilitySystemConfigGame() = default;
		explicit AccessibilitySystemConfigGame([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view HighContrastPingMaterial {};
		float ChaseAssistVehicleSpeedMult {};
		float ChaseAssistStopDistance {};
		std::string_view DefaultHeroAccesibilityHighlightConfig {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AccessibilityOption>> AccessibilityOptions {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AccessibilityColorData>> ArcColors {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AccessibilitySystemConfigGame>;
	};
} // namespace rivet::ddl::generated

// clang-format on
