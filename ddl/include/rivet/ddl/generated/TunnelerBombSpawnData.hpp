// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct TunnelerBombPrius;
	struct DDLTransform; 

	struct RIVET_DDL_SHARED TunnelerBombSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "TunnelerBombSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x7b75aafd;

		constexpr static std::string_view FiredByHandle_type_name = "FiredByHandle";
		constexpr static rivet::rivet_type_id FiredByHandle_type_id = 0x8e49d787;
		constexpr static std::string_view AttachToHandle_type_name = "AttachToHandle";
		constexpr static rivet::rivet_type_id AttachToHandle_type_id = 0x87ddaee;
		constexpr static std::string_view UnsyncedAttachToHandle_type_name = "UnsyncedAttachToHandle";
		constexpr static rivet::rivet_type_id UnsyncedAttachToHandle_type_id = 0x469d6eb1;
		constexpr static std::string_view AttachToJoint_type_name = "AttachToJoint";
		constexpr static rivet::rivet_type_id AttachToJoint_type_id = 0x66348122;
		constexpr static std::string_view SpawnMat_type_name = "SpawnMat";
		constexpr static rivet::rivet_type_id SpawnMat_type_id = 0x51fbb501;
		constexpr static std::string_view ActorAsset_type_name = "ActorAsset";
		constexpr static rivet::rivet_type_id ActorAsset_type_id = 0x75356989;
		constexpr static std::string_view HasParentActor_type_name = "HasParentActor";
		constexpr static rivet::rivet_type_id HasParentActor_type_id = 0xb4bf48ca;
		constexpr static std::string_view InstantExplode_type_name = "InstantExplode";
		constexpr static rivet::rivet_type_id InstantExplode_type_id = 0xcc6e3cec;
		constexpr static std::string_view BombPrius_type_name = "BombPrius";
		constexpr static rivet::rivet_type_id BombPrius_type_id = 0x9590e9a5; 

		explicit TunnelerBombSpawnData() = default;
		explicit TunnelerBombSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t FiredByHandle {};
		uint64_t AttachToHandle {};
		uint32_t UnsyncedAttachToHandle {};
		int32_t AttachToJoint {};
		std::shared_ptr<rivet::ddl::generated::DDLTransform> SpawnMat {};
		uint64_t ActorAsset {};
		bool HasParentActor {};
		bool InstantExplode {};
		std::shared_ptr<rivet::ddl::generated::TunnelerBombPrius> BombPrius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TunnelerBombSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
