// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/LgcToolModes.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED EditorRenderSettings2 : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "EditorRenderSettings2";
		constexpr static rivet::rivet_type_id type_id = 0x7ab1276f;

		constexpr static std::string_view DimUnselected_type_name = "DimUnselected";
		constexpr static rivet::rivet_type_id DimUnselected_type_id = 0xe6ebeeac;
		constexpr static std::string_view LgcToolMode_type_name = "LgcToolMode";
		constexpr static rivet::rivet_type_id LgcToolMode_type_id = 0xf50e97da;
		constexpr static std::string_view HighQualityLgCapture_type_name = "HighQualityLgCapture";
		constexpr static rivet::rivet_type_id HighQualityLgCapture_type_id = 0xa0c5c666;
		constexpr static std::string_view LgcBounceCount_type_name = "LgcBounceCount";
		constexpr static rivet::rivet_type_id LgcBounceCount_type_id = 0xb8476bb3;
		constexpr static std::string_view ShowSelectionAABB_type_name = "ShowSelectionAABB";
		constexpr static rivet::rivet_type_id ShowSelectionAABB_type_id = 0x8906cdd9; 

		explicit EditorRenderSettings2() = default;
		explicit EditorRenderSettings2([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool DimUnselected {};
		rivet::ddl::generated::LgcToolModes LgcToolMode {};
		bool HighQualityLgCapture {};
		int32_t LgcBounceCount {};
		bool ShowSelectionAABB {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<EditorRenderSettings2>;
	};
} // namespace rivet::ddl::generated

// clang-format on
