// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/PhysicsCustomizationProperties.hpp>
#include <rivet/ddl/generated/ChunkingConfiguration.hpp> 

#include <rivet/ddl/generated/LookChunkingPrius.hpp>

namespace rivet::ddl::generated {
	LookChunkingPrius::LookChunkingPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Name = serialized->get_string(Name_type_id, {});
		MinSpeed = serialized->get_float(MinSpeed_type_id, 7.000000f);
		MaxSpeed = serialized->get_float(MaxSpeed_type_id, 10.000000f);
		BlendFromHitDirection = serialized->get_float(BlendFromHitDirection_type_id, 1.000000f);
		RandomizeChunkVelocity = serialized->get_bool(RandomizeChunkVelocity_type_id, false);
		SpawnChunksAsDebrisFast = serialized->get_bool(SpawnChunksAsDebrisFast_type_id, false);
		ChunkLifetime = serialized->get_float(ChunkLifetime_type_id, -1.000000f);
		ChunkActor = serialized->get_string(ChunkActor_type_id, {});
		ChunkConduit = serialized->get_string(ChunkConduit_type_id, {});
		ChunkType = serialized->get_enum<rivet::ddl::generated::ChunkType>(ChunkType_type_id, rivet::ddl::generated::ChunkType_values, rivet::ddl::generated::ChunkType::Misc);
		Configurations = serialized->unwrap_into_many<rivet::ddl::generated::ChunkingConfiguration>(Configurations_type_id);
		CustomPhysicsPropertiesToApplyOnSpawnedChunks = serialized->unwrap_into<rivet::ddl::generated::PhysicsCustomizationProperties>(CustomPhysicsPropertiesToApplyOnSpawnedChunks_type_id); 
	}

	[[nodiscard]] auto
	LookChunkingPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	LookChunkingPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LookChunkingPrius> {
		if (incoming_type_id == LookChunkingPrius::type_id) {
			return std::make_shared<LookChunkingPrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
