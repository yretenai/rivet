// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HeroMoveAbilities : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroMoveAbilities";
		constexpr static rivet::rivet_type_id type_id = 0x7f488219;

		constexpr static std::string_view Move_type_name = "Move";
		constexpr static rivet::rivet_type_id Move_type_id = 0xdfaef7c8;
		constexpr static std::string_view Run_type_name = "Run";
		constexpr static rivet::rivet_type_id Run_type_id = 0x7a238d09;
		constexpr static std::string_view Jump_type_name = "Jump";
		constexpr static rivet::rivet_type_id Jump_type_id = 0x9723c6a6;
		constexpr static std::string_view DoubleJump_type_name = "DoubleJump";
		constexpr static rivet::rivet_type_id DoubleJump_type_id = 0x93d25f20;
		constexpr static std::string_view Shoot_type_name = "Shoot";
		constexpr static rivet::rivet_type_id Shoot_type_id = 0x6917307f;
		constexpr static std::string_view Melee_type_name = "Melee";
		constexpr static rivet::rivet_type_id Melee_type_id = 0xd6b4b760;
		constexpr static std::string_view Ledge_type_name = "Ledge";
		constexpr static rivet::rivet_type_id Ledge_type_id = 0xd7f1adea;
		constexpr static std::string_view Interact_type_name = "Interact";
		constexpr static rivet::rivet_type_id Interact_type_id = 0xdbf41d9a;
		constexpr static std::string_view Grind_type_name = "Grind";
		constexpr static rivet::rivet_type_id Grind_type_id = 0xc3f2eb51;
		constexpr static std::string_view Glide_type_name = "Glide";
		constexpr static rivet::rivet_type_id Glide_type_id = 0xfedc13e1;
		constexpr static std::string_view Mount_type_name = "Mount";
		constexpr static rivet::rivet_type_id Mount_type_id = 0x23ba36c2;
		constexpr static std::string_view WallStick_type_name = "WallStick";
		constexpr static rivet::rivet_type_id WallStick_type_id = 0x970f9ee0;
		constexpr static std::string_view WallRun_type_name = "WallRun";
		constexpr static rivet::rivet_type_id WallRun_type_id = 0xcca967d9;
		constexpr static std::string_view Dash_type_name = "Dash";
		constexpr static rivet::rivet_type_id Dash_type_id = 0xabfe1db0;
		constexpr static std::string_view AirDash_type_name = "AirDash";
		constexpr static rivet::rivet_type_id AirDash_type_id = 0x7b6bb08;
		constexpr static std::string_view Hoverboot_type_name = "Hoverboot";
		constexpr static rivet::rivet_type_id Hoverboot_type_id = 0xb9bea386;
		constexpr static std::string_view MagbootLaunch_type_name = "MagbootLaunch";
		constexpr static rivet::rivet_type_id MagbootLaunch_type_id = 0x3b37929c;
		constexpr static std::string_view PortalZip_type_name = "PortalZip";
		constexpr static rivet::rivet_type_id PortalZip_type_id = 0x266b6847;
		constexpr static std::string_view WeaponWheel_type_name = "WeaponWheel";
		constexpr static rivet::rivet_type_id WeaponWheel_type_id = 0xc8f7494f;
		constexpr static std::string_view WeaponToggle_type_name = "WeaponToggle";
		constexpr static rivet::rivet_type_id WeaponToggle_type_id = 0x464a8cc4;
		constexpr static std::string_view Sprint_type_name = "Sprint";
		constexpr static rivet::rivet_type_id Sprint_type_id = 0xd1f81bd0; 

		explicit HeroMoveAbilities() = default;
		explicit HeroMoveAbilities([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Move {};
		bool Run {};
		bool Jump {};
		bool DoubleJump {};
		bool Shoot {};
		bool Melee {};
		bool Ledge {};
		bool Interact {};
		bool Grind {};
		bool Glide {};
		bool Mount {};
		bool WallStick {};
		bool WallRun {};
		bool Dash {};
		bool AirDash {};
		bool Hoverboot {};
		bool MagbootLaunch {};
		bool PortalZip {};
		bool WeaponWheel {};
		bool WeaponToggle {};
		bool Sprint {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroMoveAbilities>;
	};
} // namespace rivet::ddl::generated

// clang-format on
