// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/xb52df7e7.hpp> 

namespace rivet::ddl::generated {
	struct Cinematic2LightIntensityCurveTrackDef;
	struct Cinematic2LightColorCurveTrackDef;
	struct LightDef;
	struct Cinematic2LightAttachTrackDef;
	struct Cinematic2PlacedInstanceOrphanTrackDef;
	struct Cinematic2PlacedInstancePosRotScaleTrackDef;
	struct Cinematic2PlacedInstanceEventTrackDef;
	struct Cinematic2PlacedInstanceHideTrackDef;
	struct DDLTransform; 

	struct RIVET_DDL_SHARED Cinematic2LightDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Cinematic2LightDef";
		constexpr static rivet::rivet_type_id type_id = 0x9d890bdf;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view StartTransform_type_name = "StartTransform";
		constexpr static rivet::rivet_type_id StartTransform_type_id = 0x96f1f1f8;
		constexpr static std::string_view EventTracks_type_name = "EventTracks";
		constexpr static rivet::rivet_type_id EventTracks_type_id = 0x653e2373;
		constexpr static std::string_view HideTrack_type_name = "HideTrack";
		constexpr static rivet::rivet_type_id HideTrack_type_id = 0xba2bc52e;
		constexpr static std::string_view PosRotScaleTrack_type_name = "PosRotScaleTrack";
		constexpr static rivet::rivet_type_id PosRotScaleTrack_type_id = 0x6125fb96;
		constexpr static std::string_view OrphanTracks_type_name = "OrphanTracks";
		constexpr static rivet::rivet_type_id OrphanTracks_type_id = 0xea59a6;
		constexpr static std::string_view PlatformFilter_type_name = "PlatformFilter";
		constexpr static rivet::rivet_type_id PlatformFilter_type_id = 0x92542397;
		constexpr static std::string_view Light_type_name = "Light";
		constexpr static rivet::rivet_type_id Light_type_id = 0x72499036;
		constexpr static std::string_view ColorTrack_type_name = "ColorTrack";
		constexpr static rivet::rivet_type_id ColorTrack_type_id = 0xece6c2c4;
		constexpr static std::string_view IntensityTrack_type_name = "IntensityTrack";
		constexpr static rivet::rivet_type_id IntensityTrack_type_id = 0x7f1c56d8;
		constexpr static std::string_view AttachTrack_type_name = "AttachTrack";
		constexpr static rivet::rivet_type_id AttachTrack_type_id = 0xb6544521; 

		explicit Cinematic2LightDef() = default;
		explicit Cinematic2LightDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		std::string_view Name {};
		std::shared_ptr<rivet::ddl::generated::DDLTransform> StartTransform {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Cinematic2PlacedInstanceEventTrackDef>> EventTracks {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2PlacedInstanceHideTrackDef> HideTrack {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2PlacedInstancePosRotScaleTrackDef> PosRotScaleTrack {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Cinematic2PlacedInstanceOrphanTrackDef>> OrphanTracks {};
		rivet::ddl::generated::xb52df7e7 PlatformFilter {};
		std::shared_ptr<rivet::ddl::generated::LightDef> Light {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2LightColorCurveTrackDef> ColorTrack {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2LightIntensityCurveTrackDef> IntensityTrack {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2LightAttachTrackDef> AttachTrack {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2LightDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
