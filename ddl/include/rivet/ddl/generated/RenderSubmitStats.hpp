// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct LightStats; 

	struct RIVET_DDL_SHARED RenderSubmitStats : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RenderSubmitStats";
		constexpr static rivet::rivet_type_id type_id = 0x84b7e13f;

		constexpr static std::string_view DynamicShadowCasterCount_type_name = "DynamicShadowCasterCount";
		constexpr static rivet::rivet_type_id DynamicShadowCasterCount_type_id = 0xe2ffc2da;
		constexpr static std::string_view StaticShadowCasterCount_type_name = "StaticShadowCasterCount";
		constexpr static rivet::rivet_type_id StaticShadowCasterCount_type_id = 0x84e21dae;
		constexpr static std::string_view DynamicShadowCasterHighwaterCount_type_name = "DynamicShadowCasterHighwaterCount";
		constexpr static rivet::rivet_type_id DynamicShadowCasterHighwaterCount_type_id = 0x230c439;
		constexpr static std::string_view StaticShadowCasterHighwaterCount_type_name = "StaticShadowCasterHighwaterCount";
		constexpr static rivet::rivet_type_id StaticShadowCasterHighwaterCount_type_id = 0xa8e62319;
		constexpr static std::string_view ShadowCacheHitCount_type_name = "ShadowCacheHitCount";
		constexpr static rivet::rivet_type_id ShadowCacheHitCount_type_id = 0xbecd1bdb;
		constexpr static std::string_view SkinGpuSyncFenceOverflow_type_name = "SkinGpuSyncFenceOverflow";
		constexpr static rivet::rivet_type_id SkinGpuSyncFenceOverflow_type_id = 0x1098d8fd;
		constexpr static std::string_view LightStats_type_name = "LightStats";
		constexpr static rivet::rivet_type_id LightStats_type_id = 0xa1c7be0a;
		constexpr static std::string_view RuntimeEnvProbeLightStats_type_name = "RuntimeEnvProbeLightStats";
		constexpr static rivet::rivet_type_id RuntimeEnvProbeLightStats_type_id = 0x59c4262a;
		constexpr static std::string_view PotentialModelInstCount_type_name = "PotentialModelInstCount";
		constexpr static rivet::rivet_type_id PotentialModelInstCount_type_id = 0x30e56ef5;
		constexpr static std::string_view VisibleModelInstCount_type_name = "VisibleModelInstCount";
		constexpr static rivet::rivet_type_id VisibleModelInstCount_type_id = 0x3bab8ccc;
		constexpr static std::string_view PotentialHibernateCount_type_name = "PotentialHibernateCount";
		constexpr static rivet::rivet_type_id PotentialHibernateCount_type_id = 0xf064d988;
		constexpr static std::string_view VisibleHibernateCount_type_name = "VisibleHibernateCount";
		constexpr static rivet::rivet_type_id VisibleHibernateCount_type_id = 0xfb2a3bb1;
		constexpr static std::string_view EnvProbeAvgCpuMicros_type_name = "EnvProbeAvgCpuMicros";
		constexpr static rivet::rivet_type_id EnvProbeAvgCpuMicros_type_id = 0x673215c2;
		constexpr static std::string_view EnvProbeAvgGpuMicros_type_name = "EnvProbeAvgGpuMicros";
		constexpr static rivet::rivet_type_id EnvProbeAvgGpuMicros_type_id = 0x3ade44ce;
		constexpr static std::string_view EnvProbesVisible_type_name = "EnvProbesVisible";
		constexpr static rivet::rivet_type_id EnvProbesVisible_type_id = 0x98c487eb;
		constexpr static std::string_view EnvProbesActive_type_name = "EnvProbesActive";
		constexpr static rivet::rivet_type_id EnvProbesActive_type_id = 0x88612aed;
		constexpr static std::string_view EnvProbesPending_type_name = "EnvProbesPending";
		constexpr static rivet::rivet_type_id EnvProbesPending_type_id = 0x36a1150b;
		constexpr static std::string_view EnvProbesRetiring_type_name = "EnvProbesRetiring";
		constexpr static rivet::rivet_type_id EnvProbesRetiring_type_id = 0xf5f1305;
		constexpr static std::string_view EnvProbeRelevantWithoutDrawlists_type_name = "EnvProbeRelevantWithoutDrawlists";
		constexpr static rivet::rivet_type_id EnvProbeRelevantWithoutDrawlists_type_id = 0x3d337625;
		constexpr static std::string_view EnvProbeFaceRendered_type_name = "EnvProbeFaceRendered";
		constexpr static rivet::rivet_type_id EnvProbeFaceRendered_type_id = 0x95150e0b;
		constexpr static std::string_view EnvProbeAuxWork_type_name = "EnvProbeAuxWork";
		constexpr static rivet::rivet_type_id EnvProbeAuxWork_type_id = 0xa98e9df; 

		explicit RenderSubmitStats() = default;
		explicit RenderSubmitStats([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t DynamicShadowCasterCount {};
		uint32_t StaticShadowCasterCount {};
		uint32_t DynamicShadowCasterHighwaterCount {};
		uint32_t StaticShadowCasterHighwaterCount {};
		uint32_t ShadowCacheHitCount {};
		uint32_t SkinGpuSyncFenceOverflow {};
		std::shared_ptr<rivet::ddl::generated::LightStats> LightStats {};
		std::shared_ptr<rivet::ddl::generated::LightStats> RuntimeEnvProbeLightStats {};
		uint32_t PotentialModelInstCount {};
		uint32_t VisibleModelInstCount {};
		uint32_t PotentialHibernateCount {};
		uint32_t VisibleHibernateCount {};
		uint32_t EnvProbeAvgCpuMicros {};
		uint32_t EnvProbeAvgGpuMicros {};
		uint32_t EnvProbesVisible {};
		uint32_t EnvProbesActive {};
		uint32_t EnvProbesPending {};
		uint32_t EnvProbesRetiring {};
		uint32_t EnvProbeRelevantWithoutDrawlists {};
		uint32_t EnvProbeFaceRendered {};
		uint32_t EnvProbeAuxWork {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RenderSubmitStats>;
	};
} // namespace rivet::ddl::generated

// clang-format on
