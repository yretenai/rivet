// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp>
#include <rivet/ddl/generated/enums/x10b3c4cf.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HeroSlideConfig : ConfigBase {
		constexpr const static std::string_view type_name = "HeroSlideConfig";
		constexpr const static rivet::rivet_type_id type_id = 0xe413af32;

		constexpr const static std::string_view SlopeMinDegrees_type_name = "SlopeMinDegrees";
		constexpr const static rivet::rivet_type_id SlopeMinDegrees_type_id = 0x8a5d7a5e;
		constexpr const static std::string_view SlopeMaxDegrees_type_name = "SlopeMaxDegrees";
		constexpr const static rivet::rivet_type_id SlopeMaxDegrees_type_id = 0x8b51e0ea;
		constexpr const static std::string_view SlideGravity_type_name = "SlideGravity";
		constexpr const static rivet::rivet_type_id SlideGravity_type_id = 0xdfb3b9c;
		constexpr const static std::string_view SlideAirGravity_type_name = "SlideAirGravity";
		constexpr const static rivet::rivet_type_id SlideAirGravity_type_id = 0x8181cec9;
		constexpr const static std::string_view SlideFriction_type_name = "SlideFriction";
		constexpr const static rivet::rivet_type_id SlideFriction_type_id = 0x7152f8bc;
		constexpr const static std::string_view SlideOffFriction_type_name = "SlideOffFriction";
		constexpr const static rivet::rivet_type_id SlideOffFriction_type_id = 0x388e44c4;
		constexpr const static std::string_view SlideTerminalSpeed_type_name = "SlideTerminalSpeed";
		constexpr const static rivet::rivet_type_id SlideTerminalSpeed_type_id = 0xb2445d6c;
		constexpr const static std::string_view LateralSpeedBrakeFactor_type_name = "LateralSpeedBrakeFactor";
		constexpr const static rivet::rivet_type_id LateralSpeedBrakeFactor_type_id = 0x2e29ed6c;
		constexpr const static std::string_view MinSlideSpeed_type_name = "MinSlideSpeed";
		constexpr const static rivet::rivet_type_id MinSlideSpeed_type_id = 0xc65ed10b;
		constexpr const static std::string_view InputLateralSpeed_type_name = "InputLateralSpeed";
		constexpr const static rivet::rivet_type_id InputLateralSpeed_type_id = 0x60a707e0;
		constexpr const static std::string_view InputLateralAccel_type_name = "InputLateralAccel";
		constexpr const static rivet::rivet_type_id InputLateralAccel_type_id = 0x327dcff3;
		constexpr const static std::string_view PathPullLateralSpeed_type_name = "PathPullLateralSpeed";
		constexpr const static rivet::rivet_type_id PathPullLateralSpeed_type_id = 0x3a176c3a;
		constexpr const static std::string_view PathPullLateralAccel_type_name = "PathPullLateralAccel";
		constexpr const static rivet::rivet_type_id PathPullLateralAccel_type_id = 0x68cda429;
		constexpr const static std::string_view SlidePathDistanceForward_type_name = "SlidePathDistanceForward";
		constexpr const static rivet::rivet_type_id SlidePathDistanceForward_type_id = 0x6d3f64ea;
		constexpr const static std::string_view SlidePathDistanceSide_type_name = "SlidePathDistanceSide";
		constexpr const static rivet::rivet_type_id SlidePathDistanceSide_type_id = 0x2fcc6043;
		constexpr const static std::string_view SlidePathHeightMin_type_name = "SlidePathHeightMin";
		constexpr const static rivet::rivet_type_id SlidePathHeightMin_type_id = 0xcd02961a;
		constexpr const static std::string_view SlidePathHeightMax_type_name = "SlidePathHeightMax";
		constexpr const static rivet::rivet_type_id SlidePathHeightMax_type_id = 0xf10fa943;
		constexpr const static std::string_view HopLaunchSpeed_type_name = "HopLaunchSpeed";
		constexpr const static rivet::rivet_type_id HopLaunchSpeed_type_id = 0xfab0ba36;
		constexpr const static std::string_view HopGravity_type_name = "HopGravity";
		constexpr const static rivet::rivet_type_id HopGravity_type_id = 0xddca6e6b;
		constexpr const static std::string_view AnimVarLeanDirBlendSpeed_type_name = "AnimVarLeanDirBlendSpeed";
		constexpr const static rivet::rivet_type_id AnimVarLeanDirBlendSpeed_type_id = 0x477ce4cb;
		constexpr const static std::string_view AnimVarSlideDirBlendSpeed_type_name = "AnimVarSlideDirBlendSpeed";
		constexpr const static rivet::rivet_type_id AnimVarSlideDirBlendSpeed_type_id = 0xff6edeaf;
		constexpr const static std::string_view AnimVarSlideSlopeBlendSpeed_type_name = "AnimVarSlideSlopeBlendSpeed";
		constexpr const static rivet::rivet_type_id AnimVarSlideSlopeBlendSpeed_type_id = 0x675f00a8;
		constexpr const static std::string_view AnimVarSlideSlopeMinPitchDegrees_type_name = "AnimVarSlideSlopeMinPitchDegrees";
		constexpr const static rivet::rivet_type_id AnimVarSlideSlopeMinPitchDegrees_type_id = 0x78841d50;
		constexpr const static std::string_view AnimVarSlideSlopeMaxPitchDegrees_type_name = "AnimVarSlideSlopeMaxPitchDegrees";
		constexpr const static rivet::rivet_type_id AnimVarSlideSlopeMaxPitchDegrees_type_id = 0x5f3f7a61;
		constexpr const static std::string_view AnimImpactDriverMinAngleDiffDegrees_type_name = "AnimImpactDriverMinAngleDiffDegrees";
		constexpr const static rivet::rivet_type_id AnimImpactDriverMinAngleDiffDegrees_type_id = 0x90730e1a;
		constexpr const static std::string_view SlideMaterials_type_name = "SlideMaterials";
		constexpr const static rivet::rivet_type_id SlideMaterials_type_id = 0x1c7381f7;
		constexpr const static std::string_view CameraShakeConfig_type_name = "CameraShakeConfig";
		constexpr const static rivet::rivet_type_id CameraShakeConfig_type_id = 0xb610c5e4;
		constexpr const static std::string_view CameraForwardHorizontalBlendT_type_name = "CameraForwardHorizontalBlendT";
		constexpr const static rivet::rivet_type_id CameraForwardHorizontalBlendT_type_id = 0x58c5f09d; 

		explicit HeroSlideConfig() = default;
		explicit HeroSlideConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float SlopeMinDegrees {};
		float SlopeMaxDegrees {};
		float SlideGravity {};
		float SlideAirGravity {};
		float SlideFriction {};
		float SlideOffFriction {};
		float SlideTerminalSpeed {};
		float LateralSpeedBrakeFactor {};
		float MinSlideSpeed {};
		float InputLateralSpeed {};
		float InputLateralAccel {};
		float PathPullLateralSpeed {};
		float PathPullLateralAccel {};
		float SlidePathDistanceForward {};
		float SlidePathDistanceSide {};
		float SlidePathHeightMin {};
		float SlidePathHeightMax {};
		float HopLaunchSpeed {};
		float HopGravity {};
		float AnimVarLeanDirBlendSpeed {};
		float AnimVarSlideDirBlendSpeed {};
		float AnimVarSlideSlopeBlendSpeed {};
		float AnimVarSlideSlopeMinPitchDegrees {};
		float AnimVarSlideSlopeMaxPitchDegrees {};
		float AnimImpactDriverMinAngleDiffDegrees {};
		std::vector<rivet::ddl::generated::x10b3c4cf> SlideMaterials {};
		std::string_view CameraShakeConfig {};
		float CameraForwardHorizontalBlendT {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroSlideConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
