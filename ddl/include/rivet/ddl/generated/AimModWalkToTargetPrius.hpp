// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/AimModifierPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AimModWalkToTargetPrius : AimModifierPrius {
		constexpr static std::string_view type_name = "AimModWalkToTargetPrius";
		constexpr static rivet::rivet_type_id type_id = 0x878f996c;

		constexpr static std::string_view WalkDurationMin_type_name = "WalkDurationMin";
		constexpr static rivet::rivet_type_id WalkDurationMin_type_id = 0xb0ebe4c3;
		constexpr static std::string_view WalkDurationMax_type_name = "WalkDurationMax";
		constexpr static rivet::rivet_type_id WalkDurationMax_type_id = 0x8ce6db9a;
		constexpr static std::string_view WalkStartMinX_type_name = "WalkStartMinX";
		constexpr static rivet::rivet_type_id WalkStartMinX_type_id = 0x83bea539;
		constexpr static std::string_view WalkStartMaxX_type_name = "WalkStartMaxX";
		constexpr static rivet::rivet_type_id WalkStartMaxX_type_id = 0x91354156;
		constexpr static std::string_view WalkStartMinY_type_name = "WalkStartMinY";
		constexpr static rivet::rivet_type_id WalkStartMinY_type_id = 0xf4b995af;
		constexpr static std::string_view WalkStartMaxY_type_name = "WalkStartMaxY";
		constexpr static rivet::rivet_type_id WalkStartMaxY_type_id = 0xe63271c0;
		constexpr static std::string_view WalkStartMinZ_type_name = "WalkStartMinZ";
		constexpr static rivet::rivet_type_id WalkStartMinZ_type_id = 0x6db0c415;
		constexpr static std::string_view WalkStartMaxZ_type_name = "WalkStartMaxZ";
		constexpr static rivet::rivet_type_id WalkStartMaxZ_type_id = 0x7f3b207a;
		constexpr static std::string_view CountShots_type_name = "CountShots";
		constexpr static rivet::rivet_type_id CountShots_type_id = 0x6ec95a4c;
		constexpr static std::string_view WalkPastTarget_type_name = "WalkPastTarget";
		constexpr static rivet::rivet_type_id WalkPastTarget_type_id = 0xb97c5845;
		constexpr static std::string_view AutoHitInRange_type_name = "AutoHitInRange";
		constexpr static rivet::rivet_type_id AutoHitInRange_type_id = 0xf334c2cf; 

		explicit AimModWalkToTargetPrius() = default;
		explicit AimModWalkToTargetPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float WalkDurationMin {};
		float WalkDurationMax {};
		float WalkStartMinX {};
		float WalkStartMaxX {};
		float WalkStartMinY {};
		float WalkStartMaxY {};
		float WalkStartMinZ {};
		float WalkStartMaxZ {};
		bool CountShots {};
		bool WalkPastTarget {};
		bool AutoHitInRange {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AimModWalkToTargetPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
