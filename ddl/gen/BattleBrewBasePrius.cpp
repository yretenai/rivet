// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/BattleBrewScalePrius.hpp>
#include <rivet/ddl/generated/BattleBrewNanotechDrainPrius.hpp>
#include <rivet/ddl/generated/BattleBrewFloatPrius.hpp>
#include <rivet/ddl/generated/BattleBrewArmorPrius.hpp>
#include <rivet/ddl/generated/BattleBrewTimeDilationPrius.hpp> 

#include <rivet/ddl/generated/BattleBrewBasePrius.hpp>

namespace rivet::ddl::generated {
	BattleBrewBasePrius::BattleBrewBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): StatusEffectBasePrius(serialized) {

	}

	[[nodiscard]] auto
	BattleBrewBasePrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	BattleBrewBasePrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BattleBrewBasePrius> {
		if (incoming_type_id == BattleBrewBasePrius::type_id) {
			return std::make_shared<BattleBrewBasePrius>(serialized);
		}

		auto BattleBrewTimeDilationPrius_ptr = BattleBrewTimeDilationPrius::from_substruct(incoming_type_id, serialized);
		if (BattleBrewTimeDilationPrius_ptr != nullptr) {
			return BattleBrewTimeDilationPrius_ptr;
		}

		auto BattleBrewArmorPrius_ptr = BattleBrewArmorPrius::from_substruct(incoming_type_id, serialized);
		if (BattleBrewArmorPrius_ptr != nullptr) {
			return BattleBrewArmorPrius_ptr;
		}

		auto BattleBrewFloatPrius_ptr = BattleBrewFloatPrius::from_substruct(incoming_type_id, serialized);
		if (BattleBrewFloatPrius_ptr != nullptr) {
			return BattleBrewFloatPrius_ptr;
		}

		auto BattleBrewNanotechDrainPrius_ptr = BattleBrewNanotechDrainPrius::from_substruct(incoming_type_id, serialized);
		if (BattleBrewNanotechDrainPrius_ptr != nullptr) {
			return BattleBrewNanotechDrainPrius_ptr;
		}

		auto BattleBrewScalePrius_ptr = BattleBrewScalePrius::from_substruct(incoming_type_id, serialized);
		if (BattleBrewScalePrius_ptr != nullptr) {
			return BattleBrewScalePrius_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
