// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x677185a8.hpp>
#include <rivet/ddl/generated/DamageRequest.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED DamagePacket : DamageRequest {
		constexpr static std::string_view type_name = "DamagePacket";
		constexpr static rivet::rivet_type_id type_id = 0xe4db3046;

		constexpr static std::string_view HitDirection_type_name = "HitDirection";
		constexpr static rivet::rivet_type_id HitDirection_type_id = 0x188c2ef8;
		constexpr static std::string_view HitPosition_type_name = "HitPosition";
		constexpr static rivet::rivet_type_id HitPosition_type_id = 0x568973e3;
		constexpr static std::string_view HitNormal_type_name = "HitNormal";
		constexpr static rivet::rivet_type_id HitNormal_type_id = 0xc3272bc7;
		constexpr static std::string_view ResponseFlags_type_name = "ResponseFlags";
		constexpr static rivet::rivet_type_id ResponseFlags_type_id = 0x439f6aa; 

		explicit DamagePacket() = default;
		explicit DamagePacket([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLVector3> HitDirection {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> HitPosition {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> HitNormal {};
		rivet::ddl::generated::x677185a8 ResponseFlags {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamagePacket>;
	};
} // namespace rivet::ddl::generated

// clang-format on
