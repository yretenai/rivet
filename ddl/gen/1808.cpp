// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/DDLVector2.hpp> 

#include <rivet/ddl/generated/HoudiniHeightFieldMaskByFeatureData.hpp>

namespace rivet::ddl::generated {
	HoudiniHeightFieldMaskByFeatureData::HoudiniHeightFieldMaskByFeatureData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		MaskByCurvature = serialized->get_bool(MaskByCurvature_type_id);
		ParamCurvatureMax = serialized->get_float(ParamCurvatureMax_type_id);
		MaskByDirection = serialized->get_bool(MaskByDirection_type_id);
		ParamDirectionAngle = serialized->get_float(ParamDirectionAngle_type_id);
		ParamDirectionSpread = serialized->get_float(ParamDirectionSpread_type_id);
		MaskByHeight = serialized->get_bool(MaskByHeight_type_id);
		ParamHeightRange = serialized->unwrap_into<rivet::ddl::generated::DDLVector2>(ParamHeightRange_type_id);
		MaskByOcclusion = serialized->get_bool(MaskByOcclusion_type_id);
		ParamOcclusionRange = serialized->unwrap_into<rivet::ddl::generated::DDLVector2>(ParamOcclusionRange_type_id);
		MaskBySlope = serialized->get_bool(MaskBySlope_type_id);
		ParamSlopeRange = serialized->unwrap_into<rivet::ddl::generated::DDLVector2>(ParamSlopeRange_type_id); 
	}

	auto
	HoudiniHeightFieldMaskByFeatureData::get_type_id() const noexcept -> rivet::rivet_type_id {
		return type_id;
	}

	[[nodiscard]] auto
	HoudiniHeightFieldMaskByFeatureData::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	HoudiniHeightFieldMaskByFeatureData::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HoudiniHeightFieldMaskByFeatureData> {
		if (incoming_type_id == HoudiniHeightFieldMaskByFeatureData::type_id) {
			return std::make_shared<HoudiniHeightFieldMaskByFeatureData>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
