// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct AnimDamageAttackStyleBase;
	struct ChargeAttackParams;
	struct AnimDamageAttackModDef; 

	struct RIVET_DDL_SHARED AnimDamageAttack : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "AnimDamageAttack";
		constexpr const static rivet::rivet_type_id type_id = 0xc1b3a742;

		constexpr const static std::string_view Description_type_name = "Description";
		constexpr const static rivet::rivet_type_id Description_type_id = 0xe03811fd;
		constexpr const static std::string_view SpecializedReact_type_name = "SpecializedReact";
		constexpr const static rivet::rivet_type_id SpecializedReact_type_id = 0x9041e2fc;
		constexpr const static std::string_view AttackStyle_type_name = "AttackStyle";
		constexpr const static rivet::rivet_type_id AttackStyle_type_id = 0xd59e7743;
		constexpr const static std::string_view ChargeAttack_type_name = "ChargeAttack";
		constexpr const static rivet::rivet_type_id ChargeAttack_type_id = 0x1ffef039;
		constexpr const static std::string_view ConfigModDefs_type_name = "ConfigModDefs";
		constexpr const static rivet::rivet_type_id ConfigModDefs_type_id = 0x3d4ae417; 

		explicit AnimDamageAttack() = default;
		explicit AnimDamageAttack([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Description {};
		std::string_view SpecializedReact {};
		std::shared_ptr<rivet::ddl::generated::AnimDamageAttackStyleBase> AttackStyle {};
		std::shared_ptr<rivet::ddl::generated::ChargeAttackParams> ChargeAttack {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimDamageAttackModDef>> ConfigModDefs {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimDamageAttack>;
	};
} // namespace rivet::ddl::generated

// clang-format on
