// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x21f55189.hpp>
#include <rivet/ddl/generated/enums/KeyFrameType.hpp>
#include <rivet/ddl/generated/enums/KeyFrameModifierOp.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct DDLVector2;
	struct VisualEffectNodeConnectedOutputPort;
	struct VisualEffectNodeConnectedInputPort; 

	struct RIVET_DDL_SHARED VisualEffectKeyFrameModifierNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VisualEffectKeyFrameModifierNode";
		constexpr static rivet::rivet_type_id type_id = 0x4c62aa89;

		constexpr static std::string_view NodeId_type_name = "NodeId";
		constexpr static rivet::rivet_type_id NodeId_type_id = 0x371a59e0;
		constexpr static std::string_view XPos_type_name = "XPos";
		constexpr static rivet::rivet_type_id XPos_type_id = 0xf88aee81;
		constexpr static std::string_view YPos_type_name = "YPos";
		constexpr static rivet::rivet_type_id YPos_type_id = 0x403689e4;
		constexpr static std::string_view DisplayName_type_name = "DisplayName";
		constexpr static rivet::rivet_type_id DisplayName_type_id = 0xeaf33243;
		constexpr static std::string_view ConnectedInputs_type_name = "ConnectedInputs";
		constexpr static rivet::rivet_type_id ConnectedInputs_type_id = 0x8ca57bf5;
		constexpr static std::string_view ConnectedOutputs_type_name = "ConnectedOutputs";
		constexpr static rivet::rivet_type_id ConnectedOutputs_type_id = 0x824bee0e;
		constexpr static std::string_view KeyFrameModifierOp_type_name = "KeyFrameModifierOp";
		constexpr static rivet::rivet_type_id KeyFrameModifierOp_type_id = 0x6bf154ab;
		constexpr static std::string_view KeyFrameType_type_name = "KeyFrameType";
		constexpr static rivet::rivet_type_id KeyFrameType_type_id = 0x4c68ca42;
		constexpr static std::string_view Source_type_name = "Source";
		constexpr static rivet::rivet_type_id Source_type_id = 0x61f23114;
		constexpr static std::string_view Global_type_name = "Global";
		constexpr static rivet::rivet_type_id Global_type_id = 0xd67dc5e4;
		constexpr static std::string_view Value_type_name = "Value";
		constexpr static rivet::rivet_type_id Value_type_id = 0x42494f5;
		constexpr static std::string_view Value2_type_name = "Value2";
		constexpr static rivet::rivet_type_id Value2_type_id = 0x5047387;
		constexpr static std::string_view Value3_type_name = "Value3";
		constexpr static rivet::rivet_type_id Value3_type_id = 0x72034311;
		constexpr static std::string_view ValueRGB_type_name = "ValueRGB";
		constexpr static rivet::rivet_type_id ValueRGB_type_id = 0xd2f31950; 

		explicit VisualEffectKeyFrameModifierNode() = default;
		explicit VisualEffectKeyFrameModifierNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t NodeId {};
		int32_t XPos {};
		int32_t YPos {};
		std::string_view DisplayName {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VisualEffectNodeConnectedInputPort>> ConnectedInputs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VisualEffectNodeConnectedOutputPort>> ConnectedOutputs {};
		rivet::ddl::generated::KeyFrameModifierOp KeyFrameModifierOp {};
		rivet::ddl::generated::KeyFrameType KeyFrameType {};
		rivet::ddl::generated::x21f55189 Source {};
		bool Global {};
		float Value {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Value2 {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Value3 {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> ValueRGB {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VisualEffectKeyFrameModifierNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
