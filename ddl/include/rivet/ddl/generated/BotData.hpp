// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x363f69e.hpp>
#include <rivet/ddl/generated/enums/x53ecdc9c.hpp>
#include <rivet/ddl/generated/BotSetupData.hpp> 

namespace rivet::ddl::generated {
	struct SoundFocusComponentData; 

	struct RIVET_DDL_SHARED BotData : BotSetupData {
		constexpr static std::string_view type_name = "BotData";
		constexpr static rivet::rivet_type_id type_id = 0x59da994b;

		constexpr static std::string_view VariantSelectMode_type_name = "VariantSelectMode";
		constexpr static rivet::rivet_type_id VariantSelectMode_type_id = 0x8a5e149a;
		constexpr static std::string_view SoundFocusData_type_name = "SoundFocusData";
		constexpr static rivet::rivet_type_id SoundFocusData_type_id = 0x8d2ce588;
		constexpr static std::string_view AttackJobPool_type_name = "AttackJobPool";
		constexpr static rivet::rivet_type_id AttackJobPool_type_id = 0x885938c5; 

		explicit BotData() = default;
		explicit BotData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x363f69e VariantSelectMode {};
		std::shared_ptr<rivet::ddl::generated::SoundFocusComponentData> SoundFocusData {};
		rivet::ddl::generated::x53ecdc9c AttackJobPool {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
