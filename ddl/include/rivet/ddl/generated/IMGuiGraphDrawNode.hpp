// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xb2c512b4.hpp> 

namespace rivet::ddl::generated {
	struct IMGuiConnectionData; 

	struct RIVET_DDL_SHARED IMGuiGraphDrawNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "IMGuiGraphDrawNode";
		constexpr static rivet::rivet_type_id type_id = 0x81e47eec;

		constexpr static std::string_view DrawType_type_name = "DrawType";
		constexpr static rivet::rivet_type_id DrawType_type_id = 0x3587ca71;
		constexpr static std::string_view NodeId_type_name = "NodeId";
		constexpr static rivet::rivet_type_id NodeId_type_id = 0x371a59e0;
		constexpr static std::string_view IsDebugMarker_type_name = "IsDebugMarker";
		constexpr static rivet::rivet_type_id IsDebugMarker_type_id = 0x5775422a;
		constexpr static std::string_view SortPriority_type_name = "SortPriority";
		constexpr static rivet::rivet_type_id SortPriority_type_id = 0x89a26971;
		constexpr static std::string_view DrawSizeX_type_name = "DrawSizeX";
		constexpr static rivet::rivet_type_id DrawSizeX_type_id = 0xad2911ff;
		constexpr static std::string_view DrawSizeY_type_name = "DrawSizeY";
		constexpr static rivet::rivet_type_id DrawSizeY_type_id = 0xda2e2169;
		constexpr static std::string_view ParentConnections_type_name = "ParentConnections";
		constexpr static rivet::rivet_type_id ParentConnections_type_id = 0x5445222c;
		constexpr static std::string_view ChildConnections_type_name = "ChildConnections";
		constexpr static rivet::rivet_type_id ChildConnections_type_id = 0xfff68611; 

		explicit IMGuiGraphDrawNode() = default;
		explicit IMGuiGraphDrawNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xb2c512b4 DrawType {};
		uint64_t NodeId {};
		bool IsDebugMarker {};
		int32_t SortPriority {};
		float DrawSizeX {};
		float DrawSizeY {};
		std::vector<std::shared_ptr<rivet::ddl::generated::IMGuiConnectionData>> ParentConnections {};
		std::vector<std::shared_ptr<rivet::ddl::generated::IMGuiConnectionData>> ChildConnections {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<IMGuiGraphDrawNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
