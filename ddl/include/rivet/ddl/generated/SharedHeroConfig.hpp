// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct HeroCameraConfig;
	struct HeroMotionConfig;
	struct HeroFlavorAnimConfig;
	struct HeroReactConfig;
	struct HeroCVCConfig;
	struct HeroMeleeSmashConfig;
	struct HeroAttackerConfig;
	struct HeroAimConfig;
	struct HeroHealthConfig;
	struct HeroEffectsConfig;
	struct HeroSuperMeterPrius; 

	struct RIVET_DDL_SHARED SharedHeroConfig : ConfigBase {
		constexpr const static std::string_view type_name = "SharedHeroConfig";
		constexpr const static rivet::rivet_type_id type_id = 0x27dac59f;

		constexpr const static std::string_view Camera_type_name = "Camera";
		constexpr const static rivet::rivet_type_id Camera_type_id = 0x564a062;
		constexpr const static std::string_view BaseDepthOfFieldConfig_type_name = "BaseDepthOfFieldConfig";
		constexpr const static rivet::rivet_type_id BaseDepthOfFieldConfig_type_id = 0x3e8850a9;
		constexpr const static std::string_view AimAssistUserConfig_type_name = "AimAssistUserConfig";
		constexpr const static rivet::rivet_type_id AimAssistUserConfig_type_id = 0xdf3bd36;
		constexpr const static std::string_view CasualAimAssistUserConfig_type_name = "CasualAimAssistUserConfig";
		constexpr const static rivet::rivet_type_id CasualAimAssistUserConfig_type_id = 0x33fef942;
		constexpr const static std::string_view HeroMoverConfig_type_name = "HeroMoverConfig";
		constexpr const static rivet::rivet_type_id HeroMoverConfig_type_id = 0xee0ed482;
		constexpr const static std::string_view PropConfig_type_name = "PropConfig";
		constexpr const static rivet::rivet_type_id PropConfig_type_id = 0x97e7b151;
		constexpr const static std::string_view DefaultZoomConfig_type_name = "DefaultZoomConfig";
		constexpr const static rivet::rivet_type_id DefaultZoomConfig_type_id = 0xdaf18825;
		constexpr const static std::string_view DefaultWeaponBeamInConfig_type_name = "DefaultWeaponBeamInConfig";
		constexpr const static rivet::rivet_type_id DefaultWeaponBeamInConfig_type_id = 0xf915014c;
		constexpr const static std::string_view BeamInConfig_type_name = "BeamInConfig";
		constexpr const static rivet::rivet_type_id BeamInConfig_type_id = 0x41075a28;
		constexpr const static std::string_view BeamOutConfig_type_name = "BeamOutConfig";
		constexpr const static rivet::rivet_type_id BeamOutConfig_type_id = 0xc4483ad1;
		constexpr const static std::string_view ClankPuzzleTargetConfig_type_name = "ClankPuzzleTargetConfig";
		constexpr const static rivet::rivet_type_id ClankPuzzleTargetConfig_type_id = 0xefc617b2;
		constexpr const static std::string_view Motion_type_name = "Motion";
		constexpr const static rivet::rivet_type_id Motion_type_id = 0xcb86ef8f;
		constexpr const static std::string_view React_type_name = "React";
		constexpr const static rivet::rivet_type_id React_type_id = 0x36a314;
		constexpr const static std::string_view CVC_type_name = "CVC";
		constexpr const static rivet::rivet_type_id CVC_type_id = 0x9cb16f5a;
		constexpr const static std::string_view MeleeSmash_type_name = "MeleeSmash";
		constexpr const static rivet::rivet_type_id MeleeSmash_type_id = 0xb433cdb6;
		constexpr const static std::string_view Aiming_type_name = "Aiming";
		constexpr const static rivet::rivet_type_id Aiming_type_id = 0x7ed24ba4;
		constexpr const static std::string_view FlavorAnim_type_name = "FlavorAnim";
		constexpr const static rivet::rivet_type_id FlavorAnim_type_id = 0x51866fa5;
		constexpr const static std::string_view AttackerConfig_type_name = "AttackerConfig";
		constexpr const static rivet::rivet_type_id AttackerConfig_type_id = 0x3b944763;
		constexpr const static std::string_view HealthConfig_type_name = "HealthConfig";
		constexpr const static rivet::rivet_type_id HealthConfig_type_id = 0xc153d59c;
		constexpr const static std::string_view Effects_type_name = "Effects";
		constexpr const static rivet::rivet_type_id Effects_type_id = 0x49e15f92;
		constexpr const static std::string_view SuperMeter_type_name = "SuperMeter";
		constexpr const static rivet::rivet_type_id SuperMeter_type_id = 0xf52004e1; 

		explicit SharedHeroConfig() = default;
		explicit SharedHeroConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::HeroCameraConfig> Camera {};
		std::string_view BaseDepthOfFieldConfig {};
		std::string_view AimAssistUserConfig {};
		std::string_view CasualAimAssistUserConfig {};
		std::string_view HeroMoverConfig {};
		std::string_view PropConfig {};
		std::string_view DefaultZoomConfig {};
		std::string_view DefaultWeaponBeamInConfig {};
		std::string_view BeamInConfig {};
		std::string_view BeamOutConfig {};
		std::string_view ClankPuzzleTargetConfig {};
		std::shared_ptr<rivet::ddl::generated::HeroMotionConfig> Motion {};
		std::shared_ptr<rivet::ddl::generated::HeroReactConfig> React {};
		std::shared_ptr<rivet::ddl::generated::HeroCVCConfig> CVC {};
		std::shared_ptr<rivet::ddl::generated::HeroMeleeSmashConfig> MeleeSmash {};
		std::shared_ptr<rivet::ddl::generated::HeroAimConfig> Aiming {};
		std::shared_ptr<rivet::ddl::generated::HeroFlavorAnimConfig> FlavorAnim {};
		std::shared_ptr<rivet::ddl::generated::HeroAttackerConfig> AttackerConfig {};
		std::shared_ptr<rivet::ddl::generated::HeroHealthConfig> HealthConfig {};
		std::shared_ptr<rivet::ddl::generated::HeroEffectsConfig> Effects {};
		std::shared_ptr<rivet::ddl::generated::HeroSuperMeterPrius> SuperMeter {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SharedHeroConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
