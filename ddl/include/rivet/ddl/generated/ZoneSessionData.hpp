// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x2eab60c7.hpp> 

namespace rivet::ddl::generated {
	struct RegionDefTemp;
	struct HiddenData3D;
	struct DDLVector3;
	struct TargetSceneNode;
	struct SelectionDataLevelList;
	struct SelectionDataActorGroups;
	struct SelectionData3D; 

	struct RIVET_DDL_SHARED ZoneSessionData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ZoneSessionData";
		constexpr static rivet::rivet_type_id type_id = 0xfbae615f;

		constexpr static std::string_view CurrentSelection_type_name = "CurrentSelection";
		constexpr static rivet::rivet_type_id CurrentSelection_type_id = 0xe6e44afe;
		constexpr static std::string_view Selection3D_type_name = "Selection3D";
		constexpr static rivet::rivet_type_id Selection3D_type_id = 0x8e102acb;
		constexpr static std::string_view SelectionActorGroups_type_name = "SelectionActorGroups";
		constexpr static rivet::rivet_type_id SelectionActorGroups_type_id = 0x83ff85df;
		constexpr static std::string_view SelectionActorGroupActors_type_name = "SelectionActorGroupActors";
		constexpr static rivet::rivet_type_id SelectionActorGroupActors_type_id = 0x9be77afb;
		constexpr static std::string_view SelectionLevelList_type_name = "SelectionLevelList";
		constexpr static rivet::rivet_type_id SelectionLevelList_type_id = 0x5170bce9;
		constexpr static std::string_view Hidden3D_type_name = "Hidden3D";
		constexpr static rivet::rivet_type_id Hidden3D_type_id = 0xb6bf4d42;
		constexpr static std::string_view TargetSceneNodeStack_type_name = "TargetSceneNodeStack";
		constexpr static rivet::rivet_type_id TargetSceneNodeStack_type_id = 0x56235257;
		constexpr static std::string_view Regions_type_name = "Regions";
		constexpr static rivet::rivet_type_id Regions_type_id = 0xa38d1acb;
		constexpr static std::string_view ActiveZone_type_name = "ActiveZone";
		constexpr static rivet::rivet_type_id ActiveZone_type_id = 0xf877d4f8;
		constexpr static std::string_view ReferenceableZones_type_name = "ReferenceableZones";
		constexpr static rivet::rivet_type_id ReferenceableZones_type_id = 0xff5f46b4;
		constexpr static std::string_view CameraPosition_type_name = "CameraPosition";
		constexpr static rivet::rivet_type_id CameraPosition_type_id = 0x5498ef5e;
		constexpr static std::string_view CameraRotation_type_name = "CameraRotation";
		constexpr static rivet::rivet_type_id CameraRotation_type_id = 0x3bc8935a; 

		explicit ZoneSessionData() = default;
		explicit ZoneSessionData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x2eab60c7 CurrentSelection {};
		std::shared_ptr<rivet::ddl::generated::SelectionData3D> Selection3D {};
		std::shared_ptr<rivet::ddl::generated::SelectionDataActorGroups> SelectionActorGroups {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SelectionDataActorGroups>> SelectionActorGroupActors {};
		std::shared_ptr<rivet::ddl::generated::SelectionDataLevelList> SelectionLevelList {};
		std::shared_ptr<rivet::ddl::generated::HiddenData3D> Hidden3D {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TargetSceneNode>> TargetSceneNodeStack {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RegionDefTemp>> Regions {};
		std::string_view ActiveZone {};
		std::vector<std::string_view> ReferenceableZones {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> CameraPosition {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> CameraRotation {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ZoneSessionData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
