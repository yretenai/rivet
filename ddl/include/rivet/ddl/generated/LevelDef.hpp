// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct LevelDefAux;
	struct LevelGridSettings;
	struct DDLAABB;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED LevelDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LevelDef";
		constexpr static rivet::rivet_type_id type_id = 0xf7789466;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view DefaultNamedLink_type_name = "DefaultNamedLink";
		constexpr static rivet::rivet_type_id DefaultNamedLink_type_id = 0xeca46962;
		constexpr static std::string_view InstallGroup_type_name = "InstallGroup";
		constexpr static rivet::rivet_type_id InstallGroup_type_id = 0xfa716c43;
		constexpr static std::string_view GlobalRegion_type_name = "GlobalRegion";
		constexpr static rivet::rivet_type_id GlobalRegion_type_id = 0x57d5a1f;
		constexpr static std::string_view Regions_type_name = "Regions";
		constexpr static rivet::rivet_type_id Regions_type_id = 0xa38d1acb;
		constexpr static std::string_view WorldMapAABB_type_name = "WorldMapAABB";
		constexpr static rivet::rivet_type_id WorldMapAABB_type_id = 0x20248023;
		constexpr static std::string_view GridSettings_type_name = "GridSettings";
		constexpr static rivet::rivet_type_id GridSettings_type_id = 0x17b372b2;
		constexpr static std::string_view Aux_type_name = "Aux";
		constexpr static rivet::rivet_type_id Aux_type_id = 0x90972571;
		constexpr static std::string_view HibernateSet_type_name = "HibernateSet";
		constexpr static rivet::rivet_type_id HibernateSet_type_id = 0xa99cdab8;
		constexpr static std::string_view AssetSwapPlatSpec_type_name = "AssetSwapPlatSpec";
		constexpr static rivet::rivet_type_id AssetSwapPlatSpec_type_id = 0x22ff43f2; 

		explicit LevelDef() = default;
		explicit LevelDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::string_view DefaultNamedLink {};
		int32_t InstallGroup {};
		std::string_view GlobalRegion {};
		std::vector<std::string_view> Regions {};
		std::shared_ptr<rivet::ddl::generated::DDLAABB> WorldMapAABB {};
		std::shared_ptr<rivet::ddl::generated::LevelGridSettings> GridSettings {};
		std::shared_ptr<rivet::ddl::generated::LevelDefAux> Aux {};
		std::string_view HibernateSet {};
		std::string_view AssetSwapPlatSpec {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LevelDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
