// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/HitReactPrius.hpp> 

namespace rivet::ddl::generated {
	struct HitReactMeters;
	struct KnockbackReactionModifier; 

	struct RIVET_DDL_SHARED HitReactMeteredPrius : HitReactPrius {
		constexpr const static std::string_view type_name = "HitReactMeteredPrius";
		constexpr const static rivet::rivet_type_id type_id = 0xa6789e54;

		constexpr const static std::string_view MeterData_type_name = "MeterData";
		constexpr const static rivet::rivet_type_id MeterData_type_id = 0xbe5a19b1;
		constexpr const static std::string_view FullbodyCooldown_type_name = "FullbodyCooldown";
		constexpr const static rivet::rivet_type_id FullbodyCooldown_type_id = 0x1a79d7b;
		constexpr const static std::string_view PartialReactDriver_type_name = "PartialReactDriver";
		constexpr const static rivet::rivet_type_id PartialReactDriver_type_id = 0x4f63a6f1;
		constexpr const static std::string_view PartialReactCooldown_type_name = "PartialReactCooldown";
		constexpr const static rivet::rivet_type_id PartialReactCooldown_type_id = 0xa4e1f543;
		constexpr const static std::string_view BodypartToFilterConfig_type_name = "BodypartToFilterConfig";
		constexpr const static rivet::rivet_type_id BodypartToFilterConfig_type_id = 0xea705a6c;
		constexpr const static std::string_view OverrideKnockbackLength_type_name = "OverrideKnockbackLength";
		constexpr const static rivet::rivet_type_id OverrideKnockbackLength_type_id = 0xb4da608a;
		constexpr const static std::string_view OverrideKnockdownLength_type_name = "OverrideKnockdownLength";
		constexpr const static rivet::rivet_type_id OverrideKnockdownLength_type_id = 0xdbcfdb29;
		constexpr const static std::string_view ContinousPartialTime_type_name = "ContinousPartialTime";
		constexpr const static rivet::rivet_type_id ContinousPartialTime_type_id = 0xd3e857da;
		constexpr const static std::string_view KineticResistance_type_name = "KineticResistance";
		constexpr const static rivet::rivet_type_id KineticResistance_type_id = 0xa7f5f712;
		constexpr const static std::string_view ReactionMods_type_name = "ReactionMods";
		constexpr const static rivet::rivet_type_id ReactionMods_type_id = 0x19e69f6; 

		explicit HitReactMeteredPrius() = default;
		explicit HitReactMeteredPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::HitReactMeters> MeterData {};
		float FullbodyCooldown {};
		std::string_view PartialReactDriver {};
		float PartialReactCooldown {};
		std::string_view BodypartToFilterConfig {};
		float OverrideKnockbackLength {};
		float OverrideKnockdownLength {};
		float ContinousPartialTime {};
		float KineticResistance {};
		std::vector<std::shared_ptr<rivet::ddl::generated::KnockbackReactionModifier>> ReactionMods {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HitReactMeteredPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
