// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED HazardDamageAreaConfig : ConfigBase {
		constexpr const static std::string_view type_name = "HazardDamageAreaConfig";
		constexpr const static rivet::rivet_type_id type_id = 0x800030f0;

		constexpr const static std::string_view HazardLifetime_type_name = "HazardLifetime";
		constexpr const static rivet::rivet_type_id HazardLifetime_type_id = 0xe2a53270;
		constexpr const static std::string_view InsideDPS_type_name = "InsideDPS";
		constexpr const static rivet::rivet_type_id InsideDPS_type_id = 0xfc2e344a;
		constexpr const static std::string_view DotDPS_type_name = "DotDPS";
		constexpr const static rivet::rivet_type_id DotDPS_type_id = 0xdcaa0dd9;
		constexpr const static std::string_view DotDuration_type_name = "DotDuration";
		constexpr const static rivet::rivet_type_id DotDuration_type_id = 0x91fef556;
		constexpr const static std::string_view ConditionDuration_type_name = "ConditionDuration";
		constexpr const static rivet::rivet_type_id ConditionDuration_type_id = 0x6d5955c;
		constexpr const static std::string_view Radius_type_name = "Radius";
		constexpr const static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr const static std::string_view Elevation_type_name = "Elevation";
		constexpr const static rivet::rivet_type_id Elevation_type_id = 0xbed7d58d;
		constexpr const static std::string_view WarmUpTime_type_name = "WarmUpTime";
		constexpr const static rivet::rivet_type_id WarmUpTime_type_id = 0x2856176d;
		constexpr const static std::string_view EffectOffTime_type_name = "EffectOffTime";
		constexpr const static rivet::rivet_type_id EffectOffTime_type_id = 0xb29b36ab;
		constexpr const static std::string_view DamageSendInterval_type_name = "DamageSendInterval";
		constexpr const static rivet::rivet_type_id DamageSendInterval_type_id = 0xcf20fa13;
		constexpr const static std::string_view Knockback_type_name = "Knockback";
		constexpr const static rivet::rivet_type_id Knockback_type_id = 0x2e553fdd;
		constexpr const static std::string_view UseSweptSphere_type_name = "UseSweptSphere";
		constexpr const static rivet::rivet_type_id UseSweptSphere_type_id = 0xee3d188c;
		constexpr const static std::string_view DamageFriends_type_name = "DamageFriends";
		constexpr const static rivet::rivet_type_id DamageFriends_type_id = 0x3be354f0;
		constexpr const static std::string_view SweptSphereEndOffset_type_name = "SweptSphereEndOffset";
		constexpr const static rivet::rivet_type_id SweptSphereEndOffset_type_id = 0xd7f5902c; 

		explicit HazardDamageAreaConfig() = default;
		explicit HazardDamageAreaConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float HazardLifetime {};
		float InsideDPS {};
		float DotDPS {};
		float DotDuration {};
		float ConditionDuration {};
		float Radius {};
		float Elevation {};
		float WarmUpTime {};
		float EffectOffTime {};
		float DamageSendInterval {};
		bool Knockback {};
		bool UseSweptSphere {};
		bool DamageFriends {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SweptSphereEndOffset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HazardDamageAreaConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
