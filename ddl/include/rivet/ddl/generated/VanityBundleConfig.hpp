// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x56bca86c.hpp>
#include <rivet/ddl/generated/enums/xd230f155.hpp>
#include <rivet/ddl/generated/ConfigBase.hpp>
#include <rivet/ddl/generated/enums/xf2db3ee.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VanityBundleConfig : ConfigBase {
		constexpr const static std::string_view type_name = "VanityBundleConfig";
		constexpr const static rivet::rivet_type_id type_id = 0xb68fd998;

		constexpr const static std::string_view BundleType_type_name = "BundleType";
		constexpr const static rivet::rivet_type_id BundleType_type_id = 0xce4eaef0;
		constexpr const static std::string_view SaveID_type_name = "SaveID";
		constexpr const static rivet::rivet_type_id SaveID_type_id = 0xf61c4918;
		constexpr const static std::string_view DisplayImage_type_name = "DisplayImage";
		constexpr const static rivet::rivet_type_id DisplayImage_type_id = 0x113d8e81;
		constexpr const static std::string_view VanityItems_type_name = "VanityItems";
		constexpr const static rivet::rivet_type_id VanityItems_type_id = 0x471b6f0a;
		constexpr const static std::string_view Accessories_type_name = "Accessories";
		constexpr const static rivet::rivet_type_id Accessories_type_id = 0xacd6779b;
		constexpr const static std::string_view CoversVoice_type_name = "CoversVoice";
		constexpr const static rivet::rivet_type_id CoversVoice_type_id = 0x26a653c; 

		explicit VanityBundleConfig() = default;
		explicit VanityBundleConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xf2db3ee BundleType {};
		rivet::ddl::generated::xd230f155 SaveID {};
		std::string_view DisplayImage {};
		std::vector<std::string_view> VanityItems {};
		std::vector<rivet::ddl::generated::x56bca86c> Accessories {};
		bool CoversVoice {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VanityBundleConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
