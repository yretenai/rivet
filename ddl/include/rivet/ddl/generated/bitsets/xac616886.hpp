// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view xac616886_type_name = "xac616886";
	constexpr static rivet::rivet_type_id xac616886_type_id = 0xac616886;

	constexpr static std::array<std::tuple<std::string_view, uint64_t>, 5> xac616886_values = {
		std::make_tuple("kMayaNameSpace", 0x1),
		std::make_tuple("kBSphere", 0x2),
		std::make_tuple("kDebugDrawJoints", 0x4),
		std::make_tuple("kSkipVFXRendering", 0x8),
		std::make_tuple("kLight", 0x10), 
	};

	enum class xac616886 : uint64_t {
		MayaNameSpace = 0x1,
		BSphere = 0x2,
		DebugDrawJoints = 0x4,
		SkipVFXRendering = 0x8,
		Light = 0x10, 
	};
} // namespace rivet::ddl::generated

// clang-format on
