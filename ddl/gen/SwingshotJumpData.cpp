// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/SwingshotJumpData.hpp>

namespace rivet::ddl::generated {
	SwingshotJumpData::SwingshotJumpData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		MinInitialHorizontalSpeed = serialized->get_float(MinInitialHorizontalSpeed_type_id, 6.000000);
		TurnSpeedGain = serialized->get_float(TurnSpeedGain_type_id, -15.000000);
		TurnSpeedDamp = serialized->get_float(TurnSpeedDamp_type_id, -8.000000);
		TurnSpeedMax = serialized->get_float(TurnSpeedMax_type_id, 90.000000); 
	}

	[[nodiscard]] auto
	SwingshotJumpData::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	SwingshotJumpData::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SwingshotJumpData> {
		if (incoming_type_id == SwingshotJumpData::type_id) {
			return std::make_shared<SwingshotJumpData>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
