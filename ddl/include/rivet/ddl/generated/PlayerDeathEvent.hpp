// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xc115d639.hpp>
#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PlayerDeathEvent : EventBase {
		constexpr static std::string_view type_name = "PlayerDeathEvent";
		constexpr static rivet::rivet_type_id type_id = 0x123b6f37;

		constexpr static std::string_view ClientIndex_type_name = "ClientIndex";
		constexpr static rivet::rivet_type_id ClientIndex_type_id = 0x40d7aaa7;
		constexpr static std::string_view Team_type_name = "Team";
		constexpr static rivet::rivet_type_id Team_type_id = 0xf47066af;
		constexpr static std::string_view AnimatedDeath_type_name = "AnimatedDeath";
		constexpr static rivet::rivet_type_id AnimatedDeath_type_id = 0xe4c61613;
		constexpr static std::string_view CombatDeath_type_name = "CombatDeath";
		constexpr static rivet::rivet_type_id CombatDeath_type_id = 0x6db58b77; 

		explicit PlayerDeathEvent() = default;
		explicit PlayerDeathEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t ClientIndex {};
		rivet::ddl::generated::xc115d639 Team {};
		bool AnimatedDeath {};
		bool CombatDeath {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlayerDeathEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
