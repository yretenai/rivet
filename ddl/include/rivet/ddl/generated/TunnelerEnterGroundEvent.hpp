// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10b3c4cf.hpp>
#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TunnelerEnterGroundEvent : EventBase {
		constexpr static std::string_view type_name = "TunnelerEnterGroundEvent";
		constexpr static rivet::rivet_type_id type_id = 0xc81e1a80;

		constexpr static std::string_view IsFirstEnter_type_name = "IsFirstEnter";
		constexpr static rivet::rivet_type_id IsFirstEnter_type_id = 0x14d1d767;
		constexpr static std::string_view IsPuppy_type_name = "IsPuppy";
		constexpr static rivet::rivet_type_id IsPuppy_type_id = 0x39fb8d44;
		constexpr static std::string_view GroundMaterial_type_name = "GroundMaterial";
		constexpr static rivet::rivet_type_id GroundMaterial_type_id = 0x4ba3454c;
		constexpr static std::string_view AudioMaterial_type_name = "AudioMaterial";
		constexpr static rivet::rivet_type_id AudioMaterial_type_id = 0xf14e1df7; 

		explicit TunnelerEnterGroundEvent() = default;
		explicit TunnelerEnterGroundEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool IsFirstEnter {};
		bool IsPuppy {};
		rivet::ddl::generated::x10b3c4cf GroundMaterial {};
		rivet::ddl::generated::x10b3c4cf AudioMaterial {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TunnelerEnterGroundEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
