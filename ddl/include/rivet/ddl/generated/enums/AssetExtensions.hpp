// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view AssetExtensions_type_name = "AssetExtensions";
	constexpr static rivet::rivet_type_id AssetExtensions_type_id = 0x39e006d3;

	constexpr static std::array<std::string_view, 47> AssetExtensions_values = {
		"kActor",
		"kAnimClip",
		"kAnimSet",
		"kAssetTag",
		"kMaterial",
		"kMaterialGraph",
		"kVisualEffect",
		"kModel",
		"kPrefab",
		"kAtmosphere",
		"kSoundBank",
		"kStamp",
		"kTexture",
		"kLevel",
		"kRegion",
		"kZone",
		"kScriptGraph",
		"kModelVariant",
		"kConduit",
		"kConfig",
		"kLocalization",
		"kCollection",
		"kCinematic2",
		"kMovie",
		"kPerformanceClip",
		"kPerformanceSet",
		"kNodeGraph",
		"kBreakable",
		"kTerrain",
		"kDynamicEnum",
		"kSaveData",
		"kWwiseLookup",
		"kLight",
		"kVolume",
		"kDecal",
		"kNavOverrideTri",
		"kCurve",
		"kCurvePoint",
		"kGroup",
		"kEnvProbe",
		"kLink",
		"kImpostor",
		"kLightGrid",
		"kPolyline",
		"kPolylinePoint",
		"kLevelLight",
		"kAnnotation", 
	};

	enum class AssetExtensions : uint64_t {
		actor,
		animclip,
		animset,
		assettag,
		material,
		materialgraph,
		visualeffect,
		model,
		prefab,
		atmosphere,
		soundbank,
		stamp,
		texture,
		level,
		region,
		zone,
		scriptgraph,
		modelvariant,
		conduit,
		config,
		localization,
		collection,
		cinematic2,
		movie,
		performanceclip,
		performanceset,
		nodegraph,
		breakable,
		terrain,
		dynamicenum,
		savedata,
		wwiselookup,
		light,
		volume,
		decal,
		navoverridetri,
		curve,
		curvepoint,
		group,
		envprobe,
		link,
		impostor,
		lightgrid,
		polyline,
		polylinepoint,
		levellight,
		annotation, 
	};
} // namespace rivet::ddl::generated

// clang-format on
