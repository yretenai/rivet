// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/BetweenMissionObjectivesTriggerPrius.hpp>

namespace rivet::ddl::generated {
	BetweenMissionObjectivesTriggerPrius::BetweenMissionObjectivesTriggerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): BaseCustomOverlayTriggerPrius(serialized) {
		Mission1Name = serialized->get_string(Mission1Name_type_id, {});
		Objective1Name = serialized->get_string(Objective1Name_type_id, {});
		Mission2Name = serialized->get_string(Mission2Name_type_id, {});
		Objective2Name = serialized->get_string(Objective2Name_type_id, {}); 
	}

	[[nodiscard]] auto
	BetweenMissionObjectivesTriggerPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	BetweenMissionObjectivesTriggerPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BetweenMissionObjectivesTriggerPrius> {
		if (incoming_type_id == BetweenMissionObjectivesTriggerPrius::type_id) {
			return std::make_shared<BetweenMissionObjectivesTriggerPrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
