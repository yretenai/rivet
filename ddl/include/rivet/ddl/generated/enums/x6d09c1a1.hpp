// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x6d09c1a1_type_name = "x6d09c1a1";
	constexpr static rivet::rivet_type_id x6d09c1a1_type_id = 0x6d09c1a1;

	constexpr static std::array<std::string_view, 4> x6d09c1a1_values = {
		"kNoLock",
		"kLockAtStartOfWalk",
		"kLockAtEndOfWalk",
		"kLockTriggeredByEvent", 
	};

	constexpr static std::array<std::string_view, 4> x6d09c1a1_labels = {
		"Never Aim Locked (always tracks target)",
		"Aim Lock at Start of Walk",
		"Aim Lock at End of Walk",
		"Aim Lock Triggered by Event (AimModWalkToTargetLockAimEvent)", 
	};

	enum class x6d09c1a1 : uint64_t {
		NoLock,
		Aim_Lock_at_Start_of_Walk,
		Aim_Lock_at_End_of_Walk,
		LockTriggeredByEvent, 
	};
} // namespace rivet::ddl::generated

// clang-format on
