// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x16517126.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED Cinematic2FromTextureDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Cinematic2FromTextureDef";
		constexpr static rivet::rivet_type_id type_id = 0xd5653ef5;

		constexpr static std::string_view TextureSlot_type_name = "TextureSlot";
		constexpr static rivet::rivet_type_id TextureSlot_type_id = 0x781f0beb;
		constexpr static std::string_view ActorId_type_name = "ActorId";
		constexpr static rivet::rivet_type_id ActorId_type_id = 0x6c21ca8a;
		constexpr static std::string_view TextureSamplerName_type_name = "TextureSamplerName";
		constexpr static rivet::rivet_type_id TextureSamplerName_type_id = 0x30712231;
		constexpr static std::string_view MaterialMappingName_type_name = "MaterialMappingName";
		constexpr static rivet::rivet_type_id MaterialMappingName_type_id = 0x981e6927;
		constexpr static std::string_view TransferVelocityDepth_type_name = "TransferVelocityDepth";
		constexpr static rivet::rivet_type_id TransferVelocityDepth_type_id = 0x826fc872; 

		explicit Cinematic2FromTextureDef() = default;
		explicit Cinematic2FromTextureDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x16517126 TextureSlot {};
		uint64_t ActorId {};
		std::string_view TextureSamplerName {};
		std::string_view MaterialMappingName {};
		bool TransferVelocityDepth {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2FromTextureDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
