// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/PhysicsSettings.hpp>

namespace rivet::ddl::generated {
	PhysicsSettings::PhysicsSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		ClothEnable = serialized->get_bool(ClothEnable_type_id, true);
		RagdollAnimPoseJointsEnable = serialized->get_bool(RagdollAnimPoseJointsEnable_type_id, true);
		KickablesAndRagdollsEnable = serialized->get_bool(KickablesAndRagdollsEnable_type_id, true);
		RagdollSelfCollision = serialized->get_bool(RagdollSelfCollision_type_id, true);
		FatalThreadConcurrencyAsserts = serialized->get_bool(FatalThreadConcurrencyAsserts_type_id, true);
		SingleThreadedInPlaceLoads = serialized->get_bool(SingleThreadedInPlaceLoads_type_id, false);
		RagdollUpdateSkipUnmovedObjects = serialized->get_bool(RagdollUpdateSkipUnmovedObjects_type_id, true);
		RayCastQueryCount = serialized->get_int32(RayCastQueryCount_type_id, 4096u);
		SweptSphereQueryCount = serialized->get_int32(SweptSphereQueryCount_type_id, 4096u);
		SweptCapsuleQueryCount = serialized->get_int32(SweptCapsuleQueryCount_type_id, 256u);
		ClosestPointsQueryCount = serialized->get_int32(ClosestPointsQueryCount_type_id, 512u);
		MaxDeferredLoads = serialized->get_int32(MaxDeferredLoads_type_id, 512u);
		MaxTrackedSceneObjects = serialized->get_int32(MaxTrackedSceneObjects_type_id, 4096u);
		MaxIgnoredSceneObjects = serialized->get_int32(MaxIgnoredSceneObjects_type_id, 2048u);
		MaxProcrastinatedIgnoreListAdds = serialized->get_int32(MaxProcrastinatedIgnoreListAdds_type_id, 1230u);
		PhysicsQueryAllocSize = serialized->get_int32(PhysicsQueryAllocSize_type_id, 5242880u);
		PhysicsQuerySmallBlockSizes = serialized->get_uint16s(PhysicsQuerySmallBlockSizes_type_id);
		PhysicsStepLocalStreamAllocSize = serialized->get_int32(PhysicsStepLocalStreamAllocSize_type_id, 30408704u);
		PhysicsPersistentStreamAllocSize = serialized->get_int32(PhysicsPersistentStreamAllocSize_type_id, 30408704u);
		PhysicsBroadphaseRadiusX = serialized->get_float(PhysicsBroadphaseRadiusX_type_id, 4096.000000f);
		PhysicsBroadphaseRadiusY = serialized->get_float(PhysicsBroadphaseRadiusY_type_id, 4096.000000f);
		PhysicsBroadphaseRadiusZ = serialized->get_float(PhysicsBroadphaseRadiusZ_type_id, 4096.000000f);
		GravityMagnitude = serialized->get_float(GravityMagnitude_type_id, 9.800000f);
		UnderSampleUpdatingRagdollsAnimFurtherThanThisFromCamera = serialized->get_float(UnderSampleUpdatingRagdollsAnimFurtherThanThisFromCamera_type_id, 30.000000f);
		UnderSampleCullFractionFrames = serialized->get_uint16(UnderSampleCullFractionFrames_type_id, 4u);
		EnableUnderSampleUpdatingRagdolls = serialized->get_bool(EnableUnderSampleUpdatingRagdolls_type_id, true);
		SkipAnimUserPoseSetupOnRagdollActivate = serialized->get_bool(SkipAnimUserPoseSetupOnRagdollActivate_type_id, true);
		ChunkedBodyOptimizationAggression = serialized->get_int32(ChunkedBodyOptimizationAggression_type_id, 2u);
		VisualDebuggerPort = serialized->get_uint16(VisualDebuggerPort_type_id, 45001u);
		DebugHeapSize = serialized->get_uint32(DebugHeapSize_type_id, 0u);
		OverrideBodyMaterialsComingFromMaya = serialized->get_bool(OverrideBodyMaterialsComingFromMaya_type_id, true);
		PhysicsEnable = serialized->get_bool(PhysicsEnable_type_id, true); 
	}

	[[nodiscard]] auto
	PhysicsSettings::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	PhysicsSettings::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PhysicsSettings> {
		if (incoming_type_id == PhysicsSettings::type_id) {
			return std::make_shared<PhysicsSettings>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
