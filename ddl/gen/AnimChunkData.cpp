// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/AnimMultiLookChunkData.hpp>
#include <rivet/ddl/generated/AnimActorChunkData.hpp>
#include <rivet/ddl/generated/AnimLookChunkingComponentData.hpp>
#include <rivet/ddl/generated/AnimLookChunkData.hpp> 

#include <rivet/ddl/generated/AnimChunkData.hpp>

namespace rivet::ddl::generated {
	AnimChunkData::AnimChunkData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		ChunkType = serialized->get_enum<rivet::ddl::generated::ChunkType>(ChunkType_type_id, rivet::ddl::generated::ChunkType_values, rivet::ddl::generated::ChunkType::Misc); 
	}

	[[nodiscard]] auto
	AnimChunkData::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	AnimChunkData::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimChunkData> {
		if (incoming_type_id == AnimChunkData::type_id) {
			return std::make_shared<AnimChunkData>(serialized);
		}

		auto AnimLookChunkData_ptr = AnimLookChunkData::from_substruct(incoming_type_id, serialized);
		if (AnimLookChunkData_ptr != nullptr) {
			return AnimLookChunkData_ptr;
		}

		auto AnimLookChunkingComponentData_ptr = AnimLookChunkingComponentData::from_substruct(incoming_type_id, serialized);
		if (AnimLookChunkingComponentData_ptr != nullptr) {
			return AnimLookChunkingComponentData_ptr;
		}

		auto AnimActorChunkData_ptr = AnimActorChunkData::from_substruct(incoming_type_id, serialized);
		if (AnimActorChunkData_ptr != nullptr) {
			return AnimActorChunkData_ptr;
		}

		auto AnimMultiLookChunkData_ptr = AnimMultiLookChunkData::from_substruct(incoming_type_id, serialized);
		if (AnimMultiLookChunkData_ptr != nullptr) {
			return AnimMultiLookChunkData_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
