// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DoorScriptActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DoorScriptActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x23b6c0d6;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view OpenTriggerMax_type_name = "OpenTriggerMax";
		constexpr static rivet::rivet_type_id OpenTriggerMax_type_id = 0x617d7f37;
		constexpr static std::string_view CloseTriggerMax_type_name = "CloseTriggerMax";
		constexpr static rivet::rivet_type_id CloseTriggerMax_type_id = 0x4af792c8;
		constexpr static std::string_view OutputRequiresInput_type_name = "OutputRequiresInput";
		constexpr static rivet::rivet_type_id OutputRequiresInput_type_id = 0x259bc085; 

		explicit DoorScriptActionPrius() = default;
		explicit DoorScriptActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		uint32_t OpenTriggerMax {};
		uint32_t CloseTriggerMax {};
		bool OutputRequiresInput {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DoorScriptActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
