// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/GameplayNodeGraphBaseDef.hpp> 

namespace rivet::ddl::generated {
	struct IntOutNodeDef;
	struct OutputNodeIntDef;
	struct StringHashOutNodeDef;
	struct OutputNodeUIntDef;
	struct OutputNodeStringHashDef;
	struct OutputNodeBooleanDef;
	struct OutputNodeActorDef;
	struct InputNodeUIntDef;
	struct UIntOutNodeDef;
	struct InputNodeSignalDef;
	struct StringOutNodeDef;
	struct InputNodeFloatDef;
	struct Vec3OutNodeDef;
	struct OutputNodeFloatDef;
	struct InputNodeStringHashDef;
	struct InputNodeBooleanDef;
	struct CheckBoolNodeDef;
	struct OutputNodeSignalDef;
	struct AndNodeDef;
	struct InputNodeActorDef;
	struct MultiplyFloatsNodeDef;
	struct AddFloatsNodeDef;
	struct OrSignalNodeDef;
	struct InputNodeVec3Def;
	struct CompareStringHashesNodeDef;
	struct MaxFloatNodeDef;
	struct CompareFloatsInlineNodeDef;
	struct OutputNodeStringDef;
	struct CompareIntsNodeDef;
	struct NormalizeFloatNodeDef;
	struct RandomBoolGeneratorNodeDef;
	struct OutputNodeVec3Def;
	struct MinFloatNodeDef;
	struct MultiplyVectorByScalarNodeDef;
	struct OrNodeDef;
	struct SubtractFloatsNodeDef;
	struct InputNodeIntDef;
	struct CompareFloatsNodeDef;
	struct AssetReferenceNodeDef;
	struct BooleanOutNodeDef;
	struct DivideFloatsNodeDef;
	struct VecDistanceNodeDef;
	struct ActorPositionNodeDef;
	struct RandomIntGeneratorNodeDef;
	struct SubstringNodeDef;
	struct CompareIntsInlineNodeDef;
	struct AddVectorsNodeDef;
	struct FloatsToVecNodeDef;
	struct ClampFloatNodeDef;
	struct VecToFloatsNodeDef;
	struct NormalizeVectorNodeDef;
	struct SubtractVectorsNodeDef;
	struct RandomFloatGeneratorNodeDef;
	struct ActorValidNodeDef;
	struct NegateVectorNodeDef;
	struct FloatOutNodeDef;
	struct InputNodeStringDef;
	struct VectorLengthNodeDef; 

	struct RIVET_DDL_SHARED StandardNodesDef : GameplayNodeGraphBaseDef {
		constexpr static std::string_view type_name = "StandardNodesDef";
		constexpr static rivet::rivet_type_id type_id = 0x4adb03c1;

		constexpr static std::string_view AssetReferenceNodes_type_name = "AssetReferenceNodes";
		constexpr static rivet::rivet_type_id AssetReferenceNodes_type_id = 0xc026bc83;
		constexpr static std::string_view ActorValidNodes_type_name = "ActorValidNodes";
		constexpr static rivet::rivet_type_id ActorValidNodes_type_id = 0xb647a649;
		constexpr static std::string_view ActorPositionNodes_type_name = "ActorPositionNodes";
		constexpr static rivet::rivet_type_id ActorPositionNodes_type_id = 0xd71a6599;
		constexpr static std::string_view RandomFloatNodes_type_name = "RandomFloatNodes";
		constexpr static rivet::rivet_type_id RandomFloatNodes_type_id = 0xc1ae98e0;
		constexpr static std::string_view CompareFloatsNodes_type_name = "CompareFloatsNodes";
		constexpr static rivet::rivet_type_id CompareFloatsNodes_type_id = 0xd75337c3;
		constexpr static std::string_view CompareFloatsInlineNodes_type_name = "CompareFloatsInlineNodes";
		constexpr static rivet::rivet_type_id CompareFloatsInlineNodes_type_id = 0xbb63fc9d;
		constexpr static std::string_view MinFloatNodes_type_name = "MinFloatNodes";
		constexpr static rivet::rivet_type_id MinFloatNodes_type_id = 0x491f97b3;
		constexpr static std::string_view MaxFloatNodes_type_name = "MaxFloatNodes";
		constexpr static rivet::rivet_type_id MaxFloatNodes_type_id = 0x950efc5;
		constexpr static std::string_view ClampFloatNodes_type_name = "ClampFloatNodes";
		constexpr static rivet::rivet_type_id ClampFloatNodes_type_id = 0x3d7dbc19;
		constexpr static std::string_view AddFloatsNodes_type_name = "AddFloatsNodes";
		constexpr static rivet::rivet_type_id AddFloatsNodes_type_id = 0x92dd8e33;
		constexpr static std::string_view SubtractFloatsNodes_type_name = "SubtractFloatsNodes";
		constexpr static rivet::rivet_type_id SubtractFloatsNodes_type_id = 0xd97e5a96;
		constexpr static std::string_view MultiplyFloatsNodes_type_name = "MultiplyFloatsNodes";
		constexpr static rivet::rivet_type_id MultiplyFloatsNodes_type_id = 0xc791bfec;
		constexpr static std::string_view DivideFloatsNodes_type_name = "DivideFloatsNodes";
		constexpr static rivet::rivet_type_id DivideFloatsNodes_type_id = 0xf97b7db4;
		constexpr static std::string_view CompareIntsNodes_type_name = "CompareIntsNodes";
		constexpr static rivet::rivet_type_id CompareIntsNodes_type_id = 0x3037d96e;
		constexpr static std::string_view CompareIntsInlineNodes_type_name = "CompareIntsInlineNodes";
		constexpr static rivet::rivet_type_id CompareIntsInlineNodes_type_id = 0x91ec2162;
		constexpr static std::string_view RandomIntGeneratorNodes_type_name = "RandomIntGeneratorNodes";
		constexpr static rivet::rivet_type_id RandomIntGeneratorNodes_type_id = 0xd23d9e7e;
		constexpr static std::string_view FloatsToVecNodes_type_name = "FloatsToVecNodes";
		constexpr static rivet::rivet_type_id FloatsToVecNodes_type_id = 0x64545fd9;
		constexpr static std::string_view NormalizeFloatNodes_type_name = "NormalizeFloatNodes";
		constexpr static rivet::rivet_type_id NormalizeFloatNodes_type_id = 0x9f5226b5;
		constexpr static std::string_view VecToFloatsNodes_type_name = "VecToFloatsNodes";
		constexpr static rivet::rivet_type_id VecToFloatsNodes_type_id = 0xd6461adc;
		constexpr static std::string_view VecDistanceNodes_type_name = "VecDistanceNodes";
		constexpr static rivet::rivet_type_id VecDistanceNodes_type_id = 0x862cb55c;
		constexpr static std::string_view AddVectorsNodes_type_name = "AddVectorsNodes";
		constexpr static rivet::rivet_type_id AddVectorsNodes_type_id = 0xf4c8c438;
		constexpr static std::string_view SubtractVectorsNodes_type_name = "SubtractVectorsNodes";
		constexpr static rivet::rivet_type_id SubtractVectorsNodes_type_id = 0x523f308b;
		constexpr static std::string_view NegateVectorNodes_type_name = "NegateVectorNodes";
		constexpr static rivet::rivet_type_id NegateVectorNodes_type_id = 0x38bbb5a5;
		constexpr static std::string_view MultiplyVectorByScalarNodes_type_name = "MultiplyVectorByScalarNodes";
		constexpr static rivet::rivet_type_id MultiplyVectorByScalarNodes_type_id = 0x6ba4b8f1;
		constexpr static std::string_view NormalizeVectorNodes_type_name = "NormalizeVectorNodes";
		constexpr static rivet::rivet_type_id NormalizeVectorNodes_type_id = 0xd28f474e;
		constexpr static std::string_view VectorLengthNodes_type_name = "VectorLengthNodes";
		constexpr static rivet::rivet_type_id VectorLengthNodes_type_id = 0x26fed37;
		constexpr static std::string_view RandomBoolGeneratorNodes_type_name = "RandomBoolGeneratorNodes";
		constexpr static rivet::rivet_type_id RandomBoolGeneratorNodes_type_id = 0x9b1776f8;
		constexpr static std::string_view OrSignalNodes_type_name = "OrSignalNodes";
		constexpr static rivet::rivet_type_id OrSignalNodes_type_id = 0xa81b2bf9;
		constexpr static std::string_view OrNodes_type_name = "OrNodes";
		constexpr static rivet::rivet_type_id OrNodes_type_id = 0xbd4cf165;
		constexpr static std::string_view AndNodes_type_name = "AndNodes";
		constexpr static rivet::rivet_type_id AndNodes_type_id = 0xd150652d;
		constexpr static std::string_view CheckBoolNodes_type_name = "CheckBoolNodes";
		constexpr static rivet::rivet_type_id CheckBoolNodes_type_id = 0x96d6885a;
		constexpr static std::string_view SubstringNodes_type_name = "SubstringNodes";
		constexpr static rivet::rivet_type_id SubstringNodes_type_id = 0x2b6ab791;
		constexpr static std::string_view CompareStringHashesNodes_type_name = "CompareStringHashesNodes";
		constexpr static rivet::rivet_type_id CompareStringHashesNodes_type_id = 0x9f0571b8;
		constexpr static std::string_view InputNodeActors_type_name = "InputNodeActors";
		constexpr static rivet::rivet_type_id InputNodeActors_type_id = 0x817104b;
		constexpr static std::string_view InputNodeBooleans_type_name = "InputNodeBooleans";
		constexpr static rivet::rivet_type_id InputNodeBooleans_type_id = 0x89ba1535;
		constexpr static std::string_view InputNodeFloats_type_name = "InputNodeFloats";
		constexpr static rivet::rivet_type_id InputNodeFloats_type_id = 0x4c9eed30;
		constexpr static std::string_view InputNodeSignals_type_name = "InputNodeSignals";
		constexpr static rivet::rivet_type_id InputNodeSignals_type_id = 0x3516988f;
		constexpr static std::string_view InputNodeStrings_type_name = "InputNodeStrings";
		constexpr static rivet::rivet_type_id InputNodeStrings_type_id = 0x57213777;
		constexpr static std::string_view InputNodeVec3s_type_name = "InputNodeVec3s";
		constexpr static rivet::rivet_type_id InputNodeVec3s_type_id = 0xf5e6e54b;
		constexpr static std::string_view InputNodeStringHashes_type_name = "InputNodeStringHashes";
		constexpr static rivet::rivet_type_id InputNodeStringHashes_type_id = 0xce5c989e;
		constexpr static std::string_view InputNodeUInts_type_name = "InputNodeUInts";
		constexpr static rivet::rivet_type_id InputNodeUInts_type_id = 0xef42c58c;
		constexpr static std::string_view InputNodeInts_type_name = "InputNodeInts";
		constexpr static rivet::rivet_type_id InputNodeInts_type_id = 0x9e51710a;
		constexpr static std::string_view OutputNodeActors_type_name = "OutputNodeActors";
		constexpr static rivet::rivet_type_id OutputNodeActors_type_id = 0x73254955;
		constexpr static std::string_view OutputNodeBooleans_type_name = "OutputNodeBooleans";
		constexpr static rivet::rivet_type_id OutputNodeBooleans_type_id = 0x4f4cb888;
		constexpr static std::string_view OutputNodeFloats_type_name = "OutputNodeFloats";
		constexpr static rivet::rivet_type_id OutputNodeFloats_type_id = 0x37acb42e;
		constexpr static std::string_view OutputNodeSignals_type_name = "OutputNodeSignals";
		constexpr static rivet::rivet_type_id OutputNodeSignals_type_id = 0xcf6297b5;
		constexpr static std::string_view OutputNodeStrings_type_name = "OutputNodeStrings";
		constexpr static rivet::rivet_type_id OutputNodeStrings_type_id = 0xad55384d;
		constexpr static std::string_view OutputNodeVec3s_type_name = "OutputNodeVec3s";
		constexpr static rivet::rivet_type_id OutputNodeVec3s_type_id = 0x76945581;
		constexpr static std::string_view OutputNodeStringHashes_type_name = "OutputNodeStringHashes";
		constexpr static rivet::rivet_type_id OutputNodeStringHashes_type_id = 0xc005e154;
		constexpr static std::string_view OutputNodeUInts_type_name = "OutputNodeUInts";
		constexpr static rivet::rivet_type_id OutputNodeUInts_type_id = 0x6c307546;
		constexpr static std::string_view OutputNodeInts_type_name = "OutputNodeInts";
		constexpr static rivet::rivet_type_id OutputNodeInts_type_id = 0x3f647c1d;
		constexpr static std::string_view BooleanOutNodes_type_name = "BooleanOutNodes";
		constexpr static rivet::rivet_type_id BooleanOutNodes_type_id = 0xaf9580d8;
		constexpr static std::string_view FloatOutNodes_type_name = "FloatOutNodes";
		constexpr static rivet::rivet_type_id FloatOutNodes_type_id = 0x2785a28b;
		constexpr static std::string_view StringOutNodes_type_name = "StringOutNodes";
		constexpr static rivet::rivet_type_id StringOutNodes_type_id = 0xbfe4da68;
		constexpr static std::string_view Vec3OutNodes_type_name = "Vec3OutNodes";
		constexpr static rivet::rivet_type_id Vec3OutNodes_type_id = 0xbb431e1a;
		constexpr static std::string_view StringHashOutNodes_type_name = "StringHashOutNodes";
		constexpr static rivet::rivet_type_id StringHashOutNodes_type_id = 0x32392a81;
		constexpr static std::string_view IntOutNodes_type_name = "IntOutNodes";
		constexpr static rivet::rivet_type_id IntOutNodes_type_id = 0x6b23536f;
		constexpr static std::string_view UIntOutNodes_type_name = "UIntOutNodes";
		constexpr static rivet::rivet_type_id UIntOutNodes_type_id = 0xf563484; 

		explicit StandardNodesDef() = default;
		explicit StandardNodesDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::AssetReferenceNodeDef>> AssetReferenceNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActorValidNodeDef>> ActorValidNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActorPositionNodeDef>> ActorPositionNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RandomFloatGeneratorNodeDef>> RandomFloatNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CompareFloatsNodeDef>> CompareFloatsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CompareFloatsInlineNodeDef>> CompareFloatsInlineNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MinFloatNodeDef>> MinFloatNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MaxFloatNodeDef>> MaxFloatNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ClampFloatNodeDef>> ClampFloatNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AddFloatsNodeDef>> AddFloatsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SubtractFloatsNodeDef>> SubtractFloatsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MultiplyFloatsNodeDef>> MultiplyFloatsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DivideFloatsNodeDef>> DivideFloatsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CompareIntsNodeDef>> CompareIntsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CompareIntsInlineNodeDef>> CompareIntsInlineNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RandomIntGeneratorNodeDef>> RandomIntGeneratorNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::FloatsToVecNodeDef>> FloatsToVecNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::NormalizeFloatNodeDef>> NormalizeFloatNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VecToFloatsNodeDef>> VecToFloatsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VecDistanceNodeDef>> VecDistanceNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AddVectorsNodeDef>> AddVectorsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SubtractVectorsNodeDef>> SubtractVectorsNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::NegateVectorNodeDef>> NegateVectorNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::MultiplyVectorByScalarNodeDef>> MultiplyVectorByScalarNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::NormalizeVectorNodeDef>> NormalizeVectorNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VectorLengthNodeDef>> VectorLengthNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RandomBoolGeneratorNodeDef>> RandomBoolGeneratorNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OrSignalNodeDef>> OrSignalNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OrNodeDef>> OrNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AndNodeDef>> AndNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CheckBoolNodeDef>> CheckBoolNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SubstringNodeDef>> SubstringNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CompareStringHashesNodeDef>> CompareStringHashesNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeActorDef>> InputNodeActors {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeBooleanDef>> InputNodeBooleans {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeFloatDef>> InputNodeFloats {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeSignalDef>> InputNodeSignals {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeStringDef>> InputNodeStrings {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeVec3Def>> InputNodeVec3s {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeStringHashDef>> InputNodeStringHashes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeUIntDef>> InputNodeUInts {};
		std::vector<std::shared_ptr<rivet::ddl::generated::InputNodeIntDef>> InputNodeInts {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeActorDef>> OutputNodeActors {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeBooleanDef>> OutputNodeBooleans {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeFloatDef>> OutputNodeFloats {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeSignalDef>> OutputNodeSignals {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeStringDef>> OutputNodeStrings {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeVec3Def>> OutputNodeVec3s {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeStringHashDef>> OutputNodeStringHashes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeUIntDef>> OutputNodeUInts {};
		std::vector<std::shared_ptr<rivet::ddl::generated::OutputNodeIntDef>> OutputNodeInts {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BooleanOutNodeDef>> BooleanOutNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::FloatOutNodeDef>> FloatOutNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::StringOutNodeDef>> StringOutNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Vec3OutNodeDef>> Vec3OutNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::StringHashOutNodeDef>> StringHashOutNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::IntOutNodeDef>> IntOutNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UIntOutNodeDef>> UIntOutNodes {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<StandardNodesDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
