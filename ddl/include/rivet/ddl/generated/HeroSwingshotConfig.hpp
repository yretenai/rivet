// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct SwingshotJumpData; 

	struct RIVET_DDL_SHARED HeroSwingshotConfig : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroSwingshotConfig";
		constexpr static rivet::rivet_type_id type_id = 0x832b070b;

		constexpr static std::string_view MinRange_type_name = "MinRange";
		constexpr static rivet::rivet_type_id MinRange_type_id = 0x6c79323f;
		constexpr static std::string_view MaxRange_type_name = "MaxRange";
		constexpr static rivet::rivet_type_id MaxRange_type_id = 0x8a199dde;
		constexpr static std::string_view HorizFOV_type_name = "HorizFOV";
		constexpr static rivet::rivet_type_id HorizFOV_type_id = 0xb6674a6c;
		constexpr static std::string_view VertFOV_type_name = "VertFOV";
		constexpr static rivet::rivet_type_id VertFOV_type_id = 0xadb615a3;
		constexpr static std::string_view MaxDistBelow_type_name = "MaxDistBelow";
		constexpr static rivet::rivet_type_id MaxDistBelow_type_id = 0x3889decc;
		constexpr static std::string_view GracePeriod_type_name = "GracePeriod";
		constexpr static rivet::rivet_type_id GracePeriod_type_id = 0xd22cdd8f;
		constexpr static std::string_view JumpData_type_name = "JumpData";
		constexpr static rivet::rivet_type_id JumpData_type_id = 0x1655eec; 

		explicit HeroSwingshotConfig() = default;
		explicit HeroSwingshotConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MinRange {};
		float MaxRange {};
		float HorizFOV {};
		float VertFOV {};
		float MaxDistBelow {};
		float GracePeriod {};
		std::shared_ptr<rivet::ddl::generated::SwingshotJumpData> JumpData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroSwingshotConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
