// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xf12451bd.hpp>
#include <rivet/ddl/generated/enums/x17a2adb9.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector2; 

	struct RIVET_DDL_SHARED HoudiniHeightFieldScatterPerPointData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "HoudiniHeightFieldScatterPerPointData";
		constexpr const static rivet::rivet_type_id type_id = 0x98856c4;

		constexpr const static std::string_view PerPointCountMethod_type_name = "PerPointCountMethod";
		constexpr const static rivet::rivet_type_id PerPointCountMethod_type_id = 0x493c4cd6;
		constexpr const static std::string_view ParamExactNumber_type_name = "ParamExactNumber";
		constexpr const static rivet::rivet_type_id ParamExactNumber_type_id = 0x88ad89d5;
		constexpr const static std::string_view ParamPoissonRange_type_name = "ParamPoissonRange";
		constexpr const static rivet::rivet_type_id ParamPoissonRange_type_id = 0x67b21701;
		constexpr const static std::string_view PositioningMethod_type_name = "PositioningMethod";
		constexpr const static rivet::rivet_type_id PositioningMethod_type_id = 0x364e4f57;
		constexpr const static std::string_view SourceLayerName_type_name = "SourceLayerName";
		constexpr const static rivet::rivet_type_id SourceLayerName_type_id = 0xd16b513d; 

		explicit HoudiniHeightFieldScatterPerPointData() = default;
		explicit HoudiniHeightFieldScatterPerPointData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x17a2adb9 PerPointCountMethod {};
		int32_t ParamExactNumber {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> ParamPoissonRange {};
		rivet::ddl::generated::xf12451bd PositioningMethod {};
		std::string_view SourceLayerName {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HoudiniHeightFieldScatterPerPointData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
