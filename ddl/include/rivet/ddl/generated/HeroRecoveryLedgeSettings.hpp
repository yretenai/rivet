// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HeroRecoveryLedgeSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroRecoveryLedgeSettings";
		constexpr static rivet::rivet_type_id type_id = 0x4705c640;

		constexpr static std::string_view EnableRecoveryLedgesOnWalkOff_type_name = "EnableRecoveryLedgesOnWalkOff";
		constexpr static rivet::rivet_type_id EnableRecoveryLedgesOnWalkOff_type_id = 0x89333d78;
		constexpr static std::string_view EnableRecoveryLedgesOnRunOffNoCombat_type_name = "EnableRecoveryLedgesOnRunOffNoCombat";
		constexpr static rivet::rivet_type_id EnableRecoveryLedgesOnRunOffNoCombat_type_id = 0xe4ca5bcb;
		constexpr static std::string_view EnableRecoveryLedgesOnRunOffInCombat_type_name = "EnableRecoveryLedgesOnRunOffInCombat";
		constexpr static rivet::rivet_type_id EnableRecoveryLedgesOnRunOffInCombat_type_id = 0x48785966;
		constexpr static std::string_view EnableFrontRecoveryLedgesOnJump_type_name = "EnableFrontRecoveryLedgesOnJump";
		constexpr static rivet::rivet_type_id EnableFrontRecoveryLedgesOnJump_type_id = 0x22f471b7;
		constexpr static std::string_view EnableRecoveryLedgesOnKnockedOff_type_name = "EnableRecoveryLedgesOnKnockedOff";
		constexpr static rivet::rivet_type_id EnableRecoveryLedgesOnKnockedOff_type_id = 0x4db5c030;
		constexpr static std::string_view EnableEdgeClampingOnHitReact_type_name = "EnableEdgeClampingOnHitReact";
		constexpr static rivet::rivet_type_id EnableEdgeClampingOnHitReact_type_id = 0x91d00ec0; 

		explicit HeroRecoveryLedgeSettings() = default;
		explicit HeroRecoveryLedgeSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool EnableRecoveryLedgesOnWalkOff {};
		bool EnableRecoveryLedgesOnRunOffNoCombat {};
		bool EnableRecoveryLedgesOnRunOffInCombat {};
		bool EnableFrontRecoveryLedgesOnJump {};
		bool EnableRecoveryLedgesOnKnockedOff {};
		bool EnableEdgeClampingOnHitReact {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroRecoveryLedgeSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
