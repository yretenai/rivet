// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VolumetricCloudsModelingDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VolumetricCloudsModelingDef";
		constexpr static rivet::rivet_type_id type_id = 0x24006939;

		constexpr static std::string_view CloudsLayerStart_type_name = "CloudsLayerStart";
		constexpr static rivet::rivet_type_id CloudsLayerStart_type_id = 0xf0884846;
		constexpr static std::string_view LayerThickness_type_name = "LayerThickness";
		constexpr static rivet::rivet_type_id LayerThickness_type_id = 0x96955ba4;
		constexpr static std::string_view BaseTile_type_name = "BaseTile";
		constexpr static rivet::rivet_type_id BaseTile_type_id = 0xbb1dcfa;
		constexpr static std::string_view DetailTile_type_name = "DetailTile";
		constexpr static rivet::rivet_type_id DetailTile_type_id = 0x775f936d;
		constexpr static std::string_view DetailStrength_type_name = "DetailStrength";
		constexpr static rivet::rivet_type_id DetailStrength_type_id = 0x6e101382;
		constexpr static std::string_view CurlNoiseTexture_type_name = "CurlNoiseTexture";
		constexpr static rivet::rivet_type_id CurlNoiseTexture_type_id = 0xa1b76a7f;
		constexpr static std::string_view CurlTile_type_name = "CurlTile";
		constexpr static rivet::rivet_type_id CurlTile_type_id = 0x92c6d56d;
		constexpr static std::string_view CurlStrength_type_name = "CurlStrength";
		constexpr static rivet::rivet_type_id CurlStrength_type_id = 0x6ae4c554;
		constexpr static std::string_view CloudTopOffset_type_name = "CloudTopOffset";
		constexpr static rivet::rivet_type_id CloudTopOffset_type_id = 0xcfd0f4f5;
		constexpr static std::string_view CloudSize_type_name = "CloudSize";
		constexpr static rivet::rivet_type_id CloudSize_type_id = 0xba4ba68c;
		constexpr static std::string_view CloudDensity_type_name = "CloudDensity";
		constexpr static rivet::rivet_type_id CloudDensity_type_id = 0xe159bfd6;
		constexpr static std::string_view CloudCoverageModifier_type_name = "CloudCoverageModifier";
		constexpr static rivet::rivet_type_id CloudCoverageModifier_type_id = 0x623276cc;
		constexpr static std::string_view CloudTypeModifier_type_name = "CloudTypeModifier";
		constexpr static rivet::rivet_type_id CloudTypeModifier_type_id = 0xe5a04594;
		constexpr static std::string_view AnvilBias_type_name = "AnvilBias";
		constexpr static rivet::rivet_type_id AnvilBias_type_id = 0xd5fd977a;
		constexpr static std::string_view WeatherTexSize_type_name = "WeatherTexSize";
		constexpr static rivet::rivet_type_id WeatherTexSize_type_id = 0xe8974334;
		constexpr static std::string_view WeatherTexOffsetAzimuth_type_name = "WeatherTexOffsetAzimuth";
		constexpr static rivet::rivet_type_id WeatherTexOffsetAzimuth_type_id = 0xa7876c54;
		constexpr static std::string_view WeatherTexOffsetDistance_type_name = "WeatherTexOffsetDistance";
		constexpr static rivet::rivet_type_id WeatherTexOffsetDistance_type_id = 0xad2ce4ca;
		constexpr static std::string_view WeatherMap_type_name = "WeatherMap";
		constexpr static rivet::rivet_type_id WeatherMap_type_id = 0x1e59100c; 

		explicit VolumetricCloudsModelingDef() = default;
		explicit VolumetricCloudsModelingDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float CloudsLayerStart {};
		float LayerThickness {};
		float BaseTile {};
		float DetailTile {};
		float DetailStrength {};
		std::string_view CurlNoiseTexture {};
		float CurlTile {};
		float CurlStrength {};
		float CloudTopOffset {};
		float CloudSize {};
		float CloudDensity {};
		float CloudCoverageModifier {};
		float CloudTypeModifier {};
		float AnvilBias {};
		float WeatherTexSize {};
		float WeatherTexOffsetAzimuth {};
		float WeatherTexOffsetDistance {};
		std::string_view WeatherMap {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VolumetricCloudsModelingDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
