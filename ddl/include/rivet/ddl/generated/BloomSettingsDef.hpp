// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BloomSettingsDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BloomSettingsDef";
		constexpr static rivet::rivet_type_id type_id = 0xb7e96926;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view Intensity_type_name = "Intensity";
		constexpr static rivet::rivet_type_id Intensity_type_id = 0x6b4f279e;
		constexpr static std::string_view Threshold_type_name = "Threshold";
		constexpr static rivet::rivet_type_id Threshold_type_id = 0x6987b59a;
		constexpr static std::string_view GaussianStrength0_type_name = "GaussianStrength0";
		constexpr static rivet::rivet_type_id GaussianStrength0_type_id = 0x130f8052;
		constexpr static std::string_view GaussianStrength1_type_name = "GaussianStrength1";
		constexpr static rivet::rivet_type_id GaussianStrength1_type_id = 0x6408b0c4;
		constexpr static std::string_view GaussianStrength2_type_name = "GaussianStrength2";
		constexpr static rivet::rivet_type_id GaussianStrength2_type_id = 0xfd01e17e;
		constexpr static std::string_view GaussianStrength3_type_name = "GaussianStrength3";
		constexpr static rivet::rivet_type_id GaussianStrength3_type_id = 0x8a06d1e8;
		constexpr static std::string_view GaussianStrength4_type_name = "GaussianStrength4";
		constexpr static rivet::rivet_type_id GaussianStrength4_type_id = 0x1462444b;
		constexpr static std::string_view BloomDirtiness_type_name = "BloomDirtiness";
		constexpr static rivet::rivet_type_id BloomDirtiness_type_id = 0xacad4f3f;
		constexpr static std::string_view BloomDirtinessAsset_type_name = "BloomDirtinessAsset";
		constexpr static rivet::rivet_type_id BloomDirtinessAsset_type_id = 0x3658d8af;
		constexpr static std::string_view LensFlareLumMin_type_name = "LensFlareLumMin";
		constexpr static rivet::rivet_type_id LensFlareLumMin_type_id = 0x131a048d;
		constexpr static std::string_view LensFlareLumMax_type_name = "LensFlareLumMax";
		constexpr static rivet::rivet_type_id LensFlareLumMax_type_id = 0x2f173bd4;
		constexpr static std::string_view LensFlareLumIntensity_type_name = "LensFlareLumIntensity";
		constexpr static rivet::rivet_type_id LensFlareLumIntensity_type_id = 0xc0d04df3;
		constexpr static std::string_view LensFlareGhosts_type_name = "LensFlareGhosts";
		constexpr static rivet::rivet_type_id LensFlareGhosts_type_id = 0xf93ba7a9;
		constexpr static std::string_view LensFlareFallOff_type_name = "LensFlareFallOff";
		constexpr static rivet::rivet_type_id LensFlareFallOff_type_id = 0xda0b6f86;
		constexpr static std::string_view LensFlareIntensity_type_name = "LensFlareIntensity";
		constexpr static rivet::rivet_type_id LensFlareIntensity_type_id = 0x37c3545d;
		constexpr static std::string_view LensFlareDistortion_type_name = "LensFlareDistortion";
		constexpr static rivet::rivet_type_id LensFlareDistortion_type_id = 0xb93d2afb;
		constexpr static std::string_view LensFlareHaloRadius_type_name = "LensFlareHaloRadius";
		constexpr static rivet::rivet_type_id LensFlareHaloRadius_type_id = 0xc40dbb62;
		constexpr static std::string_view LensFlareHaloIntensity_type_name = "LensFlareHaloIntensity";
		constexpr static rivet::rivet_type_id LensFlareHaloIntensity_type_id = 0xe7c6a5a7;
		constexpr static std::string_view LensFlareGhostDispersal_type_name = "LensFlareGhostDispersal";
		constexpr static rivet::rivet_type_id LensFlareGhostDispersal_type_id = 0xb170344f;
		constexpr static std::string_view AnamorphicLensFlareIntensity_type_name = "AnamorphicLensFlareIntensity";
		constexpr static rivet::rivet_type_id AnamorphicLensFlareIntensity_type_id = 0xfb8c0403;
		constexpr static std::string_view AnamorphicLensFlareValueThreshold_type_name = "AnamorphicLensFlareValueThreshold";
		constexpr static rivet::rivet_type_id AnamorphicLensFlareValueThreshold_type_id = 0x21f39eae;
		constexpr static std::string_view AnamorphicLensFlareSaturationThreshold_type_name = "AnamorphicLensFlareSaturationThreshold";
		constexpr static rivet::rivet_type_id AnamorphicLensFlareSaturationThreshold_type_id = 0x4b01cc3d; 

		explicit BloomSettingsDef() = default;
		explicit BloomSettingsDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		float Intensity {};
		float Threshold {};
		float GaussianStrength0 {};
		float GaussianStrength1 {};
		float GaussianStrength2 {};
		float GaussianStrength3 {};
		float GaussianStrength4 {};
		float BloomDirtiness {};
		std::string_view BloomDirtinessAsset {};
		float LensFlareLumMin {};
		float LensFlareLumMax {};
		float LensFlareLumIntensity {};
		float LensFlareGhosts {};
		float LensFlareFallOff {};
		float LensFlareIntensity {};
		float LensFlareDistortion {};
		float LensFlareHaloRadius {};
		float LensFlareHaloIntensity {};
		float LensFlareGhostDispersal {};
		float AnamorphicLensFlareIntensity {};
		float AnamorphicLensFlareValueThreshold {};
		float AnamorphicLensFlareSaturationThreshold {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BloomSettingsDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
