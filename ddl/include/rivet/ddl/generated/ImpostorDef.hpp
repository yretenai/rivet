// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/AssetExtensions.hpp> 

namespace rivet::ddl::generated {
	struct HoudiniIntegrationDef;
	struct DDLDoubleTransform; 

	struct RIVET_DDL_SHARED ImpostorDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ImpostorDef";
		constexpr static rivet::rivet_type_id type_id = 0x4c1cc5f1;

		constexpr static std::string_view LocalTransform_type_name = "LocalTransform";
		constexpr static rivet::rivet_type_id LocalTransform_type_id = 0x1a4f9d52;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view NeedsAttention_type_name = "NeedsAttention";
		constexpr static rivet::rivet_type_id NeedsAttention_type_id = 0xf6202c3e;
		constexpr static std::string_view Parent_type_name = "Parent";
		constexpr static rivet::rivet_type_id Parent_type_id = 0x3f62e28;
		constexpr static std::string_view ParentTerrain_type_name = "ParentTerrain";
		constexpr static rivet::rivet_type_id ParentTerrain_type_id = 0x8e92acfd;
		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view IsDeleted_type_name = "IsDeleted";
		constexpr static rivet::rivet_type_id IsDeleted_type_id = 0xf0182ff;
		constexpr static std::string_view SortValue_type_name = "SortValue";
		constexpr static rivet::rivet_type_id SortValue_type_id = 0x55c1c85d;
		constexpr static std::string_view AssetType_type_name = "AssetType";
		constexpr static rivet::rivet_type_id AssetType_type_id = 0x8970bd6d;
		constexpr static std::string_view AssetPath_type_name = "AssetPath";
		constexpr static rivet::rivet_type_id AssetPath_type_id = 0xefa614b;
		constexpr static std::string_view HoudiniIntegration_type_name = "HoudiniIntegration";
		constexpr static rivet::rivet_type_id HoudiniIntegration_type_id = 0x9c408fd6;
		constexpr static std::string_view HoudiniIntegrationEnabled_type_name = "HoudiniIntegrationEnabled";
		constexpr static rivet::rivet_type_id HoudiniIntegrationEnabled_type_id = 0x8ab8cb41;
		constexpr static std::string_view AssetOverrides_type_name = "AssetOverrides";
		constexpr static rivet::rivet_type_id AssetOverrides_type_id = 0xb7eef61d;
		constexpr static std::string_view ActorOverrides_type_name = "ActorOverrides";
		constexpr static rivet::rivet_type_id ActorOverrides_type_id = 0x98c0918b; 

		explicit ImpostorDef() = default;
		explicit ImpostorDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLDoubleTransform> LocalTransform {};
		std::string_view Name {};
		bool NeedsAttention {};
		uint64_t Parent {};
		uint64_t ParentTerrain {};
		uint64_t Id {};
		bool IsDeleted {};
		float SortValue {};
		rivet::ddl::generated::AssetExtensions AssetType {};
		std::string_view AssetPath {};
		std::shared_ptr<rivet::ddl::generated::HoudiniIntegrationDef> HoudiniIntegration {};
		bool HoudiniIntegrationEnabled {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> AssetOverrides {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> ActorOverrides {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ImpostorDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
