// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/GameBotShooterPrius.hpp> 

namespace rivet::ddl::generated {
	struct HoverShuffleData; 

	struct RIVET_DDL_SHARED GameBotShooterJetPackPrius : GameBotShooterPrius {
		constexpr static std::string_view type_name = "GameBotShooterJetPackPrius";
		constexpr static rivet::rivet_type_id type_id = 0xde5ef58a;

		constexpr static std::string_view HoverLeanVarMultiplier_type_name = "HoverLeanVarMultiplier";
		constexpr static rivet::rivet_type_id HoverLeanVarMultiplier_type_id = 0x6a00692;
		constexpr static std::string_view HoverLeanBlendSpeed_type_name = "HoverLeanBlendSpeed";
		constexpr static rivet::rivet_type_id HoverLeanBlendSpeed_type_id = 0x21515a4f;
		constexpr static std::string_view HoverSpeedScaleWhenPassive_type_name = "HoverSpeedScaleWhenPassive";
		constexpr static rivet::rivet_type_id HoverSpeedScaleWhenPassive_type_id = 0x161209f2;
		constexpr static std::string_view HoverShuffleData_type_name = "HoverShuffleData";
		constexpr static rivet::rivet_type_id HoverShuffleData_type_id = 0x5d8cb773; 

		explicit GameBotShooterJetPackPrius() = default;
		explicit GameBotShooterJetPackPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float HoverLeanVarMultiplier {};
		float HoverLeanBlendSpeed {};
		float HoverSpeedScaleWhenPassive {};
		std::shared_ptr<rivet::ddl::generated::HoverShuffleData> HoverShuffleData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameBotShooterJetPackPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
