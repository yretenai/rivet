// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct Region2DMapOverlayLayer; 

	struct RIVET_DDL_SHARED Region2DMapOverlay : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Region2DMapOverlay";
		constexpr static rivet::rivet_type_id type_id = 0xaba97eab;

		constexpr static std::string_view MapImage_type_name = "MapImage";
		constexpr static rivet::rivet_type_id MapImage_type_id = 0x30f041a5;
		constexpr static std::string_view OptionalMapLayers_type_name = "OptionalMapLayers";
		constexpr static rivet::rivet_type_id OptionalMapLayers_type_id = 0x79110cff;
		constexpr static std::string_view Left_type_name = "Left";
		constexpr static rivet::rivet_type_id Left_type_id = 0x4af727d8;
		constexpr static std::string_view Top_type_name = "Top";
		constexpr static rivet::rivet_type_id Top_type_id = 0x348c3603;
		constexpr static std::string_view Width_type_name = "Width";
		constexpr static rivet::rivet_type_id Width_type_id = 0x954989ee;
		constexpr static std::string_view Height_type_name = "Height";
		constexpr static rivet::rivet_type_id Height_type_id = 0xcb35ab68;
		constexpr static std::string_view AutoGenerateMap_type_name = "AutoGenerateMap";
		constexpr static rivet::rivet_type_id AutoGenerateMap_type_id = 0x49f92b19;
		constexpr static std::string_view AutoMapCameraY_type_name = "AutoMapCameraY";
		constexpr static rivet::rivet_type_id AutoMapCameraY_type_id = 0xbfb371e7;
		constexpr static std::string_view AutoMapMinX_type_name = "AutoMapMinX";
		constexpr static rivet::rivet_type_id AutoMapMinX_type_id = 0x6cf500f4;
		constexpr static std::string_view AutoMapMaxX_type_name = "AutoMapMaxX";
		constexpr static rivet::rivet_type_id AutoMapMaxX_type_id = 0x7e7ee49b;
		constexpr static std::string_view AutoMapMinZ_type_name = "AutoMapMinZ";
		constexpr static rivet::rivet_type_id AutoMapMinZ_type_id = 0x82fb61d8;
		constexpr static std::string_view AutoMapMaxZ_type_name = "AutoMapMaxZ";
		constexpr static rivet::rivet_type_id AutoMapMaxZ_type_id = 0x907085b7; 

		explicit Region2DMapOverlay() = default;
		explicit Region2DMapOverlay([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view MapImage {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Region2DMapOverlayLayer>> OptionalMapLayers {};
		float Left {};
		float Top {};
		float Width {};
		float Height {};
		bool AutoGenerateMap {};
		float AutoMapCameraY {};
		float AutoMapMinX {};
		float AutoMapMaxX {};
		float AutoMapMinZ {};
		float AutoMapMaxZ {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Region2DMapOverlay>;
	};
} // namespace rivet::ddl::generated

// clang-format on
