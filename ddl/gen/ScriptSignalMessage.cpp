// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/ScriptSignalMessage.hpp>

namespace rivet::ddl::generated {
	ScriptSignalMessage::ScriptSignalMessage([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		fr = serialized->get_int32(fr_type_id, 0u);
		id = serialized->get_uint64(id_type_id, 0ull);
		pl = serialized->get_uint32(pl_type_id, 0u);
		outpl = serialized->get_uint32(outpl_type_id, 0u);
		src = serialized->get_uint64(src_type_id, 0ull);
		z = serialized->get_uint64(z_type_id, 0ull);
		comment = serialized->get_string(comment_type_id, {});
		sourceAction = serialized->get_string(sourceAction_type_id, {}); 
	}

	[[nodiscard]] auto
	ScriptSignalMessage::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	ScriptSignalMessage::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ScriptSignalMessage> {
		if (incoming_type_id == ScriptSignalMessage::type_id) {
			return std::make_shared<ScriptSignalMessage>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
