// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct DDLTransform; 

	struct RIVET_DDL_SHARED AttachableShotSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "AttachableShotSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x19f942fe;

		constexpr static std::string_view ShotOwner_type_name = "ShotOwner";
		constexpr static rivet::rivet_type_id ShotOwner_type_id = 0x8b1a8202;
		constexpr static std::string_view AssetId_type_name = "AssetId";
		constexpr static rivet::rivet_type_id AssetId_type_id = 0xb6e788d7;
		constexpr static std::string_view WeaponId_type_name = "WeaponId";
		constexpr static rivet::rivet_type_id WeaponId_type_id = 0x902af590;
		constexpr static std::string_view SpawnTime_type_name = "SpawnTime";
		constexpr static rivet::rivet_type_id SpawnTime_type_id = 0xf28cbe41;
		constexpr static std::string_view VersionIndex_type_name = "VersionIndex";
		constexpr static rivet::rivet_type_id VersionIndex_type_id = 0x6e091c9a;
		constexpr static std::string_view AttachActor_type_name = "AttachActor";
		constexpr static rivet::rivet_type_id AttachActor_type_id = 0x24c2eb7e;
		constexpr static std::string_view AttachJoint_type_name = "AttachJoint";
		constexpr static rivet::rivet_type_id AttachJoint_type_id = 0xfd42c180;
		constexpr static std::string_view RelativeMatrix_type_name = "RelativeMatrix";
		constexpr static rivet::rivet_type_id RelativeMatrix_type_id = 0xd5b2f2a5;
		constexpr static std::string_view RelativeNormal_type_name = "RelativeNormal";
		constexpr static rivet::rivet_type_id RelativeNormal_type_id = 0xc04db8e;
		constexpr static std::string_view AttachMaterial_type_name = "AttachMaterial";
		constexpr static rivet::rivet_type_id AttachMaterial_type_id = 0x63eb5738; 

		explicit AttachableShotSpawnData() = default;
		explicit AttachableShotSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t ShotOwner {};
		uint64_t AssetId {};
		uint32_t WeaponId {};
		float SpawnTime {};
		uint8_t VersionIndex {};
		uint32_t AttachActor {};
		int32_t AttachJoint {};
		std::shared_ptr<rivet::ddl::generated::DDLTransform> RelativeMatrix {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> RelativeNormal {};
		int32_t AttachMaterial {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AttachableShotSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
