// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x3cdeb00d.hpp>
#include <rivet/ddl/generated/enums/xb8f8f0e5.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct PlatformMovingStopItem; 

	struct RIVET_DDL_SHARED PlatformMovingPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PlatformMovingPrius";
		constexpr static rivet::rivet_type_id type_id = 0x7d77b3a6;

		constexpr static std::string_view InitPosition_type_name = "InitPosition";
		constexpr static rivet::rivet_type_id InitPosition_type_id = 0x55c7f1e1;
		constexpr static std::string_view Orientation_type_name = "Orientation";
		constexpr static rivet::rivet_type_id Orientation_type_id = 0xbb5c948d;
		constexpr static std::string_view StopList_type_name = "StopList";
		constexpr static rivet::rivet_type_id StopList_type_id = 0x6015d528;
		constexpr static std::string_view MotionPath_type_name = "MotionPath";
		constexpr static rivet::rivet_type_id MotionPath_type_id = 0xfcc9ee28;
		constexpr static std::string_view SpeedAccel_type_name = "SpeedAccel";
		constexpr static rivet::rivet_type_id SpeedAccel_type_id = 0x5d9ea52c;
		constexpr static std::string_view SpeedDecel_type_name = "SpeedDecel";
		constexpr static rivet::rivet_type_id SpeedDecel_type_id = 0xb0157580;
		constexpr static std::string_view SpeedMax_type_name = "SpeedMax";
		constexpr static rivet::rivet_type_id SpeedMax_type_id = 0xb6419fba;
		constexpr static std::string_view LookAtActor_type_name = "LookAtActor";
		constexpr static rivet::rivet_type_id LookAtActor_type_id = 0xa37bf657;
		constexpr static std::string_view AllowCallWhenMoving_type_name = "AllowCallWhenMoving";
		constexpr static rivet::rivet_type_id AllowCallWhenMoving_type_id = 0x29a60a2c;
		constexpr static std::string_view LockRiders_type_name = "LockRiders";
		constexpr static rivet::rivet_type_id LockRiders_type_id = 0x5c51cd2e;
		constexpr static std::string_view OfferLocator_type_name = "OfferLocator";
		constexpr static rivet::rivet_type_id OfferLocator_type_id = 0x5613ef51;
		constexpr static std::string_view OfferOffset_type_name = "OfferOffset";
		constexpr static rivet::rivet_type_id OfferOffset_type_id = 0xda6f0f48;
		constexpr static std::string_view ApproachStopTime_type_name = "ApproachStopTime";
		constexpr static rivet::rivet_type_id ApproachStopTime_type_id = 0x37ea9fd1; 

		explicit PlatformMovingPrius() = default;
		explicit PlatformMovingPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xb8f8f0e5 InitPosition {};
		rivet::ddl::generated::x3cdeb00d Orientation {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PlatformMovingStopItem>> StopList {};
		uint64_t MotionPath {};
		float SpeedAccel {};
		float SpeedDecel {};
		float SpeedMax {};
		uint64_t LookAtActor {};
		bool AllowCallWhenMoving {};
		bool LockRiders {};
		std::string_view OfferLocator {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> OfferOffset {};
		float ApproachStopTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlatformMovingPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
