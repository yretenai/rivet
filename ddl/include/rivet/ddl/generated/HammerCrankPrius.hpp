// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/HeroTypes.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HammerCrankPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HammerCrankPrius";
		constexpr static rivet::rivet_type_id type_id = 0x53274c9c;

		constexpr static std::string_view SaveUsedState_type_name = "SaveUsedState";
		constexpr static rivet::rivet_type_id SaveUsedState_type_id = 0x511c7518;
		constexpr static std::string_view HeroType_type_name = "HeroType";
		constexpr static rivet::rivet_type_id HeroType_type_id = 0x1583d108;
		constexpr static std::string_view Camera_type_name = "Camera";
		constexpr static rivet::rivet_type_id Camera_type_id = 0x564a062;
		constexpr static std::string_view CameraBlendInTime_type_name = "CameraBlendInTime";
		constexpr static rivet::rivet_type_id CameraBlendInTime_type_id = 0xe1abdb4f;
		constexpr static std::string_view CameraBlendOutTime_type_name = "CameraBlendOutTime";
		constexpr static rivet::rivet_type_id CameraBlendOutTime_type_id = 0xddcb88c3;
		constexpr static std::string_view ButtonDisplayRange_type_name = "ButtonDisplayRange";
		constexpr static rivet::rivet_type_id ButtonDisplayRange_type_id = 0xfb94b9ac;
		constexpr static std::string_view CrankSpeedMultiplier_type_name = "CrankSpeedMultiplier";
		constexpr static rivet::rivet_type_id CrankSpeedMultiplier_type_id = 0xc3bcc8b7;
		constexpr static std::string_view UseCrankTimeOverride_type_name = "UseCrankTimeOverride";
		constexpr static rivet::rivet_type_id UseCrankTimeOverride_type_id = 0x2f5378cd;
		constexpr static std::string_view CrankTimeOverride_type_name = "CrankTimeOverride";
		constexpr static rivet::rivet_type_id CrankTimeOverride_type_id = 0x959656eb; 

		explicit HammerCrankPrius() = default;
		explicit HammerCrankPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool SaveUsedState {};
		rivet::ddl::generated::HeroTypes HeroType {};
		uint64_t Camera {};
		float CameraBlendInTime {};
		float CameraBlendOutTime {};
		float ButtonDisplayRange {};
		float CrankSpeedMultiplier {};
		bool UseCrankTimeOverride {};
		float CrankTimeOverride {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HammerCrankPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
