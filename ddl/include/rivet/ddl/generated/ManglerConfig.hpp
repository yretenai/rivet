// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ManglerConfig : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ManglerConfig";
		constexpr static rivet::rivet_type_id type_id = 0xc0f30ae3;

		constexpr static std::string_view TimeBetweenAttacksMin_type_name = "TimeBetweenAttacksMin";
		constexpr static rivet::rivet_type_id TimeBetweenAttacksMin_type_id = 0xa4c3f833;
		constexpr static std::string_view TimeBetweenAttacksMax_type_name = "TimeBetweenAttacksMax";
		constexpr static rivet::rivet_type_id TimeBetweenAttacksMax_type_id = 0x98cec76a;
		constexpr static std::string_view PreMoveTime_type_name = "PreMoveTime";
		constexpr static rivet::rivet_type_id PreMoveTime_type_id = 0x511c363c;
		constexpr static std::string_view MoveSpeed_type_name = "MoveSpeed";
		constexpr static rivet::rivet_type_id MoveSpeed_type_id = 0x1f570251;
		constexpr static std::string_view ShockwaveTellDuration_type_name = "ShockwaveTellDuration";
		constexpr static rivet::rivet_type_id ShockwaveTellDuration_type_id = 0x774a542b;
		constexpr static std::string_view ShockwaveDuration_type_name = "ShockwaveDuration";
		constexpr static rivet::rivet_type_id ShockwaveDuration_type_id = 0xc4a4377d;
		constexpr static std::string_view ShockwaveRadius_type_name = "ShockwaveRadius";
		constexpr static rivet::rivet_type_id ShockwaveRadius_type_id = 0x180968d3;
		constexpr static std::string_view ShockwaveThiccness_type_name = "ShockwaveThiccness";
		constexpr static rivet::rivet_type_id ShockwaveThiccness_type_id = 0x39ff1c65;
		constexpr static std::string_view ShockwaveUnlocked_type_name = "ShockwaveUnlocked";
		constexpr static rivet::rivet_type_id ShockwaveUnlocked_type_id = 0x43f0a9aa;
		constexpr static std::string_view OverloadLevel_type_name = "OverloadLevel";
		constexpr static rivet::rivet_type_id OverloadLevel_type_id = 0x91f73e07; 

		explicit ManglerConfig() = default;
		explicit ManglerConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float TimeBetweenAttacksMin {};
		float TimeBetweenAttacksMax {};
		float PreMoveTime {};
		float MoveSpeed {};
		float ShockwaveTellDuration {};
		float ShockwaveDuration {};
		float ShockwaveRadius {};
		float ShockwaveThiccness {};
		bool ShockwaveUnlocked {};
		uint32_t OverloadLevel {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ManglerConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
