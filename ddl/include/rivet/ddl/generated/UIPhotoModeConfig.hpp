// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct UIPhotoModeLights;
	struct UIPhotoModeOptionsPage;
	struct UIPhotoModeEditMode;
	struct UIPhotoModeOption; 

	struct RIVET_DDL_SHARED UIPhotoModeConfig : ConfigBase {
		constexpr const static std::string_view type_name = "UIPhotoModeConfig";
		constexpr const static rivet::rivet_type_id type_id = 0x187c281c;

		constexpr const static std::string_view OptionsPages_type_name = "OptionsPages";
		constexpr const static rivet::rivet_type_id OptionsPages_type_id = 0x6bbe8ad4;
		constexpr const static std::string_view Lights_type_name = "Lights";
		constexpr const static rivet::rivet_type_id Lights_type_id = 0x6c4fc8f;
		constexpr const static std::string_view EditModes_type_name = "EditModes";
		constexpr const static rivet::rivet_type_id EditModes_type_id = 0xf54200dc;
		constexpr const static std::string_view CharacterControls_type_name = "CharacterControls";
		constexpr const static rivet::rivet_type_id CharacterControls_type_id = 0x5751aaef; 

		explicit UIPhotoModeConfig() = default;
		explicit UIPhotoModeConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::UIPhotoModeOptionsPage>> OptionsPages {};
		std::shared_ptr<rivet::ddl::generated::UIPhotoModeLights> Lights {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UIPhotoModeEditMode>> EditModes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UIPhotoModeOption>> CharacterControls {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UIPhotoModeConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
