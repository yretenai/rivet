// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED EngineAmortizationSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "EngineAmortizationSettings";
		constexpr static rivet::rivet_type_id type_id = 0x7183ee90;

		constexpr static std::string_view ZoneInstantiationBudgetMin_type_name = "ZoneInstantiationBudgetMin";
		constexpr static rivet::rivet_type_id ZoneInstantiationBudgetMin_type_id = 0x20b091c8;
		constexpr static std::string_view ZoneInstantiationBudgetMax_type_name = "ZoneInstantiationBudgetMax";
		constexpr static rivet::rivet_type_id ZoneInstantiationBudgetMax_type_id = 0x1cbdae91;
		constexpr static std::string_view ZoneInstantiationUseLeftoverFrameTime_type_name = "ZoneInstantiationUseLeftoverFrameTime";
		constexpr static rivet::rivet_type_id ZoneInstantiationUseLeftoverFrameTime_type_id = 0x99f80348;
		constexpr static std::string_view AssetInstantiationBudgetMin_type_name = "AssetInstantiationBudgetMin";
		constexpr static rivet::rivet_type_id AssetInstantiationBudgetMin_type_id = 0xa05c3c1;
		constexpr static std::string_view AssetInstantiationBudgetMax_type_name = "AssetInstantiationBudgetMax";
		constexpr static rivet::rivet_type_id AssetInstantiationBudgetMax_type_id = 0x3608fc98;
		constexpr static std::string_view AssetDeletionBudgetMin_type_name = "AssetDeletionBudgetMin";
		constexpr static rivet::rivet_type_id AssetDeletionBudgetMin_type_id = 0x7eff6891;
		constexpr static std::string_view AssetDeletionBudgetMax_type_name = "AssetDeletionBudgetMax";
		constexpr static rivet::rivet_type_id AssetDeletionBudgetMax_type_id = 0x42f257c8;
		constexpr static std::string_view BatchSoundBankVirtualFrees_type_name = "BatchSoundBankVirtualFrees";
		constexpr static rivet::rivet_type_id BatchSoundBankVirtualFrees_type_id = 0xeecdba58; 

		explicit EngineAmortizationSettings() = default;
		explicit EngineAmortizationSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float ZoneInstantiationBudgetMin {};
		float ZoneInstantiationBudgetMax {};
		bool ZoneInstantiationUseLeftoverFrameTime {};
		float AssetInstantiationBudgetMin {};
		float AssetInstantiationBudgetMax {};
		float AssetDeletionBudgetMin {};
		float AssetDeletionBudgetMax {};
		bool BatchSoundBankVirtualFrees {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<EngineAmortizationSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
