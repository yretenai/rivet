// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ECMFilterDef;
	struct ECMEventDef;
	struct ECMResponseDef;
	struct ECMFieldOpNodeDef;
	struct ECMEffectNodeDef;
	struct ECMInputNodeDef;
	struct ECMSelectorNodeDef;
	struct ECMCommentNodeDef; 

	struct RIVET_DDL_SHARED ConduitDefClipboard : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ConduitDefClipboard";
		constexpr static rivet::rivet_type_id type_id = 0x38bba08;

		constexpr static std::string_view compatibility_type_name = "compatibility";
		constexpr static rivet::rivet_type_id compatibility_type_id = 0xffcb8104;
		constexpr static std::string_view clipboardType_type_name = "clipboardType";
		constexpr static rivet::rivet_type_id clipboardType_type_id = 0xb1ad53f6;
		constexpr static std::string_view CommentNodes_type_name = "CommentNodes";
		constexpr static rivet::rivet_type_id CommentNodes_type_id = 0x6461c08f;
		constexpr static std::string_view InputNodes_type_name = "InputNodes";
		constexpr static rivet::rivet_type_id InputNodes_type_id = 0x1982bfed;
		constexpr static std::string_view EffectNodes_type_name = "EffectNodes";
		constexpr static rivet::rivet_type_id EffectNodes_type_id = 0x9c603cc1;
		constexpr static std::string_view FieldOpNodes_type_name = "FieldOpNodes";
		constexpr static rivet::rivet_type_id FieldOpNodes_type_id = 0x2e2a59cb;
		constexpr static std::string_view SelectorNodes_type_name = "SelectorNodes";
		constexpr static rivet::rivet_type_id SelectorNodes_type_id = 0x86fc0ba6;
		constexpr static std::string_view GraphId_type_name = "GraphId";
		constexpr static rivet::rivet_type_id GraphId_type_id = 0x76b05713;
		constexpr static std::string_view Events_type_name = "Events";
		constexpr static rivet::rivet_type_id Events_type_id = 0x6dff192d;
		constexpr static std::string_view Filters_type_name = "Filters";
		constexpr static rivet::rivet_type_id Filters_type_id = 0x799d04b5;
		constexpr static std::string_view Responses_type_name = "Responses";
		constexpr static rivet::rivet_type_id Responses_type_id = 0xb3a20098; 

		explicit ConduitDefClipboard() = default;
		explicit ConduitDefClipboard([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view compatibility {};
		std::string_view clipboardType {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMCommentNodeDef>> CommentNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMInputNodeDef>> InputNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMEffectNodeDef>> EffectNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMFieldOpNodeDef>> FieldOpNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMSelectorNodeDef>> SelectorNodes {};
		uint64_t GraphId {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMEventDef>> Events {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMFilterDef>> Filters {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ECMResponseDef>> Responses {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ConduitDefClipboard>;
	};
} // namespace rivet::ddl::generated

// clang-format on
