// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x5f40dd5c.hpp>
#include <rivet/ddl/generated/ResponseEvent.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED WWiseResponseEvent : ResponseEvent {
		constexpr static std::string_view type_name = "WWiseResponseEvent";
		constexpr static rivet::rivet_type_id type_id = 0xc910fe13;

		constexpr static std::string_view WwiseType_type_name = "WwiseType";
		constexpr static rivet::rivet_type_id WwiseType_type_id = 0x99411458;
		constexpr static std::string_view WwiseActionName_type_name = "WwiseActionName";
		constexpr static rivet::rivet_type_id WwiseActionName_type_id = 0x1fa19bb5;
		constexpr static std::string_view GroupName_type_name = "GroupName";
		constexpr static rivet::rivet_type_id GroupName_type_id = 0xb215bfb7;
		constexpr static std::string_view Value_type_name = "Value";
		constexpr static rivet::rivet_type_id Value_type_id = 0x42494f5;
		constexpr static std::string_view SwitchValue_type_name = "SwitchValue";
		constexpr static rivet::rivet_type_id SwitchValue_type_id = 0x9b9b9d3; 

		explicit WWiseResponseEvent() = default;
		explicit WWiseResponseEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x5f40dd5c WwiseType {};
		std::string_view WwiseActionName {};
		std::string_view GroupName {};
		float Value {};
		std::string_view SwitchValue {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WWiseResponseEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
