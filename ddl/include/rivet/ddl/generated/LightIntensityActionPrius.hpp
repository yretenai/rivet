// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xd73d2720.hpp>
#include <rivet/ddl/generated/bitsets/xa080f5e3.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LightIntensityActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LightIntensityActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0xb82f648e;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view Flags_type_name = "Flags";
		constexpr static rivet::rivet_type_id Flags_type_id = 0x12568d7b;
		constexpr static std::string_view CurveType_type_name = "CurveType";
		constexpr static rivet::rivet_type_id CurveType_type_id = 0x1f5c59df;
		constexpr static std::string_view StartIntensity_type_name = "StartIntensity";
		constexpr static rivet::rivet_type_id StartIntensity_type_id = 0x8f1c8c7;
		constexpr static std::string_view EndIntensity_type_name = "EndIntensity";
		constexpr static rivet::rivet_type_id EndIntensity_type_id = 0x5f4ed25c;
		constexpr static std::string_view Duration_type_name = "Duration";
		constexpr static rivet::rivet_type_id Duration_type_id = 0x7c5e3db0;
		constexpr static std::string_view MaxTimes_type_name = "MaxTimes";
		constexpr static rivet::rivet_type_id MaxTimes_type_id = 0x449291b; 

		explicit LightIntensityActionPrius() = default;
		explicit LightIntensityActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		rivet::ddl::generated::xa080f5e3 Flags {};
		rivet::ddl::generated::xd73d2720 CurveType {};
		float StartIntensity {};
		float EndIntensity {};
		float Duration {};
		int32_t MaxTimes {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LightIntensityActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
