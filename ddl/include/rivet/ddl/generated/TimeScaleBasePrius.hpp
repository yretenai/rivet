// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x7d9b794e.hpp>
#include <rivet/ddl/generated/enums/xd4d128f9.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TimeScaleBasePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TimeScaleBasePrius";
		constexpr static rivet::rivet_type_id type_id = 0x2c29528c;

		constexpr static std::string_view Channel_type_name = "Channel";
		constexpr static rivet::rivet_type_id Channel_type_id = 0xa313ed7f;
		constexpr static std::string_view Context_type_name = "Context";
		constexpr static rivet::rivet_type_id Context_type_id = 0xe3b7e646;
		constexpr static std::string_view TimeScale_type_name = "TimeScale";
		constexpr static rivet::rivet_type_id TimeScale_type_id = 0x5fe2ecba;
		constexpr static std::string_view Duration_type_name = "Duration";
		constexpr static rivet::rivet_type_id Duration_type_id = 0x7c5e3db0;
		constexpr static std::string_view DurationUnits_type_name = "DurationUnits";
		constexpr static rivet::rivet_type_id DurationUnits_type_id = 0x197db178; 

		explicit TimeScaleBasePrius() = default;
		explicit TimeScaleBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xd4d128f9 Channel {};
		std::string_view Context {};
		float TimeScale {};
		float Duration {};
		rivet::ddl::generated::x7d9b794e DurationUnits {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TimeScaleBasePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
