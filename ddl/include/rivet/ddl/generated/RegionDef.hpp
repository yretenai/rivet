// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xcafc543d.hpp> 

namespace rivet::ddl::generated {
	struct DDLStructInst;
	struct RegionBookmark;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED RegionDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RegionDef";
		constexpr static rivet::rivet_type_id type_id = 0x4813fce8;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view InstallGroup_type_name = "InstallGroup";
		constexpr static rivet::rivet_type_id InstallGroup_type_id = 0xfa716c43;
		constexpr static std::string_view ParentAsset_type_name = "ParentAsset";
		constexpr static rivet::rivet_type_id ParentAsset_type_id = 0x2e74622c;
		constexpr static std::string_view Bookmarks_type_name = "Bookmarks";
		constexpr static rivet::rivet_type_id Bookmarks_type_id = 0xfa2f5e4c;
		constexpr static std::string_view Aux_type_name = "Aux";
		constexpr static rivet::rivet_type_id Aux_type_id = 0x90972571;
		constexpr static std::string_view GameData_type_name = "GameData";
		constexpr static rivet::rivet_type_id GameData_type_id = 0xa1f1eb12; 

		explicit RegionDef() = default;
		explicit RegionDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		rivet::ddl::generated::xcafc543d Type {};
		int32_t InstallGroup {};
		std::string_view ParentAsset {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RegionBookmark>> Bookmarks {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> Aux {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DDLStructInst>> GameData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RegionDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
