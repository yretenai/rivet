// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/UDSHintLinks.hpp>
#include <rivet/ddl/generated/UDSHintStatus.hpp> 

#include <rivet/ddl/generated/UDSHint.hpp>

namespace rivet::ddl::generated {
	UDSHint::UDSHint([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		objectId = serialized->get_string(objectId_type_id);
		name = serialized->get_strings(name_type_id);
		Description = serialized->get_strings(Description_type_id);
		activeStatus = serialized->unwrap_into<rivet::ddl::generated::UDSHintStatus>(activeStatus_type_id);
		links = serialized->unwrap_into<rivet::ddl::generated::UDSHintLinks>(links_type_id); 
	}

	[[nodiscard]] auto
	UDSHint::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	UDSHint::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UDSHint> {
		if (incoming_type_id == UDSHint::type_id) {
			return std::make_shared<UDSHint>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
