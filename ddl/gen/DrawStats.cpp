// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/DrawStats.hpp>

namespace rivet::ddl::generated {
	DrawStats::DrawStats([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		TextureCount = serialized->get_uint32(TextureCount_type_id);
		MaterialCount = serialized->get_uint32(MaterialCount_type_id);
		IndexCount = serialized->get_uint32(IndexCount_type_id);
		IndexedVertexCount = serialized->get_uint32(IndexedVertexCount_type_id);
		UnindexedVertexCount = serialized->get_uint32(UnindexedVertexCount_type_id);
		InstanceCount = serialized->get_uint32(InstanceCount_type_id);
		DrawCount = serialized->get_uint32(DrawCount_type_id); 
	}

	[[nodiscard]] auto
	DrawStats::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	DrawStats::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DrawStats> {
		if (incoming_type_id == DrawStats::type_id) {
			return std::make_shared<DrawStats>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
