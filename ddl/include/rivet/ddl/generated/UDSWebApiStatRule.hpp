// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct UDSWebApiStatAction;
	struct UDSWebApiStatCondition; 

	struct RIVET_DDL_SHARED UDSWebApiStatRule : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UDSWebApiStatRule";
		constexpr static rivet::rivet_type_id type_id = 0x3a9f0a7e;

		constexpr static std::string_view ruleId_type_name = "ruleId";
		constexpr static rivet::rivet_type_id ruleId_type_id = 0xab4639fa;
		constexpr static std::string_view condition_type_name = "condition";
		constexpr static rivet::rivet_type_id condition_type_id = 0xbdda95ec;
		constexpr static std::string_view action_type_name = "action";
		constexpr static rivet::rivet_type_id action_type_id = 0x7e18c7c3; 

		explicit UDSWebApiStatRule() = default;
		explicit UDSWebApiStatRule([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t ruleId {};
		std::shared_ptr<rivet::ddl::generated::UDSWebApiStatCondition> condition {};
		std::shared_ptr<rivet::ddl::generated::UDSWebApiStatAction> action {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UDSWebApiStatRule>;
	};
} // namespace rivet::ddl::generated

// clang-format on
