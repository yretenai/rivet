// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x3fc1e4d4.hpp>
#include <rivet/ddl/generated/enums/x4eda4f54.hpp>
#include <rivet/ddl/generated/enums/x74a6ffcc.hpp> 

namespace rivet::ddl::generated {
	struct BezierCurveDimensionDef; 

	struct RIVET_DDL_SHARED BezierCurveDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BezierCurveDef";
		constexpr static rivet::rivet_type_id type_id = 0x1ff9b560;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view DimensionOrder_type_name = "DimensionOrder";
		constexpr static rivet::rivet_type_id DimensionOrder_type_id = 0x7ce4669f;
		constexpr static std::string_view Dimensions_type_name = "Dimensions";
		constexpr static rivet::rivet_type_id Dimensions_type_id = 0x394bd59c;
		constexpr static std::string_view ExtrapolateModeIn_type_name = "ExtrapolateModeIn";
		constexpr static rivet::rivet_type_id ExtrapolateModeIn_type_id = 0xb0cececa;
		constexpr static std::string_view ExtrapolateModeOut_type_name = "ExtrapolateModeOut";
		constexpr static rivet::rivet_type_id ExtrapolateModeOut_type_id = 0x81d2e76d;
		constexpr static std::string_view RotationOrder_type_name = "RotationOrder";
		constexpr static rivet::rivet_type_id RotationOrder_type_id = 0x1f9ce070;
		constexpr static std::string_view Flags_type_name = "Flags";
		constexpr static rivet::rivet_type_id Flags_type_id = 0x12568d7b; 

		explicit BezierCurveDef() = default;
		explicit BezierCurveDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		std::string_view Name {};
		std::vector<uint64_t> DimensionOrder {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BezierCurveDimensionDef>> Dimensions {};
		rivet::ddl::generated::x74a6ffcc ExtrapolateModeIn {};
		rivet::ddl::generated::x74a6ffcc ExtrapolateModeOut {};
		rivet::ddl::generated::x4eda4f54 RotationOrder {};
		rivet::ddl::generated::x3fc1e4d4 Flags {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BezierCurveDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
