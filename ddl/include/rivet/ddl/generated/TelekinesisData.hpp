// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TelekinesisData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TelekinesisData";
		constexpr static rivet::rivet_type_id type_id = 0x46ffb209;

		constexpr static std::string_view IntroAnim_type_name = "IntroAnim";
		constexpr static rivet::rivet_type_id IntroAnim_type_id = 0xf227a2c3;
		constexpr static std::string_view HoldLoopAnim_type_name = "HoldLoopAnim";
		constexpr static rivet::rivet_type_id HoldLoopAnim_type_id = 0x7a1c1026;
		constexpr static std::string_view ThrowAnim_type_name = "ThrowAnim";
		constexpr static rivet::rivet_type_id ThrowAnim_type_id = 0xe5cff65e;
		constexpr static std::string_view ThrowWithOutroAnim_type_name = "ThrowWithOutroAnim";
		constexpr static rivet::rivet_type_id ThrowWithOutroAnim_type_id = 0x5a90cf4f;
		constexpr static std::string_view HoldLocator_type_name = "HoldLocator";
		constexpr static rivet::rivet_type_id HoldLocator_type_id = 0xeac18ccb;
		constexpr static std::string_view NumTelekinesisObjectsWanted_type_name = "NumTelekinesisObjectsWanted";
		constexpr static rivet::rivet_type_id NumTelekinesisObjectsWanted_type_id = 0x17c4ad9b;
		constexpr static std::string_view TimeToGatherAndOrbit_type_name = "TimeToGatherAndOrbit";
		constexpr static rivet::rivet_type_id TimeToGatherAndOrbit_type_id = 0x48c1167a;
		constexpr static std::string_view TimeToFirstObjectThrow_type_name = "TimeToFirstObjectThrow";
		constexpr static rivet::rivet_type_id TimeToFirstObjectThrow_type_id = 0xca96580f;
		constexpr static std::string_view TimeBetweenThrows_type_name = "TimeBetweenThrows";
		constexpr static rivet::rivet_type_id TimeBetweenThrows_type_id = 0xb2aae801;
		constexpr static std::string_view StunOnAllOrbitDestroyed_type_name = "StunOnAllOrbitDestroyed";
		constexpr static rivet::rivet_type_id StunOnAllOrbitDestroyed_type_id = 0xcafb7007;
		constexpr static std::string_view ShotConfig_type_name = "ShotConfig";
		constexpr static rivet::rivet_type_id ShotConfig_type_id = 0xb171e6ae;
		constexpr static std::string_view Conduit_type_name = "Conduit";
		constexpr static rivet::rivet_type_id Conduit_type_id = 0xfc5131b9;
		constexpr static std::string_view PortalInShot_type_name = "PortalInShot";
		constexpr static rivet::rivet_type_id PortalInShot_type_id = 0x74bd363c;
		constexpr static std::string_view PortalActorAsset_type_name = "PortalActorAsset";
		constexpr static rivet::rivet_type_id PortalActorAsset_type_id = 0xfec29c86;
		constexpr static std::string_view PortalSpawnedShotActor_type_name = "PortalSpawnedShotActor";
		constexpr static rivet::rivet_type_id PortalSpawnedShotActor_type_id = 0xd2a1d436; 

		explicit TelekinesisData() = default;
		explicit TelekinesisData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view IntroAnim {};
		std::string_view HoldLoopAnim {};
		std::string_view ThrowAnim {};
		std::string_view ThrowWithOutroAnim {};
		std::string_view HoldLocator {};
		int32_t NumTelekinesisObjectsWanted {};
		float TimeToGatherAndOrbit {};
		float TimeToFirstObjectThrow {};
		float TimeBetweenThrows {};
		bool StunOnAllOrbitDestroyed {};
		std::string_view ShotConfig {};
		std::string_view Conduit {};
		bool PortalInShot {};
		std::string_view PortalActorAsset {};
		std::string_view PortalSpawnedShotActor {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TelekinesisData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
