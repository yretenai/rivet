// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/NodalShotEffectNodeBaseDef.hpp> 

namespace rivet::ddl::generated {
	struct BounceScaleData;
	struct OutputPlugUInt;
	struct InputPlugUInt; 

	struct RIVET_DDL_SHARED BounceEffectNodeDef : NodalShotEffectNodeBaseDef {
		constexpr static std::string_view type_name = "BounceEffectNodeDef";
		constexpr static rivet::rivet_type_id type_id = 0x729f1050;

		constexpr static std::string_view BounceCountIn_type_name = "BounceCountIn";
		constexpr static rivet::rivet_type_id BounceCountIn_type_id = 0x719a4cc;
		constexpr static std::string_view BounceCountOut_type_name = "BounceCountOut";
		constexpr static rivet::rivet_type_id BounceCountOut_type_id = 0x68069532;
		constexpr static std::string_view EnvironmentHit_type_name = "EnvironmentHit";
		constexpr static rivet::rivet_type_id EnvironmentHit_type_id = 0xc6b86ea1;
		constexpr static std::string_view ActorHit_type_name = "ActorHit";
		constexpr static rivet::rivet_type_id ActorHit_type_id = 0xee05eaab; 

		explicit BounceEffectNodeDef() = default;
		explicit BounceEffectNodeDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::InputPlugUInt> BounceCountIn {};
		std::shared_ptr<rivet::ddl::generated::OutputPlugUInt> BounceCountOut {};
		std::shared_ptr<rivet::ddl::generated::BounceScaleData> EnvironmentHit {};
		std::shared_ptr<rivet::ddl::generated::BounceScaleData> ActorHit {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BounceEffectNodeDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
