// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/BonusDisplayDef.hpp>

namespace rivet::ddl::generated {
	BonusDisplayDef::BonusDisplayDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Bonus = serialized->get_enum<rivet::ddl::generated::BonusType>(Bonus_type_id, rivet::ddl::generated::BonusType_values);
		BonusDescLocTag = serialized->get_string(BonusDescLocTag_type_id);
		InsertNumber = serialized->get_bool(InsertNumber_type_id);
		StringLocTag = serialized->get_string(StringLocTag_type_id);
		InsertString = serialized->get_bool(InsertString_type_id); 
	}

	[[nodiscard]] auto
	BonusDisplayDef::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	BonusDisplayDef::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BonusDisplayDef> {
		if (incoming_type_id == BonusDisplayDef::type_id) {
			return std::make_shared<BonusDisplayDef>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
