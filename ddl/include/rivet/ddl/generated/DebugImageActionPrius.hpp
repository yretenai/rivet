// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xf8706507.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector4;
	struct DDLVector2; 

	struct RIVET_DDL_SHARED DebugImageActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DebugImageActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x76aaf45f;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view Image_type_name = "Image";
		constexpr static rivet::rivet_type_id Image_type_id = 0xdc6ec89e;
		constexpr static std::string_view Size_type_name = "Size";
		constexpr static rivet::rivet_type_id Size_type_id = 0xc750e4da;
		constexpr static std::string_view UVMin_type_name = "UVMin";
		constexpr static rivet::rivet_type_id UVMin_type_id = 0x6652863f;
		constexpr static std::string_view UVMax_type_name = "UVMax";
		constexpr static rivet::rivet_type_id UVMax_type_id = 0x5a5fb966;
		constexpr static std::string_view TintColor_type_name = "TintColor";
		constexpr static rivet::rivet_type_id TintColor_type_id = 0x2c904a74;
		constexpr static std::string_view Position_type_name = "Position";
		constexpr static rivet::rivet_type_id Position_type_id = 0xbc2d5985;
		constexpr static std::string_view Position3D_type_name = "Position3D";
		constexpr static rivet::rivet_type_id Position3D_type_id = 0xd199d9ca;
		constexpr static std::string_view CenterOnPoint_type_name = "CenterOnPoint";
		constexpr static rivet::rivet_type_id CenterOnPoint_type_id = 0x6bf83c2;
		constexpr static std::string_view ShowWindowBG_type_name = "ShowWindowBG";
		constexpr static rivet::rivet_type_id ShowWindowBG_type_id = 0xb23b070d;
		constexpr static std::string_view RenderLayer_type_name = "RenderLayer";
		constexpr static rivet::rivet_type_id RenderLayer_type_id = 0xcb8706cd; 

		explicit DebugImageActionPrius() = default;
		explicit DebugImageActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view Image {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Size {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UVMin {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UVMax {};
		std::shared_ptr<rivet::ddl::generated::DDLVector4> TintColor {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Position {};
		bool Position3D {};
		bool CenterOnPoint {};
		bool ShowWindowBG {};
		rivet::ddl::generated::xf8706507 RenderLayer {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugImageActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
