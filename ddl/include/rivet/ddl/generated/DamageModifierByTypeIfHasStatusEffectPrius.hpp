// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/DamageTypes.hpp>
#include <rivet/ddl/generated/DamageModifierIncomingPrius.hpp> 

namespace rivet::ddl::generated {
	struct DamageModStatusEffectData; 

	struct RIVET_DDL_SHARED DamageModifierByTypeIfHasStatusEffectPrius : DamageModifierIncomingPrius {
		constexpr static std::string_view type_name = "DamageModifierByTypeIfHasStatusEffectPrius";
		constexpr static rivet::rivet_type_id type_id = 0x56d819f9;

		constexpr static std::string_view ValidDamageTypes_type_name = "ValidDamageTypes";
		constexpr static rivet::rivet_type_id ValidDamageTypes_type_id = 0x7fb913f8;
		constexpr static std::string_view StatusMultiplier_type_name = "StatusMultiplier";
		constexpr static rivet::rivet_type_id StatusMultiplier_type_id = 0x6fc67017;
		constexpr static std::string_view DamageMultiplier_type_name = "DamageMultiplier";
		constexpr static rivet::rivet_type_id DamageMultiplier_type_id = 0x26406e37;
		constexpr static std::string_view StatusEffects_type_name = "StatusEffects";
		constexpr static rivet::rivet_type_id StatusEffects_type_id = 0xfcb6a86d; 

		explicit DamageModifierByTypeIfHasStatusEffectPrius() = default;
		explicit DamageModifierByTypeIfHasStatusEffectPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<rivet::ddl::generated::DamageTypes> ValidDamageTypes {};
		float StatusMultiplier {};
		float DamageMultiplier {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DamageModStatusEffectData>> StatusEffects {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageModifierByTypeIfHasStatusEffectPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
