// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/VisualEffectDef.hpp> 

#include <rivet/ddl/generated/VisualEffectInstEngineItem.hpp>

namespace rivet::ddl::generated {
	VisualEffectInstEngineItem::VisualEffectInstEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		AssetPath = serialized->get_string(AssetPath_type_id);
		Azimuth = serialized->get_double(Azimuth_type_id);
		DisplayDebugStats = serialized->get_bool(DisplayDebugStats_type_id);
		DisplayLightShells = serialized->get_bool(DisplayLightShells_type_id);
		DisplayOverdraw = serialized->get_bool(DisplayOverdraw_type_id);
		Inclination = serialized->get_double(Inclination_type_id);
		Loop = serialized->get_bool(Loop_type_id);
		MotionType = serialized->get_enum<rivet::ddl::generated::xa8fd47b8>(MotionType_type_id, rivet::ddl::generated::xa8fd47b8_values);
		State = serialized->get_enum<rivet::ddl::generated::x62abe5d0>(State_type_id, rivet::ddl::generated::x62abe5d0_values);
		VisualEffectDef = serialized->unwrap_into<rivet::ddl::generated::VisualEffectDef>(VisualEffectDef_type_id);
		VisualEffectEditor = serialized->get_bool(VisualEffectEditor_type_id);
		Counter = serialized->get_int32(Counter_type_id);
		Speed = serialized->get_float(Speed_type_id);
		Radius = serialized->get_float(Radius_type_id);
		DynamicScaling = serialized->get_float(DynamicScaling_type_id);
		FpsSimulation = serialized->get_float(FpsSimulation_type_id); 
	}

	[[nodiscard]] auto
	VisualEffectInstEngineItem::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	VisualEffectInstEngineItem::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VisualEffectInstEngineItem> {
		if (incoming_type_id == VisualEffectInstEngineItem::type_id) {
			return std::make_shared<VisualEffectInstEngineItem>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
