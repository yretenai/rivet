// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED FinaleNefWeakspotDamagedStage3Event : EventBase {
		constexpr static std::string_view type_name = "FinaleNefWeakspotDamagedStage3Event";
		constexpr static rivet::rivet_type_id type_id = 0x1711792e;

		constexpr static std::string_view WeakspotName_type_name = "WeakspotName";
		constexpr static rivet::rivet_type_id WeakspotName_type_id = 0xcd0b6f25;
		constexpr static std::string_view Is_Triggered_Once_type_name = "Is_Triggered_Once";
		constexpr static rivet::rivet_type_id Is_Triggered_Once_type_id = 0x5f1b476e;
		constexpr static std::string_view Triggered_On_Main_Mech_type_name = "Triggered_On_Main_Mech";
		constexpr static rivet::rivet_type_id Triggered_On_Main_Mech_type_id = 0x9a4b223e;
		constexpr static std::string_view Is_Claw_Weakspot_type_name = "Is_Claw_Weakspot";
		constexpr static rivet::rivet_type_id Is_Claw_Weakspot_type_id = 0x195ddf71; 

		explicit FinaleNefWeakspotDamagedStage3Event() = default;
		explicit FinaleNefWeakspotDamagedStage3Event([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view WeakspotName {};
		bool Is_Triggered_Once {};
		bool Triggered_On_Main_Mech {};
		bool Is_Claw_Weakspot {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FinaleNefWeakspotDamagedStage3Event>;
	};
} // namespace rivet::ddl::generated

// clang-format on
