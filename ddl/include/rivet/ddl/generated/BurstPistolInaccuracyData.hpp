// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BurstPistolInaccuracyData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "BurstPistolInaccuracyData";
		constexpr const static rivet::rivet_type_id type_id = 0xa5e2adfe;

		constexpr const static std::string_view InitialAngle_type_name = "InitialAngle";
		constexpr const static rivet::rivet_type_id InitialAngle_type_id = 0x158e06db;
		constexpr const static std::string_view MinShotsToIncrease_type_name = "MinShotsToIncrease";
		constexpr const static rivet::rivet_type_id MinShotsToIncrease_type_id = 0x3ee300c4;
		constexpr const static std::string_view AngleMax_type_name = "AngleMax";
		constexpr const static rivet::rivet_type_id AngleMax_type_id = 0x475aea60;
		constexpr const static std::string_view IncreaseAnglePerShot_type_name = "IncreaseAnglePerShot";
		constexpr const static rivet::rivet_type_id IncreaseAnglePerShot_type_id = 0xea409f8b;
		constexpr const static std::string_view IncreaseAngleMax_type_name = "IncreaseAngleMax";
		constexpr const static rivet::rivet_type_id IncreaseAngleMax_type_id = 0xc7fe4fd8;
		constexpr const static std::string_view DecreaseDelay_type_name = "DecreaseDelay";
		constexpr const static rivet::rivet_type_id DecreaseDelay_type_id = 0x4f49c248;
		constexpr const static std::string_view DecreaseAnglePerSec_type_name = "DecreaseAnglePerSec";
		constexpr const static rivet::rivet_type_id DecreaseAnglePerSec_type_id = 0xe33c63c7; 

		explicit BurstPistolInaccuracyData() = default;
		explicit BurstPistolInaccuracyData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float InitialAngle {};
		uint32_t MinShotsToIncrease {};
		float AngleMax {};
		float IncreaseAnglePerShot {};
		float IncreaseAngleMax {};
		float DecreaseDelay {};
		float DecreaseAnglePerSec {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BurstPistolInaccuracyData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
