// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct PhysicsComponentPrius; 

	struct RIVET_DDL_SHARED BotConfigPhysics : ConfigBase {
		constexpr const static std::string_view type_name = "BotConfigPhysics";
		constexpr const static rivet::rivet_type_id type_id = 0xd2f3fa18;

		constexpr const static std::string_view CollisionEnabled_type_name = "CollisionEnabled";
		constexpr const static rivet::rivet_type_id CollisionEnabled_type_id = 0x22b79e74;
		constexpr const static std::string_view DisableCharacterMoveCollision_type_name = "DisableCharacterMoveCollision";
		constexpr const static rivet::rivet_type_id DisableCharacterMoveCollision_type_id = 0x68ac22ee;
		constexpr const static std::string_view PhysicsComponentPrius_type_name = "PhysicsComponentPrius";
		constexpr const static rivet::rivet_type_id PhysicsComponentPrius_type_id = 0xcc30dca6; 

		explicit BotConfigPhysics() = default;
		explicit BotConfigPhysics([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool CollisionEnabled {};
		bool DisableCharacterMoveCollision {};
		std::shared_ptr<rivet::ddl::generated::PhysicsComponentPrius> PhysicsComponentPrius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotConfigPhysics>;
	};
} // namespace rivet::ddl::generated

// clang-format on
