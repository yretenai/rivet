// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr const static std::string_view x3ebe0bf2_type_name = "x3ebe0bf2";
	constexpr const static rivet::rivet_type_id x3ebe0bf2_type_id = 0x3ebe0bf2;

	constexpr const static std::array<std::tuple<std::string_view, uint64_t>, 4> x3ebe0bf2_values = {
		std::make_tuple("kNull", 0x0),
		std::make_tuple("kInvulnerable", 0x1),
		std::make_tuple("kInvincible", 0x2),
		std::make_tuple("kInjuryAllow", 0x4), 
	};

	enum class x3ebe0bf2 : uint64_t {
		Null = 0x0,
		Invulnerable = 0x1,
		Invincible = 0x2,
		InjuryAllow = 0x4, 
	};
} // namespace rivet::ddl::generated

// clang-format on
