// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RecoveryLedgeLowerClearanceParams; 

	struct RIVET_DDL_SHARED RecoveryLedgeModeParams : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "RecoveryLedgeModeParams";
		constexpr const static rivet::rivet_type_id type_id = 0xdab7ecc4;

		constexpr const static std::string_view QueryRadius_type_name = "QueryRadius";
		constexpr const static rivet::rivet_type_id QueryRadius_type_id = 0xc5f42ee9;
		constexpr const static std::string_view RightHandQueryRadius_type_name = "RightHandQueryRadius";
		constexpr const static rivet::rivet_type_id RightHandQueryRadius_type_id = 0x6e19dbf2;
		constexpr const static std::string_view DistanceBetweenHands_type_name = "DistanceBetweenHands";
		constexpr const static rivet::rivet_type_id DistanceBetweenHands_type_id = 0x97322319;
		constexpr const static std::string_view MinDistanceBetweenHands_type_name = "MinDistanceBetweenHands";
		constexpr const static rivet::rivet_type_id MinDistanceBetweenHands_type_id = 0x2a38cddc;
		constexpr const static std::string_view RightHandQueryDepth_type_name = "RightHandQueryDepth";
		constexpr const static rivet::rivet_type_id RightHandQueryDepth_type_id = 0x955aebf8;
		constexpr const static std::string_view LedgeOffsetTolerance_type_name = "LedgeOffsetTolerance";
		constexpr const static rivet::rivet_type_id LedgeOffsetTolerance_type_id = 0xb76b347f;
		constexpr const static std::string_view MaxLedgeSearchHeight_type_name = "MaxLedgeSearchHeight";
		constexpr const static rivet::rivet_type_id MaxLedgeSearchHeight_type_id = 0x458df8f3;
		constexpr const static std::string_view MinLedgeSearchHeight_type_name = "MinLedgeSearchHeight";
		constexpr const static rivet::rivet_type_id MinLedgeSearchHeight_type_id = 0x6cf305eb;
		constexpr const static std::string_view MaxHeightAboveLastGround_type_name = "MaxHeightAboveLastGround";
		constexpr const static rivet::rivet_type_id MaxHeightAboveLastGround_type_id = 0xbec7a5cc;
		constexpr const static std::string_view MaxUpperGroundSlope_type_name = "MaxUpperGroundSlope";
		constexpr const static rivet::rivet_type_id MaxUpperGroundSlope_type_id = 0x6317a6fa;
		constexpr const static std::string_view GroundClearance_type_name = "GroundClearance";
		constexpr const static rivet::rivet_type_id GroundClearance_type_id = 0x276531b;
		constexpr const static std::string_view FluidClearance_type_name = "FluidClearance";
		constexpr const static rivet::rivet_type_id FluidClearance_type_id = 0x677d88d1;
		constexpr const static std::string_view WallCheckVerticalOffset_type_name = "WallCheckVerticalOffset";
		constexpr const static rivet::rivet_type_id WallCheckVerticalOffset_type_id = 0x6a2d4f0f;
		constexpr const static std::string_view UpperClearanceHorizDist_type_name = "UpperClearanceHorizDist";
		constexpr const static rivet::rivet_type_id UpperClearanceHorizDist_type_id = 0x7b005bd8;
		constexpr const static std::string_view ClearanceQueryRadius_type_name = "ClearanceQueryRadius";
		constexpr const static rivet::rivet_type_id ClearanceQueryRadius_type_id = 0x966bf187; 

		explicit RecoveryLedgeModeParams() = default;
		explicit RecoveryLedgeModeParams([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float QueryRadius {};
		float RightHandQueryRadius {};
		float DistanceBetweenHands {};
		float MinDistanceBetweenHands {};
		float RightHandQueryDepth {};
		float LedgeOffsetTolerance {};
		float MaxLedgeSearchHeight {};
		float MinLedgeSearchHeight {};
		float MaxHeightAboveLastGround {};
		float MaxUpperGroundSlope {};
		std::shared_ptr<rivet::ddl::generated::RecoveryLedgeLowerClearanceParams> GroundClearance {};
		std::shared_ptr<rivet::ddl::generated::RecoveryLedgeLowerClearanceParams> FluidClearance {};
		float WallCheckVerticalOffset {};
		float UpperClearanceHorizDist {};
		float ClearanceQueryRadius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RecoveryLedgeModeParams>;
	};
} // namespace rivet::ddl::generated

// clang-format on
