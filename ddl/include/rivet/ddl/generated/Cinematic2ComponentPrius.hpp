// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED Cinematic2ComponentPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Cinematic2ComponentPrius";
		constexpr static rivet::rivet_type_id type_id = 0xb7fb62e9;

		constexpr static std::string_view CinematicAsset_type_name = "CinematicAsset";
		constexpr static rivet::rivet_type_id CinematicAsset_type_id = 0xc8c00481;
		constexpr static std::string_view CinematicAssetId_type_name = "CinematicAssetId";
		constexpr static rivet::rivet_type_id CinematicAssetId_type_id = 0x4e91f4de;
		constexpr static std::string_view PlayBackShot_type_name = "PlayBackShot";
		constexpr static rivet::rivet_type_id PlayBackShot_type_id = 0xa87020d4;
		constexpr static std::string_view Autoload_type_name = "Autoload";
		constexpr static rivet::rivet_type_id Autoload_type_id = 0xb2a1a9fa;
		constexpr static std::string_view ScriptDriven_type_name = "ScriptDriven";
		constexpr static rivet::rivet_type_id ScriptDriven_type_id = 0x27bbde23;
		constexpr static std::string_view CodeDriven_type_name = "CodeDriven";
		constexpr static rivet::rivet_type_id CodeDriven_type_id = 0xbf908e49;
		constexpr static std::string_view IsWorldSpaceCinematic_type_name = "IsWorldSpaceCinematic";
		constexpr static rivet::rivet_type_id IsWorldSpaceCinematic_type_id = 0x54f823bf;
		constexpr static std::string_view AddSelectiveUpdateActor_type_name = "AddSelectiveUpdateActor";
		constexpr static rivet::rivet_type_id AddSelectiveUpdateActor_type_id = 0x1a6c3d6f;
		constexpr static std::string_view EditorSpawned_type_name = "EditorSpawned";
		constexpr static rivet::rivet_type_id EditorSpawned_type_id = 0xeaa82b50;
		constexpr static std::string_view ViewerSpawned_type_name = "ViewerSpawned";
		constexpr static rivet::rivet_type_id ViewerSpawned_type_id = 0x9c943f0; 

		explicit Cinematic2ComponentPrius() = default;
		explicit Cinematic2ComponentPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view CinematicAsset {};
		uint64_t CinematicAssetId {};
		std::string_view PlayBackShot {};
		bool Autoload {};
		bool ScriptDriven {};
		bool CodeDriven {};
		bool IsWorldSpaceCinematic {};
		bool AddSelectiveUpdateActor {};
		bool EditorSpawned {};
		bool ViewerSpawned {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2ComponentPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
