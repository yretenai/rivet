// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct FarmOpenRegionData;
	struct FarmInstanceRegionData; 

	struct RIVET_DDL_SHARED FarmLightingConfig2 : ConfigBase {
		constexpr const static std::string_view type_name = "FarmLightingConfig2";
		constexpr const static rivet::rivet_type_id type_id = 0xff813e44;

		constexpr const static std::string_view OpenRegions_type_name = "OpenRegions";
		constexpr const static rivet::rivet_type_id OpenRegions_type_id = 0xf01dee22;
		constexpr const static std::string_view InstanceRegions_type_name = "InstanceRegions";
		constexpr const static rivet::rivet_type_id InstanceRegions_type_id = 0xd467001a;
		constexpr const static std::string_view DefaultRegion_type_name = "DefaultRegion";
		constexpr const static rivet::rivet_type_id DefaultRegion_type_id = 0x54a9ae47;
		constexpr const static std::string_view DefaultLevelFile_type_name = "DefaultLevelFile";
		constexpr const static rivet::rivet_type_id DefaultLevelFile_type_id = 0xa982630a; 

		explicit FarmLightingConfig2() = default;
		explicit FarmLightingConfig2([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::FarmOpenRegionData>> OpenRegions {};
		std::vector<std::shared_ptr<rivet::ddl::generated::FarmInstanceRegionData>> InstanceRegions {};
		std::string_view DefaultRegion {};
		std::string_view DefaultLevelFile {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FarmLightingConfig2>;
	};
} // namespace rivet::ddl::generated

// clang-format on
