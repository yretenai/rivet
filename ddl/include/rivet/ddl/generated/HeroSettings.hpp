// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/HeroTypes.hpp> 

namespace rivet::ddl::generated {
	struct HeroWallRunSettings;
	struct HeroHoverbootSettings;
	struct HeroRecoveryLedgeSettings;
	struct HeroSprintSettings;
	struct HeroRunSpeedSettings;
	struct HeroAltControlSettings; 

	struct RIVET_DDL_SHARED HeroSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroSettings";
		constexpr static rivet::rivet_type_id type_id = 0xbff1d849;

		constexpr static std::string_view OverrideDefaultItemLoadout_type_name = "OverrideDefaultItemLoadout";
		constexpr static rivet::rivet_type_id OverrideDefaultItemLoadout_type_id = 0x4508a560;
		constexpr static std::string_view DebugSwapHeroType_type_name = "DebugSwapHeroType";
		constexpr static rivet::rivet_type_id DebugSwapHeroType_type_id = 0x1565b327;
		constexpr static std::string_view DebugSpawnHeroType_type_name = "DebugSpawnHeroType";
		constexpr static rivet::rivet_type_id DebugSpawnHeroType_type_id = 0x3ce7abbd;
		constexpr static std::string_view AltControlSettings_type_name = "AltControlSettings";
		constexpr static rivet::rivet_type_id AltControlSettings_type_id = 0xb516432b;
		constexpr static std::string_view RunSpeedSettings_type_name = "RunSpeedSettings";
		constexpr static rivet::rivet_type_id RunSpeedSettings_type_id = 0x79317a36;
		constexpr static std::string_view SprintSettings_type_name = "SprintSettings";
		constexpr static rivet::rivet_type_id SprintSettings_type_id = 0x57816e4f;
		constexpr static std::string_view RecoveryLedgeSettings_type_name = "RecoveryLedgeSettings";
		constexpr static rivet::rivet_type_id RecoveryLedgeSettings_type_id = 0x88a25138;
		constexpr static std::string_view HoverbootSettings_type_name = "HoverbootSettings";
		constexpr static rivet::rivet_type_id HoverbootSettings_type_id = 0xa7114034;
		constexpr static std::string_view WallRunSettings_type_name = "WallRunSettings";
		constexpr static rivet::rivet_type_id WallRunSettings_type_id = 0x3ca4475a;
		constexpr static std::string_view XpGainMultiplier_type_name = "XpGainMultiplier";
		constexpr static rivet::rivet_type_id XpGainMultiplier_type_id = 0x4f9f31df;
		constexpr static std::string_view EnablePlatformingShadowDecal_type_name = "EnablePlatformingShadowDecal";
		constexpr static rivet::rivet_type_id EnablePlatformingShadowDecal_type_id = 0x7740f899;
		constexpr static std::string_view EnablePhaseDash_type_name = "EnablePhaseDash";
		constexpr static rivet::rivet_type_id EnablePhaseDash_type_id = 0x22a5f75; 

		explicit HeroSettings() = default;
		explicit HeroSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view OverrideDefaultItemLoadout {};
		rivet::ddl::generated::HeroTypes DebugSwapHeroType {};
		rivet::ddl::generated::HeroTypes DebugSpawnHeroType {};
		std::shared_ptr<rivet::ddl::generated::HeroAltControlSettings> AltControlSettings {};
		std::shared_ptr<rivet::ddl::generated::HeroRunSpeedSettings> RunSpeedSettings {};
		std::shared_ptr<rivet::ddl::generated::HeroSprintSettings> SprintSettings {};
		std::shared_ptr<rivet::ddl::generated::HeroRecoveryLedgeSettings> RecoveryLedgeSettings {};
		std::shared_ptr<rivet::ddl::generated::HeroHoverbootSettings> HoverbootSettings {};
		std::shared_ptr<rivet::ddl::generated::HeroWallRunSettings> WallRunSettings {};
		float XpGainMultiplier {};
		bool EnablePlatformingShadowDecal {};
		bool EnablePhaseDash {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
