// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct EngineControlModelInstanceData;
	struct EngineControlCamera;
	struct EngineControlAssetOverride;
	struct EngineControlActorData; 

	struct RIVET_DDL_SHARED EngineControlSessionData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "EngineControlSessionData";
		constexpr static rivet::rivet_type_id type_id = 0xbb476265;

		constexpr static std::string_view Active_type_name = "Active";
		constexpr static rivet::rivet_type_id Active_type_id = 0x7566b265;
		constexpr static std::string_view Actors_type_name = "Actors";
		constexpr static rivet::rivet_type_id Actors_type_id = 0xe153be82;
		constexpr static std::string_view AssetOverrides_type_name = "AssetOverrides";
		constexpr static rivet::rivet_type_id AssetOverrides_type_id = 0xb7eef61d;
		constexpr static std::string_view Atmosphere_type_name = "Atmosphere";
		constexpr static rivet::rivet_type_id Atmosphere_type_id = 0x79fd859a;
		constexpr static std::string_view BrightnessScale_type_name = "BrightnessScale";
		constexpr static rivet::rivet_type_id BrightnessScale_type_id = 0x42a1ebf3;
		constexpr static std::string_view Cameras_type_name = "Cameras";
		constexpr static rivet::rivet_type_id Cameras_type_id = 0x6ab54452;
		constexpr static std::string_view ModelInstances_type_name = "ModelInstances";
		constexpr static rivet::rivet_type_id ModelInstances_type_id = 0x4e9467ed; 

		explicit EngineControlSessionData() = default;
		explicit EngineControlSessionData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Active {};
		std::vector<std::shared_ptr<rivet::ddl::generated::EngineControlActorData>> Actors {};
		std::vector<std::shared_ptr<rivet::ddl::generated::EngineControlAssetOverride>> AssetOverrides {};
		std::string_view Atmosphere {};
		float BrightnessScale {};
		std::vector<std::shared_ptr<rivet::ddl::generated::EngineControlCamera>> Cameras {};
		std::vector<std::shared_ptr<rivet::ddl::generated::EngineControlModelInstanceData>> ModelInstances {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<EngineControlSessionData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
