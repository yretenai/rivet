// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/PickupVanityPrius.hpp>
#include <rivet/ddl/generated/PickupTrapItemPrius.hpp>
#include <rivet/ddl/generated/PickupRuinTokenPrius.hpp>
#include <rivet/ddl/generated/PickupShipHealthPrius.hpp>
#include <rivet/ddl/generated/PickupArachnodroidPrius.hpp>
#include <rivet/ddl/generated/PickupTradingCardPrius.hpp>
#include <rivet/ddl/generated/PickupShipMissilePrius.hpp>
#include <rivet/ddl/generated/PickupHealthPrius.hpp>
#include <rivet/ddl/generated/PickupAmmoItemPrius.hpp>
#include <rivet/ddl/generated/PickupBataliaTurretHealthPrius.hpp>
#include <rivet/ddl/generated/PickupGoldBoltPrius.hpp>
#include <rivet/ddl/generated/PickupBataliaTurretEnergyPrius.hpp>
#include <rivet/ddl/generated/PickupRYNOPlanPrius.hpp>
#include <rivet/ddl/generated/PickupZerpStonePrius.hpp>
#include <rivet/ddl/generated/HeroPickupAnimOverrideData.hpp>
#include <rivet/ddl/generated/PickupWeaponItemPrius.hpp> 

#include <rivet/ddl/generated/GamePickupItemPrius.hpp>

namespace rivet::ddl::generated {
	GamePickupItemPrius::GamePickupItemPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): PickupItemPrius(serialized) {
		CameraActor = serialized->get_uint64(CameraActor_type_id, 0);
		OptSceneLocVol = serialized->get_uint64(OptSceneLocVol_type_id, 0);
		PickupAnimOverrides = serialized->unwrap_into_many<rivet::ddl::generated::HeroPickupAnimOverrideData>(PickupAnimOverrides_type_id);
		Boots = serialized->get_enum<rivet::ddl::generated::x28fee0a4>(Boots_type_id, rivet::ddl::generated::x28fee0a4_values, rivet::ddl::generated::x28fee0a4::Default); 
	}

	[[nodiscard]] auto
	GamePickupItemPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	GamePickupItemPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GamePickupItemPrius> {
		if (incoming_type_id == GamePickupItemPrius::type_id) {
			return std::make_shared<GamePickupItemPrius>(serialized);
		}

		auto PickupShipHealthPrius_ptr = PickupShipHealthPrius::from_substruct(incoming_type_id, serialized);
		if (PickupShipHealthPrius_ptr != nullptr) {
			return PickupShipHealthPrius_ptr;
		}

		auto PickupTradingCardPrius_ptr = PickupTradingCardPrius::from_substruct(incoming_type_id, serialized);
		if (PickupTradingCardPrius_ptr != nullptr) {
			return PickupTradingCardPrius_ptr;
		}

		auto PickupShipMissilePrius_ptr = PickupShipMissilePrius::from_substruct(incoming_type_id, serialized);
		if (PickupShipMissilePrius_ptr != nullptr) {
			return PickupShipMissilePrius_ptr;
		}

		auto PickupBataliaTurretHealthPrius_ptr = PickupBataliaTurretHealthPrius::from_substruct(incoming_type_id, serialized);
		if (PickupBataliaTurretHealthPrius_ptr != nullptr) {
			return PickupBataliaTurretHealthPrius_ptr;
		}

		auto PickupGoldBoltPrius_ptr = PickupGoldBoltPrius::from_substruct(incoming_type_id, serialized);
		if (PickupGoldBoltPrius_ptr != nullptr) {
			return PickupGoldBoltPrius_ptr;
		}

		auto PickupRYNOPlanPrius_ptr = PickupRYNOPlanPrius::from_substruct(incoming_type_id, serialized);
		if (PickupRYNOPlanPrius_ptr != nullptr) {
			return PickupRYNOPlanPrius_ptr;
		}

		auto PickupArachnodroidPrius_ptr = PickupArachnodroidPrius::from_substruct(incoming_type_id, serialized);
		if (PickupArachnodroidPrius_ptr != nullptr) {
			return PickupArachnodroidPrius_ptr;
		}

		auto PickupAmmoItemPrius_ptr = PickupAmmoItemPrius::from_substruct(incoming_type_id, serialized);
		if (PickupAmmoItemPrius_ptr != nullptr) {
			return PickupAmmoItemPrius_ptr;
		}

		auto PickupHealthPrius_ptr = PickupHealthPrius::from_substruct(incoming_type_id, serialized);
		if (PickupHealthPrius_ptr != nullptr) {
			return PickupHealthPrius_ptr;
		}

		auto PickupWeaponItemPrius_ptr = PickupWeaponItemPrius::from_substruct(incoming_type_id, serialized);
		if (PickupWeaponItemPrius_ptr != nullptr) {
			return PickupWeaponItemPrius_ptr;
		}

		auto PickupBataliaTurretEnergyPrius_ptr = PickupBataliaTurretEnergyPrius::from_substruct(incoming_type_id, serialized);
		if (PickupBataliaTurretEnergyPrius_ptr != nullptr) {
			return PickupBataliaTurretEnergyPrius_ptr;
		}

		auto PickupZerpStonePrius_ptr = PickupZerpStonePrius::from_substruct(incoming_type_id, serialized);
		if (PickupZerpStonePrius_ptr != nullptr) {
			return PickupZerpStonePrius_ptr;
		}

		auto PickupRuinTokenPrius_ptr = PickupRuinTokenPrius::from_substruct(incoming_type_id, serialized);
		if (PickupRuinTokenPrius_ptr != nullptr) {
			return PickupRuinTokenPrius_ptr;
		}

		auto PickupTrapItemPrius_ptr = PickupTrapItemPrius::from_substruct(incoming_type_id, serialized);
		if (PickupTrapItemPrius_ptr != nullptr) {
			return PickupTrapItemPrius_ptr;
		}

		auto PickupVanityPrius_ptr = PickupVanityPrius::from_substruct(incoming_type_id, serialized);
		if (PickupVanityPrius_ptr != nullptr) {
			return PickupVanityPrius_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
