// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/UI_CinematicInstanceRegion.hpp>

namespace rivet::ddl::generated {
	UI_CinematicInstanceRegion::UI_CinematicInstanceRegion([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		ChildZoneAssetPaths = serialized->get_strings(ChildZoneAssetPaths_type_id);
		ParentLevelAssetPath = serialized->get_string(ParentLevelAssetPath_type_id, {});
		RegionAssetPath = serialized->get_string(RegionAssetPath_type_id, {}); 
	}

	[[nodiscard]] auto
	UI_CinematicInstanceRegion::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	UI_CinematicInstanceRegion::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UI_CinematicInstanceRegion> {
		if (incoming_type_id == UI_CinematicInstanceRegion::type_id) {
			return std::make_shared<UI_CinematicInstanceRegion>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
