// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED NavObstaclePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "NavObstaclePrius";
		constexpr static rivet::rivet_type_id type_id = 0xbfda7ad9;

		constexpr static std::string_view CapsuleRadius_type_name = "CapsuleRadius";
		constexpr static rivet::rivet_type_id CapsuleRadius_type_id = 0xba73c46b;
		constexpr static std::string_view CapsuleHeight_type_name = "CapsuleHeight";
		constexpr static rivet::rivet_type_id CapsuleHeight_type_id = 0x74424f3e;
		constexpr static std::string_view SetLarge_type_name = "SetLarge";
		constexpr static rivet::rivet_type_id SetLarge_type_id = 0xaa492958;
		constexpr static std::string_view UseBoundingSpherePosition_type_name = "UseBoundingSpherePosition";
		constexpr static rivet::rivet_type_id UseBoundingSpherePosition_type_id = 0xb292af07; 

		explicit NavObstaclePrius() = default;
		explicit NavObstaclePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float CapsuleRadius {};
		float CapsuleHeight {};
		bool SetLarge {};
		bool UseBoundingSpherePosition {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<NavObstaclePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
