// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x84053194.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RewardRenderModeData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "RewardRenderModeData";
		constexpr const static rivet::rivet_type_id type_id = 0x8dc86b7;

		constexpr const static std::string_view Name_type_name = "Name";
		constexpr const static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr const static std::string_view Pack_type_name = "Pack";
		constexpr const static rivet::rivet_type_id Pack_type_id = 0xa74e9e93;
		constexpr const static std::string_view EnableIn3DUI_type_name = "EnableIn3DUI";
		constexpr const static rivet::rivet_type_id EnableIn3DUI_type_id = 0x4be6f8ed; 

		explicit RewardRenderModeData() = default;
		explicit RewardRenderModeData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Name {};
		rivet::ddl::generated::x84053194 Pack {};
		bool EnableIn3DUI {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RewardRenderModeData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
