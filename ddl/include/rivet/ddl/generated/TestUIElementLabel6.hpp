// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct TestAnimalSubstruct2; 

	struct RIVET_DDL_SHARED TestUIElementLabel6 : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TestUIElementLabel6";
		constexpr static rivet::rivet_type_id type_id = 0xf7b12c70;

		constexpr static std::string_view Pets1_type_name = "Pets1";
		constexpr static rivet::rivet_type_id Pets1_type_id = 0x2c6f36a1;
		constexpr static std::string_view Pets2_type_name = "Pets2";
		constexpr static rivet::rivet_type_id Pets2_type_id = 0xb566671b;
		constexpr static std::string_view Pets5_type_name = "Pets5";
		constexpr static rivet::rivet_type_id Pets5_type_id = 0x2b02f2b8;
		constexpr static std::string_view Pets7_type_name = "Pets7";
		constexpr static rivet::rivet_type_id Pets7_type_id = 0xc50c9394;
		constexpr static std::string_view Pets9_type_name = "Pets9";
		constexpr static rivet::rivet_type_id Pets9_type_id = 0x22b4be93;
		constexpr static std::string_view Pets10_type_name = "Pets10";
		constexpr static rivet::rivet_type_id Pets10_type_id = 0x8724cce4;
		constexpr static std::string_view Pets11_type_name = "Pets11";
		constexpr static rivet::rivet_type_id Pets11_type_id = 0xf023fc72; 

		explicit TestUIElementLabel6() = default;
		explicit TestUIElementLabel6([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets1 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets2 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets5 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets7 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets9 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets10 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TestAnimalSubstruct2>> Pets11 {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TestUIElementLabel6>;
	};
} // namespace rivet::ddl::generated

// clang-format on
