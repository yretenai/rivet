// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HazardTurretTargeting : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HazardTurretTargeting";
		constexpr static rivet::rivet_type_id type_id = 0xa52ec325;

		constexpr static std::string_view FOVAngle_type_name = "FOVAngle";
		constexpr static rivet::rivet_type_id FOVAngle_type_id = 0xe651b84f;
		constexpr static std::string_view Range_type_name = "Range";
		constexpr static rivet::rivet_type_id Range_type_id = 0x8ad49688;
		constexpr static std::string_view WarningTime_type_name = "WarningTime";
		constexpr static rivet::rivet_type_id WarningTime_type_id = 0xfd73b5f5;
		constexpr static std::string_view CooldownTime_type_name = "CooldownTime";
		constexpr static rivet::rivet_type_id CooldownTime_type_id = 0x499881db;
		constexpr static std::string_view TurnSpeed_type_name = "TurnSpeed";
		constexpr static rivet::rivet_type_id TurnSpeed_type_id = 0x6cc70f48; 

		explicit HazardTurretTargeting() = default;
		explicit HazardTurretTargeting([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float FOVAngle {};
		float Range {};
		float WarningTime {};
		float CooldownTime {};
		float TurnSpeed {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HazardTurretTargeting>;
	};
} // namespace rivet::ddl::generated

// clang-format on
