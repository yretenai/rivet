// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x464e86be.hpp> 

namespace rivet::ddl::generated {
	struct NavMeshObstructionShapeBase; 

	struct RIVET_DDL_SHARED NavMeshObstructionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "NavMeshObstructionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x9d8aadf8;

		constexpr static std::string_view EnableOnLoad_type_name = "EnableOnLoad";
		constexpr static rivet::rivet_type_id EnableOnLoad_type_id = 0x640eadb9;
		constexpr static std::string_view Shape_type_name = "Shape";
		constexpr static rivet::rivet_type_id Shape_type_id = 0xc4633319;
		constexpr static std::string_view Mode_type_name = "Mode";
		constexpr static rivet::rivet_type_id Mode_type_id = 0xa75a871b;
		constexpr static std::string_view CheckStationary_type_name = "CheckStationary";
		constexpr static rivet::rivet_type_id CheckStationary_type_id = 0x6eb51d6c;
		constexpr static std::string_view RotationLocator_type_name = "RotationLocator";
		constexpr static rivet::rivet_type_id RotationLocator_type_id = 0x6434df47; 

		explicit NavMeshObstructionPrius() = default;
		explicit NavMeshObstructionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool EnableOnLoad {};
		std::shared_ptr<rivet::ddl::generated::NavMeshObstructionShapeBase> Shape {};
		rivet::ddl::generated::x464e86be Mode {};
		bool CheckStationary {};
		std::string_view RotationLocator {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<NavMeshObstructionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
