// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ScriptActionVarPlug;
	struct ScriptActionInputPlug; 

	struct RIVET_DDL_SHARED ScriptActionNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ScriptActionNode";
		constexpr static rivet::rivet_type_id type_id = 0x19833458;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view XPos_type_name = "XPos";
		constexpr static rivet::rivet_type_id XPos_type_id = 0xf88aee81;
		constexpr static std::string_view YPos_type_name = "YPos";
		constexpr static rivet::rivet_type_id YPos_type_id = 0x403689e4;
		constexpr static std::string_view DefName_type_name = "DefName";
		constexpr static rivet::rivet_type_id DefName_type_id = 0x7261c690;
		constexpr static std::string_view Collapsed_type_name = "Collapsed";
		constexpr static rivet::rivet_type_id Collapsed_type_id = 0xf07e7faf;
		constexpr static std::string_view InputPlugs_type_name = "InputPlugs";
		constexpr static rivet::rivet_type_id InputPlugs_type_id = 0xfb359225;
		constexpr static std::string_view VarPlugs_type_name = "VarPlugs";
		constexpr static rivet::rivet_type_id VarPlugs_type_id = 0x665ee1b8;
		constexpr static std::string_view PriusOverrides_type_name = "PriusOverrides";
		constexpr static rivet::rivet_type_id PriusOverrides_type_id = 0x3bc028ad; 

		explicit ScriptActionNode() = default;
		explicit ScriptActionNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		std::string_view Name {};
		int32_t XPos {};
		int32_t YPos {};
		std::string_view DefName {};
		bool Collapsed {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ScriptActionInputPlug>> InputPlugs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ScriptActionVarPlug>> VarPlugs {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> PriusOverrides {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ScriptActionNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
