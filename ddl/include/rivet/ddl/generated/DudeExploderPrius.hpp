// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct GenericChunks;
	struct SpecificChunk; 

	struct RIVET_DDL_SHARED DudeExploderPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DudeExploderPrius";
		constexpr static rivet::rivet_type_id type_id = 0x3f43bd34;

		constexpr static std::string_view ExplodeDelay_type_name = "ExplodeDelay";
		constexpr static rivet::rivet_type_id ExplodeDelay_type_id = 0x9b27bde3;
		constexpr static std::string_view ExplodeDelayMin_type_name = "ExplodeDelayMin";
		constexpr static rivet::rivet_type_id ExplodeDelayMin_type_id = 0x39b289de;
		constexpr static std::string_view HideDelay_type_name = "HideDelay";
		constexpr static rivet::rivet_type_id HideDelay_type_id = 0xde52bd13;
		constexpr static std::string_view AlwaysExplodeOnDeath_type_name = "AlwaysExplodeOnDeath";
		constexpr static rivet::rivet_type_id AlwaysExplodeOnDeath_type_id = 0xa24877a2;
		constexpr static std::string_view MinSpeed_type_name = "MinSpeed";
		constexpr static rivet::rivet_type_id MinSpeed_type_id = 0xf0d89680;
		constexpr static std::string_view MaxSpeed_type_name = "MaxSpeed";
		constexpr static rivet::rivet_type_id MaxSpeed_type_id = 0x16b83961;
		constexpr static std::string_view MaxSpecificChunks_type_name = "MaxSpecificChunks";
		constexpr static rivet::rivet_type_id MaxSpecificChunks_type_id = 0x216409e5;
		constexpr static std::string_view MaxTotalChunks_type_name = "MaxTotalChunks";
		constexpr static rivet::rivet_type_id MaxTotalChunks_type_id = 0x2d5706d6;
		constexpr static std::string_view ChunkLifetime_type_name = "ChunkLifetime";
		constexpr static rivet::rivet_type_id ChunkLifetime_type_id = 0x92b450cd;
		constexpr static std::string_view SpecificChunks_type_name = "SpecificChunks";
		constexpr static rivet::rivet_type_id SpecificChunks_type_id = 0xd08cd304;
		constexpr static std::string_view GenericChunks_type_name = "GenericChunks";
		constexpr static rivet::rivet_type_id GenericChunks_type_id = 0x1c9c7798; 

		explicit DudeExploderPrius() = default;
		explicit DudeExploderPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float ExplodeDelay {};
		float ExplodeDelayMin {};
		float HideDelay {};
		bool AlwaysExplodeOnDeath {};
		float MinSpeed {};
		float MaxSpeed {};
		int32_t MaxSpecificChunks {};
		int32_t MaxTotalChunks {};
		float ChunkLifetime {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SpecificChunk>> SpecificChunks {};
		std::shared_ptr<rivet::ddl::generated::GenericChunks> GenericChunks {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DudeExploderPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
