// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x81ba9424.hpp>
#include <rivet/ddl/generated/enums/x29c933e2.hpp> 

namespace rivet::ddl::generated {
	struct Cinematic2AttachmentDef;
	struct DDLVector3; 

	struct RIVET_DDL_SHARED Cinematic2WindActionDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Cinematic2WindActionDef";
		constexpr static rivet::rivet_type_id type_id = 0x68a9a9e1;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Time_type_name = "Time";
		constexpr static rivet::rivet_type_id Time_type_id = 0x5f0458f5;
		constexpr static std::string_view DurationType_type_name = "DurationType";
		constexpr static rivet::rivet_type_id DurationType_type_id = 0x41e2529f;
		constexpr static std::string_view Duration_type_name = "Duration";
		constexpr static rivet::rivet_type_id Duration_type_id = 0x7c5e3db0;
		constexpr static std::string_view Attack_type_name = "Attack";
		constexpr static rivet::rivet_type_id Attack_type_id = 0x79b8635c;
		constexpr static std::string_view Decay_type_name = "Decay";
		constexpr static rivet::rivet_type_id Decay_type_id = 0xa0950b67;
		constexpr static std::string_view Speed_type_name = "Speed";
		constexpr static rivet::rivet_type_id Speed_type_id = 0x16753237;
		constexpr static std::string_view Drag_type_name = "Drag";
		constexpr static rivet::rivet_type_id Drag_type_id = 0x5dd56ddb;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view Height_type_name = "Height";
		constexpr static rivet::rivet_type_id Height_type_id = 0xcb35ab68;
		constexpr static std::string_view RadialFalloff_type_name = "RadialFalloff";
		constexpr static rivet::rivet_type_id RadialFalloff_type_id = 0x454d6db6;
		constexpr static std::string_view HeightFalloff_type_name = "HeightFalloff";
		constexpr static rivet::rivet_type_id HeightFalloff_type_id = 0x1eb37744;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view OffsetPos_type_name = "OffsetPos";
		constexpr static rivet::rivet_type_id OffsetPos_type_id = 0x6620dcf3;
		constexpr static std::string_view OffsetRot_type_name = "OffsetRot";
		constexpr static rivet::rivet_type_id OffsetRot_type_id = 0xfbc09d3e;
		constexpr static std::string_view AttachToPoint_type_name = "AttachToPoint";
		constexpr static rivet::rivet_type_id AttachToPoint_type_id = 0x4c640e01;
		constexpr static std::string_view AttachmentPoint_type_name = "AttachmentPoint";
		constexpr static rivet::rivet_type_id AttachmentPoint_type_id = 0xd0d96889; 

		explicit Cinematic2WindActionDef() = default;
		explicit Cinematic2WindActionDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		float Time {};
		rivet::ddl::generated::x29c933e2 DurationType {};
		float Duration {};
		float Attack {};
		float Decay {};
		float Speed {};
		float Drag {};
		float Radius {};
		float Height {};
		float RadialFalloff {};
		float HeightFalloff {};
		rivet::ddl::generated::x81ba9424 Type {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> OffsetPos {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> OffsetRot {};
		bool AttachToPoint {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2AttachmentDef> AttachmentPoint {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2WindActionDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
