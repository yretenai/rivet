// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AtmosphereBlenderPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AtmosphereBlenderPrius";
		constexpr static rivet::rivet_type_id type_id = 0xf2b7a21a;

		constexpr static std::string_view StartActive_type_name = "StartActive";
		constexpr static rivet::rivet_type_id StartActive_type_id = 0x3e035e82;
		constexpr static std::string_view SourceAtmosphere_type_name = "SourceAtmosphere";
		constexpr static rivet::rivet_type_id SourceAtmosphere_type_id = 0x899c1160;
		constexpr static std::string_view DestinationAtmosphere_type_name = "DestinationAtmosphere";
		constexpr static rivet::rivet_type_id DestinationAtmosphere_type_id = 0x68ab6808;
		constexpr static std::string_view BlendFieldCompletePercent_type_name = "BlendFieldCompletePercent";
		constexpr static rivet::rivet_type_id BlendFieldCompletePercent_type_id = 0x75edc1a7;
		constexpr static std::string_view ForceSourceAtmosphere_type_name = "ForceSourceAtmosphere";
		constexpr static rivet::rivet_type_id ForceSourceAtmosphere_type_id = 0xabc65a3b; 

		explicit AtmosphereBlenderPrius() = default;
		explicit AtmosphereBlenderPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool StartActive {};
		std::string_view SourceAtmosphere {};
		std::string_view DestinationAtmosphere {};
		float BlendFieldCompletePercent {};
		bool ForceSourceAtmosphere {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AtmosphereBlenderPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
