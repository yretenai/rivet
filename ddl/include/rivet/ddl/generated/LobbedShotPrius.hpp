// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BasicBulletPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LobbedShotPrius : BasicBulletPrius {
		constexpr const static std::string_view type_name = "LobbedShotPrius";
		constexpr const static rivet::rivet_type_id type_id = 0xda084860;

		constexpr const static std::string_view DealDamageOnFirstImpact_type_name = "DealDamageOnFirstImpact";
		constexpr const static rivet::rivet_type_id DealDamageOnFirstImpact_type_id = 0x14271b94;
		constexpr const static std::string_view DealDamageOnAllImpacts_type_name = "DealDamageOnAllImpacts";
		constexpr const static rivet::rivet_type_id DealDamageOnAllImpacts_type_id = 0x1d72811e;
		constexpr const static std::string_view SendHitEventsOnFirstImpact_type_name = "SendHitEventsOnFirstImpact";
		constexpr const static rivet::rivet_type_id SendHitEventsOnFirstImpact_type_id = 0x2fdd4dd1;
		constexpr const static std::string_view SendHitEventsOnAllImpacts_type_name = "SendHitEventsOnAllImpacts";
		constexpr const static rivet::rivet_type_id SendHitEventsOnAllImpacts_type_id = 0x89040c3e;
		constexpr const static std::string_view DestroyOnHit_type_name = "DestroyOnHit";
		constexpr const static rivet::rivet_type_id DestroyOnHit_type_id = 0x219f3f53;
		constexpr const static std::string_view DestroyOnLanded_type_name = "DestroyOnLanded";
		constexpr const static rivet::rivet_type_id DestroyOnLanded_type_id = 0xdf5ad352;
		constexpr const static std::string_view DestroyOnHitEnemy_type_name = "DestroyOnHitEnemy";
		constexpr const static rivet::rivet_type_id DestroyOnHitEnemy_type_id = 0x51573572; 

		explicit LobbedShotPrius() = default;
		explicit LobbedShotPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool DealDamageOnFirstImpact {};
		bool DealDamageOnAllImpacts {};
		bool SendHitEventsOnFirstImpact {};
		bool SendHitEventsOnAllImpacts {};
		bool DestroyOnHit {};
		bool DestroyOnLanded {};
		bool DestroyOnHitEnemy {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LobbedShotPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
