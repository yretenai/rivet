// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HazardTurretPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HazardTurretPrius";
		constexpr static rivet::rivet_type_id type_id = 0x8714ccb7;

		constexpr static std::string_view FiringLocatorName_type_name = "FiringLocatorName";
		constexpr static rivet::rivet_type_id FiringLocatorName_type_id = 0xac7ec2b4;
		constexpr static std::string_view CasingEjectLocatorName_type_name = "CasingEjectLocatorName";
		constexpr static rivet::rivet_type_id CasingEjectLocatorName_type_id = 0xa9aa7434;
		constexpr static std::string_view YawJointName_type_name = "YawJointName";
		constexpr static rivet::rivet_type_id YawJointName_type_id = 0x39d7862a;
		constexpr static std::string_view PitchJointName_type_name = "PitchJointName";
		constexpr static rivet::rivet_type_id PitchJointName_type_id = 0x7100f11f;
		constexpr static std::string_view StartOn_type_name = "StartOn";
		constexpr static rivet::rivet_type_id StartOn_type_id = 0x3ac2d0d4;
		constexpr static std::string_view SlerpRotation_type_name = "SlerpRotation";
		constexpr static rivet::rivet_type_id SlerpRotation_type_id = 0x8cdf1c10;
		constexpr static std::string_view HazardTurretConfig_type_name = "HazardTurretConfig";
		constexpr static rivet::rivet_type_id HazardTurretConfig_type_id = 0xa8fc3a55; 

		explicit HazardTurretPrius() = default;
		explicit HazardTurretPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view FiringLocatorName {};
		std::string_view CasingEjectLocatorName {};
		std::string_view YawJointName {};
		std::string_view PitchJointName {};
		bool StartOn {};
		bool SlerpRotation {};
		std::string_view HazardTurretConfig {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HazardTurretPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
