// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x5753f3c8.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LunaFtpGameBuildConfigFile : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LunaFtpGameBuildConfigFile";
		constexpr static rivet::rivet_type_id type_id = 0xf46259ab;

		constexpr static std::string_view BuildName_type_name = "BuildName";
		constexpr static rivet::rivet_type_id BuildName_type_id = 0x202ea4ca;
		constexpr static std::string_view ProjectId_type_name = "ProjectId";
		constexpr static rivet::rivet_type_id ProjectId_type_id = 0xee6efffb;
		constexpr static std::string_view Branch_type_name = "Branch";
		constexpr static rivet::rivet_type_id Branch_type_id = 0x85fe5578;
		constexpr static std::string_view VersionMajor_type_name = "VersionMajor";
		constexpr static rivet::rivet_type_id VersionMajor_type_id = 0xd34e8692;
		constexpr static std::string_view VersionMinor_type_name = "VersionMinor";
		constexpr static rivet::rivet_type_id VersionMinor_type_id = 0x11f306a1;
		constexpr static std::string_view VersionPatch_type_name = "VersionPatch";
		constexpr static rivet::rivet_type_id VersionPatch_type_id = 0xc51edad;
		constexpr static std::string_view NameTag_type_name = "NameTag";
		constexpr static rivet::rivet_type_id NameTag_type_id = 0x2d78cbbd;
		constexpr static std::string_view CreatedBy_type_name = "CreatedBy";
		constexpr static rivet::rivet_type_id CreatedBy_type_id = 0x51abd94e;
		constexpr static std::string_view CreationDate_type_name = "CreationDate";
		constexpr static rivet::rivet_type_id CreationDate_type_id = 0xff735451;
		constexpr static std::string_view BuildType_type_name = "BuildType";
		constexpr static rivet::rivet_type_id BuildType_type_id = 0xf2d38de5;
		constexpr static std::string_view SyncedToCL_type_name = "SyncedToCL";
		constexpr static rivet::rivet_type_id SyncedToCL_type_id = 0x91acd35a;
		constexpr static std::string_view IsFastBuild_type_name = "IsFastBuild";
		constexpr static rivet::rivet_type_id IsFastBuild_type_id = 0x9605031a;
		constexpr static std::string_view HasDebugInfo_type_name = "HasDebugInfo";
		constexpr static rivet::rivet_type_id HasDebugInfo_type_id = 0x277f4438;
		constexpr static std::string_view IsInSymStore_type_name = "IsInSymStore";
		constexpr static rivet::rivet_type_id IsInSymStore_type_id = 0x72e917ef;
		constexpr static std::string_view Platforms_type_name = "Platforms";
		constexpr static rivet::rivet_type_id Platforms_type_id = 0x957c19ef;
		constexpr static std::string_view PlatformBuildDates_type_name = "PlatformBuildDates";
		constexpr static rivet::rivet_type_id PlatformBuildDates_type_id = 0x615df743;
		constexpr static std::string_view FailedPlatforms_type_name = "FailedPlatforms";
		constexpr static rivet::rivet_type_id FailedPlatforms_type_id = 0x8be65385;
		constexpr static std::string_view CompatibleUpdaterVersion_type_name = "CompatibleUpdaterVersion";
		constexpr static rivet::rivet_type_id CompatibleUpdaterVersion_type_id = 0xffa3e6ed;
		constexpr static std::string_view CompatibleHavokVersion_type_name = "CompatibleHavokVersion";
		constexpr static rivet::rivet_type_id CompatibleHavokVersion_type_id = 0x2da22199;
		constexpr static std::string_view CompatibleWinExtVersion_type_name = "CompatibleWinExtVersion";
		constexpr static rivet::rivet_type_id CompatibleWinExtVersion_type_id = 0x4cd133d3;
		constexpr static std::string_view CompatibleMaya2018Version_type_name = "CompatibleMaya2018Version";
		constexpr static rivet::rivet_type_id CompatibleMaya2018Version_type_id = 0x2c8774b5;
		constexpr static std::string_view CompatibleMaya2020Version_type_name = "CompatibleMaya2020Version";
		constexpr static rivet::rivet_type_id CompatibleMaya2020Version_type_id = 0xc6ef53c5; 

		explicit LunaFtpGameBuildConfigFile() = default;
		explicit LunaFtpGameBuildConfigFile([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view BuildName {};
		std::string_view ProjectId {};
		std::string_view Branch {};
		int32_t VersionMajor {};
		int32_t VersionMinor {};
		int32_t VersionPatch {};
		std::string_view NameTag {};
		std::string_view CreatedBy {};
		std::string_view CreationDate {};
		std::string_view BuildType {};
		std::string_view SyncedToCL {};
		bool IsFastBuild {};
		bool HasDebugInfo {};
		bool IsInSymStore {};
		rivet::ddl::generated::x5753f3c8 Platforms {};
		std::vector<std::string_view> PlatformBuildDates {};
		rivet::ddl::generated::x5753f3c8 FailedPlatforms {};
		std::string_view CompatibleUpdaterVersion {};
		std::string_view CompatibleHavokVersion {};
		std::string_view CompatibleWinExtVersion {};
		std::string_view CompatibleMaya2018Version {};
		std::string_view CompatibleMaya2020Version {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LunaFtpGameBuildConfigFile>;
	};
} // namespace rivet::ddl::generated

// clang-format on
