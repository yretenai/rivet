// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr const static std::string_view xf37a71ae_type_name = "xf37a71ae";
	constexpr const static rivet::rivet_type_id xf37a71ae_type_id = 0xf37a71ae;

	constexpr const static std::array<std::tuple<std::string_view, uint64_t>, 11> xf37a71ae_values = {
		std::make_tuple("kTranslate", 0x1),
		std::make_tuple("kRotate", 0x2),
		std::make_tuple("kScale", 0x4),
		std::make_tuple("kLoop", 0x8),
		std::make_tuple("kRestart", 0x10),
		std::make_tuple("kFullRotateX", 0x20),
		std::make_tuple("kFullRotateY", 0x40),
		std::make_tuple("kFullRotateZ", 0x80),
		std::make_tuple("kStartOn", 0x100),
		std::make_tuple("kSetReverse", 0x200),
		std::make_tuple("kStartFromActor", 0x400), 
	};

	enum class xf37a71ae : uint64_t {
		Translate = 0x1,
		Rotate = 0x2,
		Scale = 0x4,
		Loop = 0x8,
		Restart = 0x10,
		FullRotateX = 0x20,
		FullRotateY = 0x40,
		FullRotateZ = 0x80,
		StartOn = 0x100,
		SetReverse = 0x200,
		StartFromActor = 0x400, 
	};
} // namespace rivet::ddl::generated

// clang-format on
