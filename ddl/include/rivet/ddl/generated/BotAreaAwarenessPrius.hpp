// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/AwarenessBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BotAreaAwarenessPrius : AwarenessBasePrius {
		constexpr static std::string_view type_name = "BotAreaAwarenessPrius";
		constexpr static rivet::rivet_type_id type_id = 0x80c2a448;

		constexpr static std::string_view SourceLocatorName_type_name = "SourceLocatorName";
		constexpr static rivet::rivet_type_id SourceLocatorName_type_id = 0x58c28db;
		constexpr static std::string_view NearbyAlertRange_type_name = "NearbyAlertRange";
		constexpr static rivet::rivet_type_id NearbyAlertRange_type_id = 0x63b1b5d4;
		constexpr static std::string_view NearbyShotAlertRange_type_name = "NearbyShotAlertRange";
		constexpr static rivet::rivet_type_id NearbyShotAlertRange_type_id = 0xac8ad7f;
		constexpr static std::string_view UseRandomConfirmTime_type_name = "UseRandomConfirmTime";
		constexpr static rivet::rivet_type_id UseRandomConfirmTime_type_id = 0x8209aaa8; 

		explicit BotAreaAwarenessPrius() = default;
		explicit BotAreaAwarenessPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view SourceLocatorName {};
		float NearbyAlertRange {};
		float NearbyShotAlertRange {};
		bool UseRandomConfirmTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotAreaAwarenessPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
