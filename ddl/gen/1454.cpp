// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/ProtonSeekerFiringPattern.hpp> 

#include <rivet/ddl/generated/BotComboMoveFinaleProtonSeeker.hpp>

namespace rivet::ddl::generated {
	BotComboMoveFinaleProtonSeeker::BotComboMoveFinaleProtonSeeker([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): BotComboMoveBase(serialized) {
		SpawnedShotConfigTargeted = serialized->get_string(SpawnedShotConfigTargeted_type_id);
		SpawnedShotConfigScatter = serialized->get_string(SpawnedShotConfigScatter_type_id);
		SpawnedShotConfigExplosive = serialized->get_string(SpawnedShotConfigExplosive_type_id);
		PortalActorAsset = serialized->get_string(PortalActorAsset_type_id);
		WeaponActorAsset = serialized->get_string(WeaponActorAsset_type_id);
		WeaponActorId = serialized->get_uint64(WeaponActorId_type_id);
		WeaponActorVol = serialized->get_uint64(WeaponActorVol_type_id);
		WeaponActorEmitLocator = serialized->get_string(WeaponActorEmitLocator_type_id);
		CancelOutOfVolume = serialized->get_bool(CancelOutOfVolume_type_id);
		RemainAfterAttack = serialized->get_bool(RemainAfterAttack_type_id);
		GoThruEachFiringPattern = serialized->get_bool(GoThruEachFiringPattern_type_id);
		FiringPatterns = serialized->unwrap_into_many<rivet::ddl::generated::ProtonSeekerFiringPattern>(FiringPatterns_type_id); 
	}

	auto
	BotComboMoveFinaleProtonSeeker::get_type_id() const noexcept -> rivet::rivet_type_id {
		return type_id;
	}

	[[nodiscard]] auto
	BotComboMoveFinaleProtonSeeker::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	BotComboMoveFinaleProtonSeeker::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotComboMoveFinaleProtonSeeker> {
		if (incoming_type_id == BotComboMoveFinaleProtonSeeker::type_id) {
			return std::make_shared<BotComboMoveFinaleProtonSeeker>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
