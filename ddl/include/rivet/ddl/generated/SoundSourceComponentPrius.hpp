// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct WwiseSwitch;
	struct WwiseSwitchSelectItem; 

	struct RIVET_DDL_SHARED SoundSourceComponentPrius : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "SoundSourceComponentPrius";
		constexpr const static rivet::rivet_type_id type_id = 0x6afd5c14;

		constexpr const static std::string_view Use3dBoom_type_name = "Use3dBoom";
		constexpr const static rivet::rivet_type_id Use3dBoom_type_id = 0x683d2aa1;
		constexpr const static std::string_view UsePropagation2_type_name = "UsePropagation2";
		constexpr const static rivet::rivet_type_id UsePropagation2_type_id = 0x85ed0e0b;
		constexpr const static std::string_view Propagation2UsePortaling_type_name = "Propagation2UsePortaling";
		constexpr const static rivet::rivet_type_id Propagation2UsePortaling_type_id = 0xd1cc1229;
		constexpr const static std::string_view Propagation2UseReverb_type_name = "Propagation2UseReverb";
		constexpr const static rivet::rivet_type_id Propagation2UseReverb_type_id = 0xfc9b6180;
		constexpr const static std::string_view DirectPathPropagation_type_name = "DirectPathPropagation";
		constexpr const static rivet::rivet_type_id DirectPathPropagation_type_id = 0x43a8e3f8;
		constexpr const static std::string_view SourceDependentReverb_type_name = "SourceDependentReverb";
		constexpr const static rivet::rivet_type_id SourceDependentReverb_type_id = 0xcc7b2cb3;
		constexpr const static std::string_view DirectPathSampleAreaScaleX_type_name = "DirectPathSampleAreaScaleX";
		constexpr const static rivet::rivet_type_id DirectPathSampleAreaScaleX_type_id = 0x90731b2;
		constexpr const static std::string_view DirectPathSampleAreaScaleY_type_name = "DirectPathSampleAreaScaleY";
		constexpr const static rivet::rivet_type_id DirectPathSampleAreaScaleY_type_id = 0x7e000124;
		constexpr const static std::string_view DirectPathStickinessIncreasing_type_name = "DirectPathStickinessIncreasing";
		constexpr const static rivet::rivet_type_id DirectPathStickinessIncreasing_type_id = 0x37c10dd1;
		constexpr const static std::string_view DirectPathStickinessDecreasing_type_name = "DirectPathStickinessDecreasing";
		constexpr const static rivet::rivet_type_id DirectPathStickinessDecreasing_type_id = 0x406a18bc;
		constexpr const static std::string_view SwitchGroupsCountMax_type_name = "SwitchGroupsCountMax";
		constexpr const static rivet::rivet_type_id SwitchGroupsCountMax_type_id = 0xe2b0bd65;
		constexpr const static std::string_view SwitchGroupList_type_name = "SwitchGroupList";
		constexpr const static rivet::rivet_type_id SwitchGroupList_type_id = 0xa76c9412;
		constexpr const static std::string_view RandomSelectList_type_name = "RandomSelectList";
		constexpr const static rivet::rivet_type_id RandomSelectList_type_id = 0x1bab6614; 

		explicit SoundSourceComponentPrius() = default;
		explicit SoundSourceComponentPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Use3dBoom {};
		bool UsePropagation2 {};
		bool Propagation2UsePortaling {};
		bool Propagation2UseReverb {};
		bool DirectPathPropagation {};
		bool SourceDependentReverb {};
		float DirectPathSampleAreaScaleX {};
		float DirectPathSampleAreaScaleY {};
		float DirectPathStickinessIncreasing {};
		float DirectPathStickinessDecreasing {};
		uint32_t SwitchGroupsCountMax {};
		std::vector<std::shared_ptr<rivet::ddl::generated::WwiseSwitch>> SwitchGroupList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::WwiseSwitchSelectItem>> RandomSelectList {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SoundSourceComponentPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
