// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ItemPrius.hpp> 

namespace rivet::ddl::generated {
	struct SkinItemModelVariantOverridePrius;
	struct SkinItemConduitOverridePrius;
	struct SkinItemColorOverridePrius;
	struct SkinItemMaterialOverridePrius;
	struct SkinItemTextureOverridePrius;
	struct SkinItemLocatorOverridePrius; 

	struct RIVET_DDL_SHARED SkinItemPrius : ItemPrius {
		constexpr static std::string_view type_name = "SkinItemPrius";
		constexpr static rivet::rivet_type_id type_id = 0x98ec4f93;

		constexpr static std::string_view LocatorOverrideList_type_name = "LocatorOverrideList";
		constexpr static rivet::rivet_type_id LocatorOverrideList_type_id = 0xa6babbde;
		constexpr static std::string_view TextureOverrideList_type_name = "TextureOverrideList";
		constexpr static rivet::rivet_type_id TextureOverrideList_type_id = 0x31be016c;
		constexpr static std::string_view MaterialOverrideList_type_name = "MaterialOverrideList";
		constexpr static rivet::rivet_type_id MaterialOverrideList_type_id = 0xeb47267a;
		constexpr static std::string_view ColorOverrideList_type_name = "ColorOverrideList";
		constexpr static rivet::rivet_type_id ColorOverrideList_type_id = 0x5a9f1a9d;
		constexpr static std::string_view ConduitOverrideList_type_name = "ConduitOverrideList";
		constexpr static rivet::rivet_type_id ConduitOverrideList_type_id = 0x6c1e1c97;
		constexpr static std::string_view ModelVariantOverrideList_type_name = "ModelVariantOverrideList";
		constexpr static rivet::rivet_type_id ModelVariantOverrideList_type_id = 0xdf65d905; 

		explicit SkinItemPrius() = default;
		explicit SkinItemPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemLocatorOverridePrius>> LocatorOverrideList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemTextureOverridePrius>> TextureOverrideList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemMaterialOverridePrius>> MaterialOverrideList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemColorOverridePrius>> ColorOverrideList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemConduitOverridePrius>> ConduitOverrideList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SkinItemModelVariantOverridePrius>> ModelVariantOverrideList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SkinItemPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
