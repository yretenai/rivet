// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED FarmInstanceRegionData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "FarmInstanceRegionData";
		constexpr const static rivet::rivet_type_id type_id = 0x1b0a01cd;

		constexpr const static std::string_view AtmosphereZone_type_name = "AtmosphereZone";
		constexpr const static rivet::rivet_type_id AtmosphereZone_type_id = 0x9c553ee6;
		constexpr const static std::string_view RegionFile_type_name = "RegionFile";
		constexpr const static rivet::rivet_type_id RegionFile_type_id = 0xcabd3504;
		constexpr const static std::string_view LevelFile_type_name = "LevelFile";
		constexpr const static rivet::rivet_type_id LevelFile_type_id = 0xc002f04b;
		constexpr const static std::string_view ExtraZones_type_name = "ExtraZones";
		constexpr const static rivet::rivet_type_id ExtraZones_type_id = 0x56657350; 

		explicit FarmInstanceRegionData() = default;
		explicit FarmInstanceRegionData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view AtmosphereZone {};
		std::string_view RegionFile {};
		std::string_view LevelFile {};
		std::vector<std::string_view> ExtraZones {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FarmInstanceRegionData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
