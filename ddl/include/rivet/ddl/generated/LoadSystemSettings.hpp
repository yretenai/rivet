// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/LoadTimeDisplayMode.hpp>
#include <rivet/ddl/generated/enums/LightingMode.hpp>
#include <rivet/ddl/generated/enums/x45c7d9d6.hpp>
#include <rivet/ddl/generated/enums/xa694530c.hpp>
#include <rivet/ddl/generated/enums/x961f7219.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LoadSystemSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LoadSystemSettings";
		constexpr static rivet::rivet_type_id type_id = 0x4ebed715;

		constexpr static std::string_view DisplayMode_type_name = "DisplayMode";
		constexpr static rivet::rivet_type_id DisplayMode_type_id = 0x231a0bee;
		constexpr static std::string_view LogVerbosity_type_name = "LogVerbosity";
		constexpr static rivet::rivet_type_id LogVerbosity_type_id = 0x85f831ca;
		constexpr static std::string_view DisplayOpenUnitDist_type_name = "DisplayOpenUnitDist";
		constexpr static rivet::rivet_type_id DisplayOpenUnitDist_type_id = 0xe93f3ea3;
		constexpr static std::string_view DisplayOpenUnitInfo_type_name = "DisplayOpenUnitInfo";
		constexpr static rivet::rivet_type_id DisplayOpenUnitInfo_type_id = 0xa3cadf03;
		constexpr static std::string_view DisplayOpenUnitMap_type_name = "DisplayOpenUnitMap";
		constexpr static rivet::rivet_type_id DisplayOpenUnitMap_type_id = 0x29a764f;
		constexpr static std::string_view DisplayOverlayInfo_type_name = "DisplayOverlayInfo";
		constexpr static rivet::rivet_type_id DisplayOverlayInfo_type_id = 0x72dea44d;
		constexpr static std::string_view DisplayAirLockInfo_type_name = "DisplayAirLockInfo";
		constexpr static rivet::rivet_type_id DisplayAirLockInfo_type_id = 0xc8eb44ad;
		constexpr static std::string_view OpenUnitStreamingEnabled_type_name = "OpenUnitStreamingEnabled";
		constexpr static rivet::rivet_type_id OpenUnitStreamingEnabled_type_id = 0xe2bfb81d;
		constexpr static std::string_view OverlayLoadingEnabled_type_name = "OverlayLoadingEnabled";
		constexpr static rivet::rivet_type_id OverlayLoadingEnabled_type_id = 0x54d86e18;
		constexpr static std::string_view DelayStreamingEnabled_type_name = "DelayStreamingEnabled";
		constexpr static rivet::rivet_type_id DelayStreamingEnabled_type_id = 0x172b312f;
		constexpr static std::string_view DelayStreamingPaused_type_name = "DelayStreamingPaused";
		constexpr static rivet::rivet_type_id DelayStreamingPaused_type_id = 0x299eea53;
		constexpr static std::string_view LightingZonesEnabled_type_name = "LightingZonesEnabled";
		constexpr static rivet::rivet_type_id LightingZonesEnabled_type_id = 0x15329d08;
		constexpr static std::string_view DefaultLightingMode_type_name = "DefaultLightingMode";
		constexpr static rivet::rivet_type_id DefaultLightingMode_type_id = 0x95f292ab;
		constexpr static std::string_view DefaultTileRadius_type_name = "DefaultTileRadius";
		constexpr static rivet::rivet_type_id DefaultTileRadius_type_id = 0xe5b4c9be;
		constexpr static std::string_view LargeLoadThresholdBytes_type_name = "LargeLoadThresholdBytes";
		constexpr static rivet::rivet_type_id LargeLoadThresholdBytes_type_id = 0x1ffa8722;
		constexpr static std::string_view InstantiationUrgencyStartDist_type_name = "InstantiationUrgencyStartDist";
		constexpr static rivet::rivet_type_id InstantiationUrgencyStartDist_type_id = 0x149fe0b8;
		constexpr static std::string_view InstantiationUrgencyEndDist_type_name = "InstantiationUrgencyEndDist";
		constexpr static rivet::rivet_type_id InstantiationUrgencyEndDist_type_id = 0x847e97be;
		constexpr static std::string_view WaitOnLightGridsForInitialLoad_type_name = "WaitOnLightGridsForInitialLoad";
		constexpr static rivet::rivet_type_id WaitOnLightGridsForInitialLoad_type_id = 0x76257263;
		constexpr static std::string_view LoadTimeDisplayBudget_type_name = "LoadTimeDisplayBudget";
		constexpr static rivet::rivet_type_id LoadTimeDisplayBudget_type_id = 0xa7c60204;
		constexpr static std::string_view LoadTimeDisplayMode_type_name = "LoadTimeDisplayMode";
		constexpr static rivet::rivet_type_id LoadTimeDisplayMode_type_id = 0x522ab918;
		constexpr static std::string_view DisplayNxStorageStats_type_name = "DisplayNxStorageStats";
		constexpr static rivet::rivet_type_id DisplayNxStorageStats_type_id = 0xa6f8ab9e;
		constexpr static std::string_view ThrottleModeNxStorage_type_name = "ThrottleModeNxStorage";
		constexpr static rivet::rivet_type_id ThrottleModeNxStorage_type_id = 0x46b46b1c; 

		explicit LoadSystemSettings() = default;
		explicit LoadSystemSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x961f7219 DisplayMode {};
		rivet::ddl::generated::xa694530c LogVerbosity {};
		uint32_t DisplayOpenUnitDist {};
		bool DisplayOpenUnitInfo {};
		bool DisplayOpenUnitMap {};
		bool DisplayOverlayInfo {};
		bool DisplayAirLockInfo {};
		bool OpenUnitStreamingEnabled {};
		bool OverlayLoadingEnabled {};
		bool DelayStreamingEnabled {};
		bool DelayStreamingPaused {};
		bool LightingZonesEnabled {};
		rivet::ddl::generated::LightingMode DefaultLightingMode {};
		float DefaultTileRadius {};
		uint32_t LargeLoadThresholdBytes {};
		int32_t InstantiationUrgencyStartDist {};
		int32_t InstantiationUrgencyEndDist {};
		bool WaitOnLightGridsForInitialLoad {};
		float LoadTimeDisplayBudget {};
		rivet::ddl::generated::LoadTimeDisplayMode LoadTimeDisplayMode {};
		bool DisplayNxStorageStats {};
		rivet::ddl::generated::x45c7d9d6 ThrottleModeNxStorage {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LoadSystemSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
