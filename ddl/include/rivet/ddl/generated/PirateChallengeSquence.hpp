// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct PirateChallengeSongElement;
	struct PirateChallengeElement;
	struct PirateChallengeWelcomeElement; 

	struct RIVET_DDL_SHARED PirateChallengeSquence : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PirateChallengeSquence";
		constexpr static rivet::rivet_type_id type_id = 0xff6bd376;

		constexpr static std::string_view Welcome_type_name = "Welcome";
		constexpr static rivet::rivet_type_id Welcome_type_id = 0x3621028b;
		constexpr static std::string_view PostWelcomeDelay_type_name = "PostWelcomeDelay";
		constexpr static rivet::rivet_type_id PostWelcomeDelay_type_id = 0x419f8c41;
		constexpr static std::string_view Explanation_type_name = "Explanation";
		constexpr static rivet::rivet_type_id Explanation_type_id = 0x5f8e2d5;
		constexpr static std::string_view PostExplanationDelay_type_name = "PostExplanationDelay";
		constexpr static rivet::rivet_type_id PostExplanationDelay_type_id = 0xffa0629;
		constexpr static std::string_view Lines_type_name = "Lines";
		constexpr static rivet::rivet_type_id Lines_type_id = 0x56524057;
		constexpr static std::string_view Success_type_name = "Success";
		constexpr static rivet::rivet_type_id Success_type_id = 0x6eeabc8a;
		constexpr static std::string_view Failure_type_name = "Failure";
		constexpr static rivet::rivet_type_id Failure_type_id = 0x207160f9; 

		explicit PirateChallengeSquence() = default;
		explicit PirateChallengeSquence([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::PirateChallengeWelcomeElement>> Welcome {};
		float PostWelcomeDelay {};
		std::shared_ptr<rivet::ddl::generated::PirateChallengeElement> Explanation {};
		float PostExplanationDelay {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PirateChallengeSongElement>> Lines {};
		std::shared_ptr<rivet::ddl::generated::PirateChallengeElement> Success {};
		std::shared_ptr<rivet::ddl::generated::PirateChallengeElement> Failure {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PirateChallengeSquence>;
	};
} // namespace rivet::ddl::generated

// clang-format on
