// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED OscillatingMotionActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "OscillatingMotionActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0xffe2b481;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view UseRealTime_type_name = "UseRealTime";
		constexpr static rivet::rivet_type_id UseRealTime_type_id = 0xdda1dddb;
		constexpr static std::string_view Frequency_type_name = "Frequency";
		constexpr static rivet::rivet_type_id Frequency_type_id = 0xa482271f;
		constexpr static std::string_view StartBlendTime_type_name = "StartBlendTime";
		constexpr static rivet::rivet_type_id StartBlendTime_type_id = 0x9bbb4caf;
		constexpr static std::string_view ChangeBlendTime_type_name = "ChangeBlendTime";
		constexpr static rivet::rivet_type_id ChangeBlendTime_type_id = 0x7ad8375a;
		constexpr static std::string_view StopOnUnload_type_name = "StopOnUnload";
		constexpr static rivet::rivet_type_id StopOnUnload_type_id = 0x200c9c22;
		constexpr static std::string_view BlendOutTime_type_name = "BlendOutTime";
		constexpr static rivet::rivet_type_id BlendOutTime_type_id = 0xda2e044e; 

		explicit OscillatingMotionActionPrius() = default;
		explicit OscillatingMotionActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		bool UseRealTime {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Frequency {};
		float StartBlendTime {};
		float ChangeBlendTime {};
		bool StopOnUnload {};
		float BlendOutTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<OscillatingMotionActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
