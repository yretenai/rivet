// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/FlockablePrius.hpp> 

namespace rivet::ddl::generated {
	struct BirdAnimItem; 

	struct RIVET_DDL_SHARED BirdPrius : FlockablePrius {
		constexpr static std::string_view type_name = "BirdPrius";
		constexpr static rivet::rivet_type_id type_id = 0x1430ef18;

		constexpr static std::string_view MinSpeed_type_name = "MinSpeed";
		constexpr static rivet::rivet_type_id MinSpeed_type_id = 0xf0d89680;
		constexpr static std::string_view MaxSpeed_type_name = "MaxSpeed";
		constexpr static rivet::rivet_type_id MaxSpeed_type_id = 0x16b83961;
		constexpr static std::string_view MinAccel_type_name = "MinAccel";
		constexpr static rivet::rivet_type_id MinAccel_type_id = 0xa2025e93;
		constexpr static std::string_view MaxAccel_type_name = "MaxAccel";
		constexpr static rivet::rivet_type_id MaxAccel_type_id = 0x4462f172;
		constexpr static std::string_view MinScale_type_name = "MinScale";
		constexpr static rivet::rivet_type_id MinScale_type_id = 0x13b84df2;
		constexpr static std::string_view MaxScale_type_name = "MaxScale";
		constexpr static rivet::rivet_type_id MaxScale_type_id = 0xf5d8e213;
		constexpr static std::string_view MinAnimRate_type_name = "MinAnimRate";
		constexpr static rivet::rivet_type_id MinAnimRate_type_id = 0xea35193a;
		constexpr static std::string_view MaxAnimRate_type_name = "MaxAnimRate";
		constexpr static rivet::rivet_type_id MaxAnimRate_type_id = 0x26386235;
		constexpr static std::string_view FlutterRange_type_name = "FlutterRange";
		constexpr static rivet::rivet_type_id FlutterRange_type_id = 0xbbcf3d4f;
		constexpr static std::string_view MaxFlutterRate_type_name = "MaxFlutterRate";
		constexpr static rivet::rivet_type_id MaxFlutterRate_type_id = 0xb3793b07;
		constexpr static std::string_view MinFleeReactionTime_type_name = "MinFleeReactionTime";
		constexpr static rivet::rivet_type_id MinFleeReactionTime_type_id = 0xf0239e50;
		constexpr static std::string_view FleeReactionTime_type_name = "FleeReactionTime";
		constexpr static rivet::rivet_type_id FleeReactionTime_type_id = 0x767416a6;
		constexpr static std::string_view FleeDesperationTime_type_name = "FleeDesperationTime";
		constexpr static rivet::rivet_type_id FleeDesperationTime_type_id = 0x7098631a;
		constexpr static std::string_view FleeFailureTime_type_name = "FleeFailureTime";
		constexpr static rivet::rivet_type_id FleeFailureTime_type_id = 0x812f53df;
		constexpr static std::string_view FleeAngle_type_name = "FleeAngle";
		constexpr static rivet::rivet_type_id FleeAngle_type_id = 0x4a1ca6c3;
		constexpr static std::string_view MinFleeDistance_type_name = "MinFleeDistance";
		constexpr static rivet::rivet_type_id MinFleeDistance_type_id = 0x98fa788c;
		constexpr static std::string_view FleeFadeDelay_type_name = "FleeFadeDelay";
		constexpr static rivet::rivet_type_id FleeFadeDelay_type_id = 0x867e0166;
		constexpr static std::string_view FlyAnims_type_name = "FlyAnims";
		constexpr static rivet::rivet_type_id FlyAnims_type_id = 0x9af85b7;
		constexpr static std::string_view LandedAnims_type_name = "LandedAnims";
		constexpr static rivet::rivet_type_id LandedAnims_type_id = 0xe86865f5;
		constexpr static std::string_view TakeOffAnim_type_name = "TakeOffAnim";
		constexpr static rivet::rivet_type_id TakeOffAnim_type_id = 0x4cf960ed; 

		explicit BirdPrius() = default;
		explicit BirdPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MinSpeed {};
		float MaxSpeed {};
		float MinAccel {};
		float MaxAccel {};
		float MinScale {};
		float MaxScale {};
		float MinAnimRate {};
		float MaxAnimRate {};
		float FlutterRange {};
		float MaxFlutterRate {};
		float MinFleeReactionTime {};
		float FleeReactionTime {};
		float FleeDesperationTime {};
		float FleeFailureTime {};
		float FleeAngle {};
		float MinFleeDistance {};
		float FleeFadeDelay {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BirdAnimItem>> FlyAnims {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BirdAnimItem>> LandedAnims {};
		std::string_view TakeOffAnim {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BirdPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
