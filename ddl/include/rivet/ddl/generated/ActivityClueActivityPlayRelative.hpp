// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ActivityClueActivityPlayRelative : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ActivityClueActivityPlayRelative";
		constexpr static rivet::rivet_type_id type_id = 0xebd51d75;

		constexpr static std::string_view IntroAnim_type_name = "IntroAnim";
		constexpr static rivet::rivet_type_id IntroAnim_type_id = 0xf227a2c3;
		constexpr static std::string_view UseAnim_type_name = "UseAnim";
		constexpr static rivet::rivet_type_id UseAnim_type_id = 0x186fd0e1;
		constexpr static std::string_view OutroAnim_type_name = "OutroAnim";
		constexpr static rivet::rivet_type_id OutroAnim_type_id = 0xa0ecf634;
		constexpr static std::string_view FastOutroAnim_type_name = "FastOutroAnim";
		constexpr static rivet::rivet_type_id FastOutroAnim_type_id = 0xf3676fd6;
		constexpr static std::string_view LoopCount_type_name = "LoopCount";
		constexpr static rivet::rivet_type_id LoopCount_type_id = 0x238ee6b3;
		constexpr static std::string_view UseMayaAnimOffset_type_name = "UseMayaAnimOffset";
		constexpr static rivet::rivet_type_id UseMayaAnimOffset_type_id = 0xb522b2b3;
		constexpr static std::string_view MatchClueHeight_type_name = "MatchClueHeight";
		constexpr static rivet::rivet_type_id MatchClueHeight_type_id = 0x58b2672;
		constexpr static std::string_view RandomUseAnimFrame_type_name = "RandomUseAnimFrame";
		constexpr static rivet::rivet_type_id RandomUseAnimFrame_type_id = 0x5dbe5bc4; 

		explicit ActivityClueActivityPlayRelative() = default;
		explicit ActivityClueActivityPlayRelative([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view IntroAnim {};
		std::string_view UseAnim {};
		std::string_view OutroAnim {};
		std::string_view FastOutroAnim {};
		int32_t LoopCount {};
		bool UseMayaAnimOffset {};
		bool MatchClueHeight {};
		bool RandomUseAnimFrame {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActivityClueActivityPlayRelative>;
	};
} // namespace rivet::ddl::generated

// clang-format on
