// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/SoundEvent.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DialogEvent : SoundEvent {
		constexpr static std::string_view type_name = "DialogEvent";
		constexpr static rivet::rivet_type_id type_id = 0xb3badb74;

		constexpr static std::string_view SeekOffset_type_name = "SeekOffset";
		constexpr static rivet::rivet_type_id SeekOffset_type_id = 0xcde814ba;
		constexpr static std::string_view StartTime_type_name = "StartTime";
		constexpr static rivet::rivet_type_id StartTime_type_id = 0xc5bae2b;
		constexpr static std::string_view TickSubtitlesOnPause_type_name = "TickSubtitlesOnPause";
		constexpr static rivet::rivet_type_id TickSubtitlesOnPause_type_id = 0x400d89e9;
		constexpr static std::string_view IgnoreAnimPerformance_type_name = "IgnoreAnimPerformance";
		constexpr static rivet::rivet_type_id IgnoreAnimPerformance_type_id = 0xb6a05139;
		constexpr static std::string_view PlayOnlyOnAuthority_type_name = "PlayOnlyOnAuthority";
		constexpr static rivet::rivet_type_id PlayOnlyOnAuthority_type_id = 0x68d7984c; 

		explicit DialogEvent() = default;
		explicit DialogEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float SeekOffset {};
		float StartTime {};
		bool TickSubtitlesOnPause {};
		bool IgnoreAnimPerformance {};
		bool PlayOnlyOnAuthority {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DialogEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
