// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x1ea7317b.hpp>
#include <rivet/ddl/generated/enums/x758aa4a7.hpp> 

namespace rivet::ddl::generated {
	struct Prims; 

	struct RIVET_DDL_SHARED Proof2 : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Proof2";
		constexpr static rivet::rivet_type_id type_id = 0xdc34a743;

		constexpr static std::string_view p_type_name = "p";
		constexpr static rivet::rivet_type_id p_type_id = 0x6b86e977;
		constexpr static std::string_view FArr_type_name = "FArr";
		constexpr static rivet::rivet_type_id FArr_type_id = 0xddc35be0;
		constexpr static std::string_view DArr_type_name = "DArr";
		constexpr static rivet::rivet_type_id DArr_type_id = 0x77ca936b;
		constexpr static std::string_view Str_type_name = "Str";
		constexpr static rivet::rivet_type_id Str_type_id = 0x76fb8a30;
		constexpr static std::string_view S_type_name = "S";
		constexpr static rivet::rivet_type_id S_type_id = 0xc9e19805;
		constexpr static std::string_view B_type_name = "B";
		constexpr static rivet::rivet_type_id B_type_id = 0xa351b8f7;
		constexpr static std::string_view PrimArray_type_name = "PrimArray";
		constexpr static rivet::rivet_type_id PrimArray_type_id = 0x7689fd86;
		constexpr static std::string_view PrimFixedArray_type_name = "PrimFixedArray";
		constexpr static rivet::rivet_type_id PrimFixedArray_type_id = 0x6d4aadd2;
		constexpr static std::string_view HM_type_name = "HM";
		constexpr static rivet::rivet_type_id HM_type_id = 0xd1f8e3a0;
		constexpr static std::string_view SHM_type_name = "SHM";
		constexpr static rivet::rivet_type_id SHM_type_id = 0xb36edef2;
		constexpr static std::string_view FHM_type_name = "FHM";
		constexpr static rivet::rivet_type_id FHM_type_id = 0xa983bf69; 

		explicit Proof2() = default;
		explicit Proof2([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::Prims> p {};
		std::vector<int32_t> FArr {};
		std::vector<int32_t> DArr {};
		std::string_view Str {};
		rivet::ddl::generated::x758aa4a7 S {};
		rivet::ddl::generated::x1ea7317b B {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Prims>> PrimArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Prims>> PrimFixedArray {};
		std::vector<int32_t> HM {};
		std::vector<std::string_view> SHM {};
		std::vector<int32_t> FHM {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Proof2>;
	};
} // namespace rivet::ddl::generated

// clang-format on
