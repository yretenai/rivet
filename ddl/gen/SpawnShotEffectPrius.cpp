// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/WeaponAccuracyBasePrius.hpp>
#include <rivet/ddl/generated/SpawnShotTargetingMode.hpp>
#include <rivet/ddl/generated/WeaponFiringBasePrius.hpp>
#include <rivet/ddl/generated/ScriptedShotEffectListElement.hpp> 

#include <rivet/ddl/generated/SpawnShotEffectPrius.hpp>

namespace rivet::ddl::generated {
	SpawnShotEffectPrius::SpawnShotEffectPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): ScriptedShotEffectBasePrius(serialized) {
		SpawnFromActor = serialized->get_enum<rivet::ddl::generated::x4891b54>(SpawnFromActor_type_id, rivet::ddl::generated::x4891b54_values);
		TargetMode = serialized->unwrap_into<rivet::ddl::generated::SpawnShotTargetingMode>(TargetMode_type_id);
		AccuracyPrius = serialized->unwrap_into<rivet::ddl::generated::WeaponAccuracyBasePrius>(AccuracyPrius_type_id);
		FiringPrius = serialized->unwrap_into<rivet::ddl::generated::WeaponFiringBasePrius>(FiringPrius_type_id);
		ShotSubEffects = serialized->unwrap_into_many<rivet::ddl::generated::ScriptedShotEffectListElement>(ShotSubEffects_type_id); 
	}

	[[nodiscard]] auto
	SpawnShotEffectPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	SpawnShotEffectPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SpawnShotEffectPrius> {
		if (incoming_type_id == SpawnShotEffectPrius::type_id) {
			return std::make_shared<SpawnShotEffectPrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
