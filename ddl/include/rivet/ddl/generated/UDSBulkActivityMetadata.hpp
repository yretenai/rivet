// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xca2817ca.hpp>
#include <rivet/ddl/generated/enums/x38e4d198.hpp> 

namespace rivet::ddl::generated {
	struct UDSWebApiReward; 

	struct RIVET_DDL_SHARED UDSBulkActivityMetadata : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UDSBulkActivityMetadata";
		constexpr static rivet::rivet_type_id type_id = 0x3d09b5c7;

		constexpr static std::string_view type_type_name = "type";
		constexpr static rivet::rivet_type_id type_type_id = 0x1c7c38a7;
		constexpr static std::string_view category_type_name = "category";
		constexpr static rivet::rivet_type_id category_type_id = 0x53bc6e7;
		constexpr static std::string_view name_type_name = "name";
		constexpr static rivet::rivet_type_id name_type_id = 0xce811188;
		constexpr static std::string_view Description_type_name = "Description";
		constexpr static rivet::rivet_type_id Description_type_id = 0xe03811fd;
		constexpr static std::string_view availableByDefault_type_name = "availableByDefault";
		constexpr static rivet::rivet_type_id availableByDefault_type_id = 0xdcbdf284;
		constexpr static std::string_view isRequiredForCompletion_type_name = "isRequiredForCompletion";
		constexpr static rivet::rivet_type_id isRequiredForCompletion_type_id = 0x54f0180;
		constexpr static std::string_view hidden_type_name = "hidden";
		constexpr static rivet::rivet_type_id hidden_type_id = 0xb189a2ec;
		constexpr static std::string_view isOnlineMultiplay_type_name = "isOnlineMultiplay";
		constexpr static rivet::rivet_type_id isOnlineMultiplay_type_id = 0x7b5a11be;
		constexpr static std::string_view defaultPlaytimeEstimate_type_name = "defaultPlaytimeEstimate";
		constexpr static rivet::rivet_type_id defaultPlaytimeEstimate_type_id = 0xa5884b3e;
		constexpr static std::string_view rewards_type_name = "rewards";
		constexpr static rivet::rivet_type_id rewards_type_id = 0x27754493; 

		explicit UDSBulkActivityMetadata() = default;
		explicit UDSBulkActivityMetadata([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x38e4d198 type {};
		rivet::ddl::generated::xca2817ca category {};
		std::vector<std::string_view> name {};
		std::vector<std::string_view> Description {};
		bool availableByDefault {};
		bool isRequiredForCompletion {};
		bool hidden {};
		bool isOnlineMultiplay {};
		uint32_t defaultPlaytimeEstimate {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UDSWebApiReward>> rewards {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UDSBulkActivityMetadata>;
	};
} // namespace rivet::ddl::generated

// clang-format on
