// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/KnockbackTierData.hpp>
#include <rivet/ddl/generated/DamageModifierExplosionPrius.hpp> 

#include <rivet/ddl/generated/ShotKamehamehaPrius.hpp>

namespace rivet::ddl::generated {
	ShotKamehamehaPrius::ShotKamehamehaPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): BeamShotPrius(serialized) {
		DamageType = serialized->get_enum<rivet::ddl::generated::x8d7e44cf>(DamageType_type_id, rivet::ddl::generated::x8d7e44cf_values);
		KnockbackTiers = serialized->unwrap_into_many<rivet::ddl::generated::KnockbackTierData>(KnockbackTiers_type_id);
		DamageFlags = serialized->get_bitset<rivet::ddl::generated::x65d7dac2>(DamageFlags_type_id, rivet::ddl::generated::x65d7dac2_values);
		AudioFollowerType = serialized->get_enum<rivet::ddl::generated::x6f69eca>(AudioFollowerType_type_id, rivet::ddl::generated::x6f69eca_values);
		V5ExplosionDamageType = serialized->get_enum<rivet::ddl::generated::x8d7e44cf>(V5ExplosionDamageType_type_id, rivet::ddl::generated::x8d7e44cf_values);
		V5ExplosionData = serialized->unwrap_into<rivet::ddl::generated::DamageModifierExplosionPrius>(V5ExplosionData_type_id);
		V5ExplosionDamageLOSType = serialized->get_enum<rivet::ddl::generated::DamageLOSTypes>(V5ExplosionDamageLOSType_type_id, rivet::ddl::generated::DamageLOSTypes_values); 
	}

	auto
	ShotKamehamehaPrius::get_type_id() const noexcept -> rivet::rivet_type_id {
		return type_id;
	}

	[[nodiscard]] auto
	ShotKamehamehaPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	ShotKamehamehaPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ShotKamehamehaPrius> {
		if (incoming_type_id == ShotKamehamehaPrius::type_id) {
			return std::make_shared<ShotKamehamehaPrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
