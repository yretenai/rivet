// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/ExplosionKnockbackData.hpp> 

#include <rivet/ddl/generated/DamageModifierExplosionPrius.hpp>

namespace rivet::ddl::generated {
	DamageModifierExplosionPrius::DamageModifierExplosionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): DamageModifierOutgoingPrius(serialized) {
		RequestId = serialized->get_uint32(RequestId_type_id, 0u);
		IgnoreActor = serialized->get_uint32(IgnoreActor_type_id, 0u);
		DamageStartRadius = serialized->get_float(DamageStartRadius_type_id, 0.000000f);
		DamageInnerAmount = serialized->get_float(DamageInnerAmount_type_id, 0.000000f);
		DamageInnerRadius = serialized->get_float(DamageInnerRadius_type_id, 1.000000f);
		DamageOuterAmount = serialized->get_float(DamageOuterAmount_type_id, 0.000000f);
		DamageOuterRadius = serialized->get_float(DamageOuterRadius_type_id, 1.000000f);
		DamageOuterHeight = serialized->get_float(DamageOuterHeight_type_id, -1.000000f);
		DamageLOSYPosOffset = serialized->get_float(DamageLOSYPosOffset_type_id, 0.000000f);
		DamageFalloffCurve = serialized->get_float(DamageFalloffCurve_type_id, 1.000000f);
		DamageVictimCountMin = serialized->get_int32(DamageVictimCountMin_type_id, -1);
		DamageVictimCountMax = serialized->get_int32(DamageVictimCountMax_type_id, -1);
		StatusStartRadius = serialized->get_float(StatusStartRadius_type_id, 0.000000f);
		StatusInnerAmount = serialized->get_float(StatusInnerAmount_type_id, 0.000000f);
		StatusInnerRadius = serialized->get_float(StatusInnerRadius_type_id, 1.000000f);
		StatusOuterAmount = serialized->get_float(StatusOuterAmount_type_id, 0.000000f);
		StatusOuterRadius = serialized->get_float(StatusOuterRadius_type_id, 1.000000f);
		StatusOuterHeight = serialized->get_float(StatusOuterHeight_type_id, -1.000000f);
		StatusFalloffCurve = serialized->get_float(StatusFalloffCurve_type_id, 1.000000f);
		StatusVictimCountMin = serialized->get_int32(StatusVictimCountMin_type_id, -1);
		StatusVictimCountMax = serialized->get_int32(StatusVictimCountMax_type_id, -1);
		StatusDuration = serialized->get_float(StatusDuration_type_id, 0.000000f);
		VictimExploderRadius = serialized->get_float(VictimExploderRadius_type_id, 0.000000f);
		VictimExploderChance = serialized->get_float(VictimExploderChance_type_id, 1.000000f);
		KnockbackData = serialized->unwrap_into_many<rivet::ddl::generated::ExplosionKnockbackData>(KnockbackData_type_id); 
	}

	[[nodiscard]] auto
	DamageModifierExplosionPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	DamageModifierExplosionPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageModifierExplosionPrius> {
		if (incoming_type_id == DamageModifierExplosionPrius::type_id) {
			return std::make_shared<DamageModifierExplosionPrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
