// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct LunaFtpToolsPackageConfigFile;
	struct LunaFtpProjectConfigFile;
	struct LunaFtpUserLocation; 

	struct RIVET_DDL_SHARED InsomniacEngineConfigFile : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "InsomniacEngineConfigFile";
		constexpr static rivet::rivet_type_id type_id = 0xfd209d15;

		constexpr static std::string_view Location_type_name = "Location";
		constexpr static rivet::rivet_type_id Location_type_id = 0xa49f34bb;
		constexpr static std::string_view Project_type_name = "Project";
		constexpr static rivet::rivet_type_id Project_type_id = 0x2e59b3d6;
		constexpr static std::string_view Branch_type_name = "Branch";
		constexpr static rivet::rivet_type_id Branch_type_id = 0x85fe5578;
		constexpr static std::string_view BranchRootDir_type_name = "BranchRootDir";
		constexpr static rivet::rivet_type_id BranchRootDir_type_id = 0x6137d899;
		constexpr static std::string_view ToolsPackage_type_name = "ToolsPackage";
		constexpr static rivet::rivet_type_id ToolsPackage_type_id = 0x68e61cd3;
		constexpr static std::string_view ToolsRootDir_type_name = "ToolsRootDir";
		constexpr static rivet::rivet_type_id ToolsRootDir_type_id = 0x2b2fea00;
		constexpr static std::string_view ToolsJunctionDir_type_name = "ToolsJunctionDir";
		constexpr static rivet::rivet_type_id ToolsJunctionDir_type_id = 0xc9241f36;
		constexpr static std::string_view IsToolsCodeFolder_type_name = "IsToolsCodeFolder";
		constexpr static rivet::rivet_type_id IsToolsCodeFolder_type_id = 0xf8363250;
		constexpr static std::string_view InstalledUpdaterVersion_type_name = "InstalledUpdaterVersion";
		constexpr static rivet::rivet_type_id InstalledUpdaterVersion_type_id = 0xeb61a125;
		constexpr static std::string_view InstalledHavokVersion_type_name = "InstalledHavokVersion";
		constexpr static rivet::rivet_type_id InstalledHavokVersion_type_id = 0x3aab9c64;
		constexpr static std::string_view InstalledWinExtVersion_type_name = "InstalledWinExtVersion";
		constexpr static rivet::rivet_type_id InstalledWinExtVersion_type_id = 0x8fcab4cf;
		constexpr static std::string_view InstalledMaya2018Version_type_name = "InstalledMaya2018Version";
		constexpr static rivet::rivet_type_id InstalledMaya2018Version_type_id = 0xb92cfc70;
		constexpr static std::string_view InstalledMaya2020Version_type_name = "InstalledMaya2020Version";
		constexpr static rivet::rivet_type_id InstalledMaya2020Version_type_id = 0x5344db00;
		constexpr static std::string_view PreviousBranch_type_name = "PreviousBranch";
		constexpr static rivet::rivet_type_id PreviousBranch_type_id = 0x8fb2fa46; 

		explicit InsomniacEngineConfigFile() = default;
		explicit InsomniacEngineConfigFile([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::LunaFtpUserLocation> Location {};
		std::shared_ptr<rivet::ddl::generated::LunaFtpProjectConfigFile> Project {};
		std::string_view Branch {};
		std::string_view BranchRootDir {};
		std::shared_ptr<rivet::ddl::generated::LunaFtpToolsPackageConfigFile> ToolsPackage {};
		std::string_view ToolsRootDir {};
		std::string_view ToolsJunctionDir {};
		bool IsToolsCodeFolder {};
		std::string_view InstalledUpdaterVersion {};
		std::string_view InstalledHavokVersion {};
		std::string_view InstalledWinExtVersion {};
		std::string_view InstalledMaya2018Version {};
		std::string_view InstalledMaya2020Version {};
		std::vector<std::string_view> PreviousBranch {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<InsomniacEngineConfigFile>;
	};
} // namespace rivet::ddl::generated

// clang-format on
