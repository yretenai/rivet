// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x30dbcb6e.hpp>
#include <rivet/ddl/generated/enums/xd0fb54d1.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SwingingMotionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SwingingMotionPrius";
		constexpr static rivet::rivet_type_id type_id = 0xd3ecc4b1;

		constexpr static std::string_view PivotJoint_type_name = "PivotJoint";
		constexpr static rivet::rivet_type_id PivotJoint_type_id = 0x2351cbfa;
		constexpr static std::string_view ReferenceJoint_type_name = "ReferenceJoint";
		constexpr static rivet::rivet_type_id ReferenceJoint_type_id = 0x248a2a1c;
		constexpr static std::string_view Constraint_type_name = "Constraint";
		constexpr static rivet::rivet_type_id Constraint_type_id = 0xe27cd0cb;
		constexpr static std::string_view SwingPlane_type_name = "SwingPlane";
		constexpr static rivet::rivet_type_id SwingPlane_type_id = 0x768ce09b;
		constexpr static std::string_view CenterOfMassDistance_type_name = "CenterOfMassDistance";
		constexpr static rivet::rivet_type_id CenterOfMassDistance_type_id = 0x2b473067;
		constexpr static std::string_view AngleLimit_type_name = "AngleLimit";
		constexpr static rivet::rivet_type_id AngleLimit_type_id = 0x244c2294;
		constexpr static std::string_view PosAngleLimit_type_name = "PosAngleLimit";
		constexpr static rivet::rivet_type_id PosAngleLimit_type_id = 0xe4520813;
		constexpr static std::string_view NegAngleLimit_type_name = "NegAngleLimit";
		constexpr static rivet::rivet_type_id NegAngleLimit_type_id = 0x5eabfd51;
		constexpr static std::string_view Gravity_type_name = "Gravity";
		constexpr static rivet::rivet_type_id Gravity_type_id = 0x5bf7469f;
		constexpr static std::string_view ConstrainToPlane_type_name = "ConstrainToPlane";
		constexpr static rivet::rivet_type_id ConstrainToPlane_type_id = 0x891afb4e;
		constexpr static std::string_view ReversePivotJoint_type_name = "ReversePivotJoint";
		constexpr static rivet::rivet_type_id ReversePivotJoint_type_id = 0xa3cf6b90;
		constexpr static std::string_view EnableSoundEvents_type_name = "EnableSoundEvents";
		constexpr static rivet::rivet_type_id EnableSoundEvents_type_id = 0x887bf205; 

		explicit SwingingMotionPrius() = default;
		explicit SwingingMotionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view PivotJoint {};
		std::string_view ReferenceJoint {};
		rivet::ddl::generated::xd0fb54d1 Constraint {};
		rivet::ddl::generated::x30dbcb6e SwingPlane {};
		float CenterOfMassDistance {};
		float AngleLimit {};
		float PosAngleLimit {};
		float NegAngleLimit {};
		float Gravity {};
		bool ConstrainToPlane {};
		bool ReversePivotJoint {};
		bool EnableSoundEvents {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SwingingMotionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
