// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/x6569d94c.hpp>
#include <rivet/ddl/generated/enums/x38fb844d.hpp>
#include <rivet/ddl/generated/enums/x26111896.hpp>
#include <rivet/ddl/generated/enums/x3a8b381d.hpp>
#include <rivet/ddl/generated/enums/x57d39d58.hpp>
#include <rivet/ddl/generated/enums/x865c089e.hpp>
#include <rivet/ddl/generated/enums/xb9555036.hpp> 

namespace rivet::ddl::generated {
	struct AnimFootstepConfigDef;
	struct FrozenSkeletonRange;
	struct AnimFacialVisemeMapDef;
	struct AnimFacialPoseDef;
	struct BezierCurveDef;
	struct AnimTriggerTrack;
	struct AnimPartialChain;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED AnimClipDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimClipDef";
		constexpr static rivet::rivet_type_id type_id = 0x3d01746f;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view SourcePath_type_name = "SourcePath";
		constexpr static rivet::rivet_type_id SourcePath_type_id = 0x6ccf66b3;
		constexpr static std::string_view FilterNodeName_type_name = "FilterNodeName";
		constexpr static rivet::rivet_type_id FilterNodeName_type_id = 0xa8a9ef53;
		constexpr static std::string_view SampleRate_type_name = "SampleRate";
		constexpr static rivet::rivet_type_id SampleRate_type_id = 0xb9228075;
		constexpr static std::string_view StartFrame_type_name = "StartFrame";
		constexpr static rivet::rivet_type_id StartFrame_type_id = 0xcd935029;
		constexpr static std::string_view EndFrame_type_name = "EndFrame";
		constexpr static rivet::rivet_type_id EndFrame_type_id = 0xfddf52e6;
		constexpr static std::string_view IsLooping_type_name = "IsLooping";
		constexpr static rivet::rivet_type_id IsLooping_type_id = 0xd3118ad1;
		constexpr static std::string_view CycleCount_type_name = "CycleCount";
		constexpr static rivet::rivet_type_id CycleCount_type_id = 0x961d7fe9;
		constexpr static std::string_view CompressionQuality_type_name = "CompressionQuality";
		constexpr static rivet::rivet_type_id CompressionQuality_type_id = 0x20c9431c;
		constexpr static std::string_view TranslationRange_type_name = "TranslationRange";
		constexpr static rivet::rivet_type_id TranslationRange_type_id = 0x63495d0d;
		constexpr static std::string_view DebugUncompressed_type_name = "DebugUncompressed";
		constexpr static rivet::rivet_type_id DebugUncompressed_type_id = 0xe66fb23d;
		constexpr static std::string_view IsAdditive_type_name = "IsAdditive";
		constexpr static rivet::rivet_type_id IsAdditive_type_id = 0xa60f98d3;
		constexpr static std::string_view AdditiveRefSampleIndex_type_name = "AdditiveRefSampleIndex";
		constexpr static rivet::rivet_type_id AdditiveRefSampleIndex_type_id = 0x1b53fa5;
		constexpr static std::string_view PartialChains_type_name = "PartialChains";
		constexpr static rivet::rivet_type_id PartialChains_type_id = 0x1615c547;
		constexpr static std::string_view PartialMotion_type_name = "PartialMotion";
		constexpr static rivet::rivet_type_id PartialMotion_type_id = 0x83e58212;
		constexpr static std::string_view MotionJointDataQuality_type_name = "MotionJointDataQuality";
		constexpr static rivet::rivet_type_id MotionJointDataQuality_type_id = 0xf1c95fc9;
		constexpr static std::string_view Curves_type_name = "Curves";
		constexpr static rivet::rivet_type_id Curves_type_id = 0x70243e1e;
		constexpr static std::string_view CustomTracks_type_name = "CustomTracks";
		constexpr static rivet::rivet_type_id CustomTracks_type_id = 0xa97a036d;
		constexpr static std::string_view FacialVisemePoses_type_name = "FacialVisemePoses";
		constexpr static rivet::rivet_type_id FacialVisemePoses_type_id = 0xce26cee7;
		constexpr static std::string_view FacialVisemeMap_type_name = "FacialVisemeMap";
		constexpr static rivet::rivet_type_id FacialVisemeMap_type_id = 0x8bc3379c;
		constexpr static std::string_view FacialExpressionPoses_type_name = "FacialExpressionPoses";
		constexpr static rivet::rivet_type_id FacialExpressionPoses_type_id = 0x41bf9457;
		constexpr static std::string_view EventTracks_type_name = "EventTracks";
		constexpr static rivet::rivet_type_id EventTracks_type_id = 0x653e2373;
		constexpr static std::string_view CinematicClip_type_name = "CinematicClip";
		constexpr static rivet::rivet_type_id CinematicClip_type_id = 0x77d633b0;
		constexpr static std::string_view FrozenSkeletonFrames_type_name = "FrozenSkeletonFrames";
		constexpr static rivet::rivet_type_id FrozenSkeletonFrames_type_id = 0x7cc71603;
		constexpr static std::string_view GeomType_type_name = "GeomType";
		constexpr static rivet::rivet_type_id GeomType_type_id = 0x92b8181;
		constexpr static std::string_view GeomModelSourcePath_type_name = "GeomModelSourcePath";
		constexpr static rivet::rivet_type_id GeomModelSourcePath_type_id = 0x397deb50;
		constexpr static std::string_view PendingReview_type_name = "PendingReview";
		constexpr static rivet::rivet_type_id PendingReview_type_id = 0x543b08f1;
		constexpr static std::string_view FootstepGen_type_name = "FootstepGen";
		constexpr static rivet::rivet_type_id FootstepGen_type_id = 0x659da796; 

		explicit AnimClipDef() = default;
		explicit AnimClipDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		rivet::ddl::generated::xb9555036 Type {};
		std::string_view Name {};
		std::string_view SourcePath {};
		std::string_view FilterNodeName {};
		rivet::ddl::generated::x865c089e SampleRate {};
		int32_t StartFrame {};
		int32_t EndFrame {};
		bool IsLooping {};
		uint8_t CycleCount {};
		rivet::ddl::generated::x57d39d58 CompressionQuality {};
		rivet::ddl::generated::x3a8b381d TranslationRange {};
		bool DebugUncompressed {};
		bool IsAdditive {};
		uint32_t AdditiveRefSampleIndex {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimPartialChain>> PartialChains {};
		bool PartialMotion {};
		rivet::ddl::generated::x26111896 MotionJointDataQuality {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BezierCurveDef>> Curves {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BezierCurveDef>> CustomTracks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimFacialPoseDef>> FacialVisemePoses {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimFacialVisemeMapDef>> FacialVisemeMap {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimFacialPoseDef>> FacialExpressionPoses {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimTriggerTrack>> EventTracks {};
		bool CinematicClip {};
		std::vector<std::shared_ptr<rivet::ddl::generated::FrozenSkeletonRange>> FrozenSkeletonFrames {};
		rivet::ddl::generated::x38fb844d GeomType {};
		std::string_view GeomModelSourcePath {};
		rivet::ddl::generated::x6569d94c PendingReview {};
		std::shared_ptr<rivet::ddl::generated::AnimFootstepConfigDef> FootstepGen {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimClipDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
