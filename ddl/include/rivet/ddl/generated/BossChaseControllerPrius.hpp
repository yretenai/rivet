// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct IdealDistanceParamsDDL; 

	struct RIVET_DDL_SHARED BossChaseControllerPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BossChaseControllerPrius";
		constexpr static rivet::rivet_type_id type_id = 0xf598b643;

		constexpr static std::string_view StartSpeed_type_name = "StartSpeed";
		constexpr static rivet::rivet_type_id StartSpeed_type_id = 0x774d9212;
		constexpr static std::string_view ChaseLocator_type_name = "ChaseLocator";
		constexpr static rivet::rivet_type_id ChaseLocator_type_id = 0x4a179166;
		constexpr static std::string_view DistanceParams_type_name = "DistanceParams";
		constexpr static rivet::rivet_type_id DistanceParams_type_id = 0x96157196; 

		explicit BossChaseControllerPrius() = default;
		explicit BossChaseControllerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float StartSpeed {};
		std::string_view ChaseLocator {};
		std::shared_ptr<rivet::ddl::generated::IdealDistanceParamsDDL> DistanceParams {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BossChaseControllerPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
