// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xd8ef7ea5.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DX12Settings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DX12Settings";
		constexpr static rivet::rivet_type_id type_id = 0xaf958951;

		constexpr static std::string_view DX12ShowPipelineHitchMessage_type_name = "DX12ShowPipelineHitchMessage";
		constexpr static rivet::rivet_type_id DX12ShowPipelineHitchMessage_type_id = 0x6bbb358a;
		constexpr static std::string_view DX12RemoveDuplicateResourceBarriers_type_name = "DX12RemoveDuplicateResourceBarriers";
		constexpr static rivet::rivet_type_id DX12RemoveDuplicateResourceBarriers_type_id = 0xe30ddcda;
		constexpr static std::string_view DX12UnrollResourceBarrierSubmission_type_name = "DX12UnrollResourceBarrierSubmission";
		constexpr static rivet::rivet_type_id DX12UnrollResourceBarrierSubmission_type_id = 0xedc49e21;
		constexpr static std::string_view DX12EnableAsyncResourceCreation_type_name = "DX12EnableAsyncResourceCreation";
		constexpr static rivet::rivet_type_id DX12EnableAsyncResourceCreation_type_id = 0xb1bedba2;
		constexpr static std::string_view DX12EnableAsyncPipelineCreation_type_name = "DX12EnableAsyncPipelineCreation";
		constexpr static rivet::rivet_type_id DX12EnableAsyncPipelineCreation_type_id = 0xdc4d0b8a;
		constexpr static std::string_view DX12MaxPipelineCreateThreads_type_name = "DX12MaxPipelineCreateThreads";
		constexpr static rivet::rivet_type_id DX12MaxPipelineCreateThreads_type_id = 0xb9ac1f09;
		constexpr static std::string_view DX12UseCopyQueueForUploadPool_type_name = "DX12UseCopyQueueForUploadPool";
		constexpr static rivet::rivet_type_id DX12UseCopyQueueForUploadPool_type_id = 0x1cdb84ae;
		constexpr static std::string_view DX12EnableAutomaticMemoryMoving_type_name = "DX12EnableAutomaticMemoryMoving";
		constexpr static rivet::rivet_type_id DX12EnableAutomaticMemoryMoving_type_id = 0x6cd82657;
		constexpr static std::string_view DX12EnableSmallReadbackBufferAllocators_type_name = "DX12EnableSmallReadbackBufferAllocators";
		constexpr static rivet::rivet_type_id DX12EnableSmallReadbackBufferAllocators_type_id = 0xaf769b88;
		constexpr static std::string_view DX12EnableSmallUploadBufferAllocators_type_name = "DX12EnableSmallUploadBufferAllocators";
		constexpr static rivet::rivet_type_id DX12EnableSmallUploadBufferAllocators_type_id = 0xe30bbde0;
		constexpr static std::string_view DX12EnableRayTracingBufferAllocators_type_name = "DX12EnableRayTracingBufferAllocators";
		constexpr static rivet::rivet_type_id DX12EnableRayTracingBufferAllocators_type_id = 0xa981ac01;
		constexpr static std::string_view DX12EnableRenderTargetAllocators_type_name = "DX12EnableRenderTargetAllocators";
		constexpr static rivet::rivet_type_id DX12EnableRenderTargetAllocators_type_id = 0xbec2bd57;
		constexpr static std::string_view DX12EnableAutomaticMemoryMovingStressTest_type_name = "DX12EnableAutomaticMemoryMovingStressTest";
		constexpr static rivet::rivet_type_id DX12EnableAutomaticMemoryMovingStressTest_type_id = 0x91979c43;
		constexpr static std::string_view DX12AutomaticMemoryMovingMinFreeVideoMemory_type_name = "DX12AutomaticMemoryMovingMinFreeVideoMemory";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingMinFreeVideoMemory_type_id = 0x6c184c40;
		constexpr static std::string_view DX12AutomaticMemoryMovingMaxFreeVideoMemory_type_name = "DX12AutomaticMemoryMovingMaxFreeVideoMemory";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingMaxFreeVideoMemory_type_id = 0x3fbe54a4;
		constexpr static std::string_view DX12AutomaticMemoryMovingMinFreeSystemMemory_type_name = "DX12AutomaticMemoryMovingMinFreeSystemMemory";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingMinFreeSystemMemory_type_id = 0xcf042791;
		constexpr static std::string_view DX12AutomaticMemoryMovingMaxResourceSize_type_name = "DX12AutomaticMemoryMovingMaxResourceSize";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingMaxResourceSize_type_id = 0xb8593bc;
		constexpr static std::string_view DX12AutomaticMemoryMovingMaxSecondsPerFrame_type_name = "DX12AutomaticMemoryMovingMaxSecondsPerFrame";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingMaxSecondsPerFrame_type_id = 0x6faf00c8;
		constexpr static std::string_view DX12AutomaticMemoryMovingSizePriorityMaxSize_type_name = "DX12AutomaticMemoryMovingSizePriorityMaxSize";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingSizePriorityMaxSize_type_id = 0x6d8b9869;
		constexpr static std::string_view DX12AutomaticMemoryMovingDebugVideoBudget_type_name = "DX12AutomaticMemoryMovingDebugVideoBudget";
		constexpr static rivet::rivet_type_id DX12AutomaticMemoryMovingDebugVideoBudget_type_id = 0x160cc11b;
		constexpr static std::string_view DX12DisplayAutomaticMemoryMovingStats_type_name = "DX12DisplayAutomaticMemoryMovingStats";
		constexpr static rivet::rivet_type_id DX12DisplayAutomaticMemoryMovingStats_type_id = 0xce1c2293;
		constexpr static std::string_view DX12EnableAutomaticMovingThread_type_name = "DX12EnableAutomaticMovingThread";
		constexpr static rivet::rivet_type_id DX12EnableAutomaticMovingThread_type_id = 0x30c612b4;
		constexpr static std::string_view DX12EnableDeferredReleaseThread_type_name = "DX12EnableDeferredReleaseThread";
		constexpr static rivet::rivet_type_id DX12EnableDeferredReleaseThread_type_id = 0x265f8075;
		constexpr static std::string_view DX12AllowMultipleFrames_type_name = "DX12AllowMultipleFrames";
		constexpr static rivet::rivet_type_id DX12AllowMultipleFrames_type_id = 0xb5a4b98a;
		constexpr static std::string_view DX12EnableTimers_type_name = "DX12EnableTimers";
		constexpr static rivet::rivet_type_id DX12EnableTimers_type_id = 0xb85f8bb8;
		constexpr static std::string_view DX12DisplayTimers_type_name = "DX12DisplayTimers";
		constexpr static rivet::rivet_type_id DX12DisplayTimers_type_id = 0xd2431028;
		constexpr static std::string_view DX12EnableUsageTracking_type_name = "DX12EnableUsageTracking";
		constexpr static rivet::rivet_type_id DX12EnableUsageTracking_type_id = 0xee6823b9;
		constexpr static std::string_view DX12DisplayUsageShort_type_name = "DX12DisplayUsageShort";
		constexpr static rivet::rivet_type_id DX12DisplayUsageShort_type_id = 0xf45fccaf;
		constexpr static std::string_view DX12DisplayUsageGeneral_type_name = "DX12DisplayUsageGeneral";
		constexpr static rivet::rivet_type_id DX12DisplayUsageGeneral_type_id = 0x58833c50;
		constexpr static std::string_view DX12DisplayUsageFine_type_name = "DX12DisplayUsageFine";
		constexpr static rivet::rivet_type_id DX12DisplayUsageFine_type_id = 0x77b4877e;
		constexpr static std::string_view DX12DisplayUsageDelta_type_name = "DX12DisplayUsageDelta";
		constexpr static rivet::rivet_type_id DX12DisplayUsageDelta_type_id = 0xed34a2d4;
		constexpr static std::string_view DX12DisplayUsageHeaps_type_name = "DX12DisplayUsageHeaps";
		constexpr static rivet::rivet_type_id DX12DisplayUsageHeaps_type_id = 0xb7c968ca;
		constexpr static std::string_view DX12RaytracingSerializeBVHBuilds_type_name = "DX12RaytracingSerializeBVHBuilds";
		constexpr static rivet::rivet_type_id DX12RaytracingSerializeBVHBuilds_type_id = 0x5edac785;
		constexpr static std::string_view DX12RaytracingRefitSkinnedBVHes_type_name = "DX12RaytracingRefitSkinnedBVHes";
		constexpr static rivet::rivet_type_id DX12RaytracingRefitSkinnedBVHes_type_id = 0xa96043d;
		constexpr static std::string_view DX12RaytracingRefitSkinnedBVHesFromBindPose_type_name = "DX12RaytracingRefitSkinnedBVHesFromBindPose";
		constexpr static rivet::rivet_type_id DX12RaytracingRefitSkinnedBVHesFromBindPose_type_id = 0xd82b928;
		constexpr static std::string_view DX12RaytracingKeepAllPSOsAlive_type_name = "DX12RaytracingKeepAllPSOsAlive";
		constexpr static rivet::rivet_type_id DX12RaytracingKeepAllPSOsAlive_type_id = 0x30e064c1;
		constexpr static std::string_view DX12RaytracingEnableAMDHacks_type_name = "DX12RaytracingEnableAMDHacks";
		constexpr static rivet::rivet_type_id DX12RaytracingEnableAMDHacks_type_id = 0xeab33131;
		constexpr static std::string_view DX12CompactZoneBVHs_type_name = "DX12CompactZoneBVHs";
		constexpr static rivet::rivet_type_id DX12CompactZoneBVHs_type_id = 0x9c2934a1;
		constexpr static std::string_view DX12MinimizeZoneBVHs_type_name = "DX12MinimizeZoneBVHs";
		constexpr static rivet::rivet_type_id DX12MinimizeZoneBVHs_type_id = 0xaa23ef39;
		constexpr static std::string_view DX12RaytracingMaxModelsPerFrame_type_name = "DX12RaytracingMaxModelsPerFrame";
		constexpr static rivet::rivet_type_id DX12RaytracingMaxModelsPerFrame_type_id = 0x3c8b6d2b;
		constexpr static std::string_view DX12RaytracingMaxZonesPerFrame_type_name = "DX12RaytracingMaxZonesPerFrame";
		constexpr static rivet::rivet_type_id DX12RaytracingMaxZonesPerFrame_type_id = 0xd4bcf923;
		constexpr static std::string_view DX12UseCPUBufferOptimize_type_name = "DX12UseCPUBufferOptimize";
		constexpr static rivet::rivet_type_id DX12UseCPUBufferOptimize_type_id = 0x5a4036c5; 

		explicit DX12Settings() = default;
		explicit DX12Settings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool DX12ShowPipelineHitchMessage {};
		bool DX12RemoveDuplicateResourceBarriers {};
		bool DX12UnrollResourceBarrierSubmission {};
		bool DX12EnableAsyncResourceCreation {};
		bool DX12EnableAsyncPipelineCreation {};
		uint32_t DX12MaxPipelineCreateThreads {};
		bool DX12UseCopyQueueForUploadPool {};
		bool DX12EnableAutomaticMemoryMoving {};
		bool DX12EnableSmallReadbackBufferAllocators {};
		bool DX12EnableSmallUploadBufferAllocators {};
		bool DX12EnableRayTracingBufferAllocators {};
		bool DX12EnableRenderTargetAllocators {};
		bool DX12EnableAutomaticMemoryMovingStressTest {};
		uint64_t DX12AutomaticMemoryMovingMinFreeVideoMemory {};
		uint64_t DX12AutomaticMemoryMovingMaxFreeVideoMemory {};
		uint64_t DX12AutomaticMemoryMovingMinFreeSystemMemory {};
		uint64_t DX12AutomaticMemoryMovingMaxResourceSize {};
		float DX12AutomaticMemoryMovingMaxSecondsPerFrame {};
		uint64_t DX12AutomaticMemoryMovingSizePriorityMaxSize {};
		uint64_t DX12AutomaticMemoryMovingDebugVideoBudget {};
		bool DX12DisplayAutomaticMemoryMovingStats {};
		rivet::ddl::generated::xd8ef7ea5 DX12EnableAutomaticMovingThread {};
		rivet::ddl::generated::xd8ef7ea5 DX12EnableDeferredReleaseThread {};
		bool DX12AllowMultipleFrames {};
		bool DX12EnableTimers {};
		bool DX12DisplayTimers {};
		bool DX12EnableUsageTracking {};
		bool DX12DisplayUsageShort {};
		bool DX12DisplayUsageGeneral {};
		bool DX12DisplayUsageFine {};
		bool DX12DisplayUsageDelta {};
		bool DX12DisplayUsageHeaps {};
		bool DX12RaytracingSerializeBVHBuilds {};
		bool DX12RaytracingRefitSkinnedBVHes {};
		bool DX12RaytracingRefitSkinnedBVHesFromBindPose {};
		bool DX12RaytracingKeepAllPSOsAlive {};
		bool DX12RaytracingEnableAMDHacks {};
		bool DX12CompactZoneBVHs {};
		bool DX12MinimizeZoneBVHs {};
		uint32_t DX12RaytracingMaxModelsPerFrame {};
		uint32_t DX12RaytracingMaxZonesPerFrame {};
		bool DX12UseCPUBufferOptimize {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DX12Settings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
