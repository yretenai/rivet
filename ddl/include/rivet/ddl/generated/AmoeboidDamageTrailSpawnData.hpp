// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED AmoeboidDamageTrailSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "AmoeboidDamageTrailSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0xdf04f2e0;

		constexpr static std::string_view OwnerHandle_type_name = "OwnerHandle";
		constexpr static rivet::rivet_type_id OwnerHandle_type_id = 0x6151ad8f;
		constexpr static std::string_view AssetId_type_name = "AssetId";
		constexpr static rivet::rivet_type_id AssetId_type_id = 0xb6e788d7;
		constexpr static std::string_view ZoneIndex_type_name = "ZoneIndex";
		constexpr static rivet::rivet_type_id ZoneIndex_type_id = 0xc9266b7;
		constexpr static std::string_view SpawnPos_type_name = "SpawnPos";
		constexpr static rivet::rivet_type_id SpawnPos_type_id = 0x45e23d0f;
		constexpr static std::string_view SpawnUp_type_name = "SpawnUp";
		constexpr static rivet::rivet_type_id SpawnUp_type_id = 0xcd1e83ee;
		constexpr static std::string_view SpawnFwd_type_name = "SpawnFwd";
		constexpr static rivet::rivet_type_id SpawnFwd_type_id = 0x5c81ff53;
		constexpr static std::string_view SpawnExtents_type_name = "SpawnExtents";
		constexpr static rivet::rivet_type_id SpawnExtents_type_id = 0x4bd562d1;
		constexpr static std::string_view Lifetime_type_name = "Lifetime";
		constexpr static rivet::rivet_type_id Lifetime_type_id = 0xc7e68df8; 

		explicit AmoeboidDamageTrailSpawnData() = default;
		explicit AmoeboidDamageTrailSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t OwnerHandle {};
		uint64_t AssetId {};
		int32_t ZoneIndex {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnPos {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnUp {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnFwd {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnExtents {};
		float Lifetime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AmoeboidDamageTrailSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
