// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct GraphConMeta; 

	struct RIVET_DDL_SHARED GraphNode : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "GraphNode";
		constexpr static rivet::rivet_type_id type_id = 0x392b1f59;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view XPos_type_name = "XPos";
		constexpr static rivet::rivet_type_id XPos_type_id = 0xf88aee81;
		constexpr static std::string_view YPos_type_name = "YPos";
		constexpr static rivet::rivet_type_id YPos_type_id = 0x403689e4;
		constexpr static std::string_view Collapsed_type_name = "Collapsed";
		constexpr static rivet::rivet_type_id Collapsed_type_id = 0xf07e7faf;
		constexpr static std::string_view Disabled_type_name = "Disabled";
		constexpr static rivet::rivet_type_id Disabled_type_id = 0x7effd393;
		constexpr static std::string_view ConMeta_type_name = "ConMeta";
		constexpr static rivet::rivet_type_id ConMeta_type_id = 0xaffcfa8a;
		constexpr static std::string_view Comment_type_name = "Comment";
		constexpr static rivet::rivet_type_id Comment_type_id = 0x959e3154;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view SubType_type_name = "SubType";
		constexpr static rivet::rivet_type_id SubType_type_id = 0xf4b3e9a4;
		constexpr static std::string_view Aux_type_name = "Aux";
		constexpr static rivet::rivet_type_id Aux_type_id = 0x90972571; 

		explicit GraphNode() = default;
		explicit GraphNode([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		float XPos {};
		float YPos {};
		bool Collapsed {};
		bool Disabled {};
		std::vector<std::shared_ptr<rivet::ddl::generated::GraphConMeta>> ConMeta {};
		std::string_view Comment {};
		std::string_view Type {};
		std::string_view SubType {};
		std::optional<std::vector<rivet::structures::rivet_serialized_value>> Aux {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GraphNode>;
	};
} // namespace rivet::ddl::generated

// clang-format on
