// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SharedFrameBudgetAmortizationSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SharedFrameBudgetAmortizationSettings";
		constexpr static rivet::rivet_type_id type_id = 0x3f5eabd0;

		constexpr static std::string_view LosBlockerTargetMaxBlockersPerFrame_type_name = "LosBlockerTargetMaxBlockersPerFrame";
		constexpr static rivet::rivet_type_id LosBlockerTargetMaxBlockersPerFrame_type_id = 0x39c27d;
		constexpr static std::string_view HeroAwarenessMaxRaycastsPerFrame_type_name = "HeroAwarenessMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id HeroAwarenessMaxRaycastsPerFrame_type_id = 0x86bb1891;
		constexpr static std::string_view ManualAwarenessMaxRaycastsPerFrame_type_name = "ManualAwarenessMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id ManualAwarenessMaxRaycastsPerFrame_type_id = 0xb03a685b;
		constexpr static std::string_view OmniAwarenessMaxRaycastsPerFrame_type_name = "OmniAwarenessMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id OmniAwarenessMaxRaycastsPerFrame_type_id = 0x61693236;
		constexpr static std::string_view ShuffleHunterMaxRaycastsPerFrame_type_name = "ShuffleHunterMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id ShuffleHunterMaxRaycastsPerFrame_type_id = 0xf149c589;
		constexpr static std::string_view FirepointLosCheckerMaxRaycastsPerFrame_type_name = "FirepointLosCheckerMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id FirepointLosCheckerMaxRaycastsPerFrame_type_id = 0x44d3c09;
		constexpr static std::string_view PerchLOSCheckerMaxRaycastsPerFrame_type_name = "PerchLOSCheckerMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id PerchLOSCheckerMaxRaycastsPerFrame_type_id = 0xb1751c96;
		constexpr static std::string_view GrenadeShotMaxRaycastsPerFrame_type_name = "GrenadeShotMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id GrenadeShotMaxRaycastsPerFrame_type_id = 0xdefc33f;
		constexpr static std::string_view ShotActionProximityTestMaxRaycastsPerFrame_type_name = "ShotActionProximityTestMaxRaycastsPerFrame";
		constexpr static rivet::rivet_type_id ShotActionProximityTestMaxRaycastsPerFrame_type_id = 0xc36935d8;
		constexpr static std::string_view CorpseManagerMaxRagdollsPerFrame_type_name = "CorpseManagerMaxRagdollsPerFrame";
		constexpr static rivet::rivet_type_id CorpseManagerMaxRagdollsPerFrame_type_id = 0x16a69b70;
		constexpr static std::string_view CorpseManagerMaxDeletePerFrame_type_name = "CorpseManagerMaxDeletePerFrame";
		constexpr static rivet::rivet_type_id CorpseManagerMaxDeletePerFrame_type_id = 0x9e931e97;
		constexpr static std::string_view FlewByMaxEventsPerFrame_type_name = "FlewByMaxEventsPerFrame";
		constexpr static rivet::rivet_type_id FlewByMaxEventsPerFrame_type_id = 0xf858bcaf;
		constexpr static std::string_view ChunkManagerMaxTotalChunks_type_name = "ChunkManagerMaxTotalChunks";
		constexpr static rivet::rivet_type_id ChunkManagerMaxTotalChunks_type_id = 0xd4191e7e;
		constexpr static std::string_view ChunkManagerMaxLowPrioritySpawnsPerFrame_type_name = "ChunkManagerMaxLowPrioritySpawnsPerFrame";
		constexpr static rivet::rivet_type_id ChunkManagerMaxLowPrioritySpawnsPerFrame_type_id = 0xdf30e07e; 

		explicit SharedFrameBudgetAmortizationSettings() = default;
		explicit SharedFrameBudgetAmortizationSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t LosBlockerTargetMaxBlockersPerFrame {};
		uint8_t HeroAwarenessMaxRaycastsPerFrame {};
		uint8_t ManualAwarenessMaxRaycastsPerFrame {};
		uint8_t OmniAwarenessMaxRaycastsPerFrame {};
		uint8_t ShuffleHunterMaxRaycastsPerFrame {};
		uint8_t FirepointLosCheckerMaxRaycastsPerFrame {};
		uint8_t PerchLOSCheckerMaxRaycastsPerFrame {};
		uint8_t GrenadeShotMaxRaycastsPerFrame {};
		uint8_t ShotActionProximityTestMaxRaycastsPerFrame {};
		int32_t CorpseManagerMaxRagdollsPerFrame {};
		int32_t CorpseManagerMaxDeletePerFrame {};
		int32_t FlewByMaxEventsPerFrame {};
		uint32_t ChunkManagerMaxTotalChunks {};
		uint32_t ChunkManagerMaxLowPrioritySpawnsPerFrame {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SharedFrameBudgetAmortizationSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
