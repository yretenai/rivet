// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/AnimFootstepJoint.hpp>

namespace rivet::ddl::generated {
	AnimFootstepJoint::AnimFootstepJoint([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Side = serialized->get_enum<rivet::ddl::generated::x94d69111>(Side_type_id, rivet::ddl::generated::x94d69111_values, rivet::ddl::generated::x94d69111::Left);
		JointName = serialized->get_string(JointName_type_id, "LF_ball");
		LocatorName = serialized->get_string(LocatorName_type_id, "igLoc_ball_l"); 
	}

	[[nodiscard]] auto
	AnimFootstepJoint::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	AnimFootstepJoint::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimFootstepJoint> {
		if (incoming_type_id == AnimFootstepJoint::type_id) {
			return std::make_shared<AnimFootstepJoint>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
