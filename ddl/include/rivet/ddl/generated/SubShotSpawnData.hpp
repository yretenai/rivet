// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED SubShotSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "SubShotSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x730b42ee;

		constexpr static std::string_view AssetId_type_name = "AssetId";
		constexpr static rivet::rivet_type_id AssetId_type_id = 0xb6e788d7;
		constexpr static std::string_view ZoneIndex_type_name = "ZoneIndex";
		constexpr static rivet::rivet_type_id ZoneIndex_type_id = 0xc9266b7;
		constexpr static std::string_view Position_type_name = "Position";
		constexpr static rivet::rivet_type_id Position_type_id = 0xbc2d5985;
		constexpr static std::string_view Facing_type_name = "Facing";
		constexpr static rivet::rivet_type_id Facing_type_id = 0xb37847ee;
		constexpr static std::string_view Up_type_name = "Up";
		constexpr static rivet::rivet_type_id Up_type_id = 0x76fcc3ad;
		constexpr static std::string_view Scale_type_name = "Scale";
		constexpr static rivet::rivet_type_id Scale_type_id = 0xf515e945;
		constexpr static std::string_view ParentHandle_type_name = "ParentHandle";
		constexpr static rivet::rivet_type_id ParentHandle_type_id = 0x13ab6550;
		constexpr static std::string_view ParentAttackId_type_name = "ParentAttackId";
		constexpr static rivet::rivet_type_id ParentAttackId_type_id = 0xfefeb1b6;
		constexpr static std::string_view AttackId_type_name = "AttackId";
		constexpr static rivet::rivet_type_id AttackId_type_id = 0xa9d10a0f; 

		explicit SubShotSpawnData() = default;
		explicit SubShotSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t AssetId {};
		int32_t ZoneIndex {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Position {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Facing {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Up {};
		float Scale {};
		uint32_t ParentHandle {};
		uint32_t ParentAttackId {};
		uint32_t AttackId {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SubShotSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
