// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct NavigationProperties;
	struct RenderOverrides;
	struct TerrainLayer;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED TerrainDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TerrainDef";
		constexpr static rivet::rivet_type_id type_id = 0x3d3b7c9;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view HeightField_type_name = "HeightField";
		constexpr static rivet::rivet_type_id HeightField_type_id = 0x65901637;
		constexpr static std::string_view HeightFieldPaint_type_name = "HeightFieldPaint";
		constexpr static rivet::rivet_type_id HeightFieldPaint_type_id = 0xd37317c9;
		constexpr static std::string_view SplatMask1_type_name = "SplatMask1";
		constexpr static rivet::rivet_type_id SplatMask1_type_id = 0x4dce1eb2;
		constexpr static std::string_view SplatMask2_type_name = "SplatMask2";
		constexpr static rivet::rivet_type_id SplatMask2_type_id = 0xd4c74f08;
		constexpr static std::string_view SplatMaskPaint1_type_name = "SplatMaskPaint1";
		constexpr static rivet::rivet_type_id SplatMaskPaint1_type_id = 0x7d3791b3;
		constexpr static std::string_view SplatMaskPaint2_type_name = "SplatMaskPaint2";
		constexpr static rivet::rivet_type_id SplatMaskPaint2_type_id = 0xe43ec009;
		constexpr static std::string_view SplatMaskPaintDcc_type_name = "SplatMaskPaintDcc";
		constexpr static rivet::rivet_type_id SplatMaskPaintDcc_type_id = 0x80b181a3;
		constexpr static std::string_view VistaMap_type_name = "VistaMap";
		constexpr static rivet::rivet_type_id VistaMap_type_id = 0xbded6f77;
		constexpr static std::string_view Material_type_name = "Material";
		constexpr static rivet::rivet_type_id Material_type_id = 0x86bfc8e5;
		constexpr static std::string_view Height_type_name = "Height";
		constexpr static rivet::rivet_type_id Height_type_id = 0xcb35ab68;
		constexpr static std::string_view EnableDetailDisplacement_type_name = "EnableDetailDisplacement";
		constexpr static rivet::rivet_type_id EnableDetailDisplacement_type_id = 0x29c767de;
		constexpr static std::string_view Layers_type_name = "Layers";
		constexpr static rivet::rivet_type_id Layers_type_id = 0xd8f0a337;
		constexpr static std::string_view NavProperties_type_name = "NavProperties";
		constexpr static rivet::rivet_type_id NavProperties_type_id = 0x4a6c904f;
		constexpr static std::string_view RenderOverrides_type_name = "RenderOverrides";
		constexpr static rivet::rivet_type_id RenderOverrides_type_id = 0xd1f6fba2;
		constexpr static std::string_view ScatterNodeId_type_name = "ScatterNodeId";
		constexpr static rivet::rivet_type_id ScatterNodeId_type_id = 0xf7b828a9; 

		explicit TerrainDef() = default;
		explicit TerrainDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::string_view HeightField {};
		std::string_view HeightFieldPaint {};
		std::string_view SplatMask1 {};
		std::string_view SplatMask2 {};
		std::string_view SplatMaskPaint1 {};
		std::string_view SplatMaskPaint2 {};
		std::string_view SplatMaskPaintDcc {};
		std::string_view VistaMap {};
		std::string_view Material {};
		float Height {};
		bool EnableDetailDisplacement {};
		std::vector<std::shared_ptr<rivet::ddl::generated::TerrainLayer>> Layers {};
		std::shared_ptr<rivet::ddl::generated::NavigationProperties> NavProperties {};
		std::shared_ptr<rivet::ddl::generated::RenderOverrides> RenderOverrides {};
		uint64_t ScatterNodeId {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TerrainDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
