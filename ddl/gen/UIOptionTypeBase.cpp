// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/UIOptionTypeHeader.hpp>
#include <rivet/ddl/generated/UIOptionTypeSettingBase.hpp>
#include <rivet/ddl/generated/UIOptionTypePage.hpp>
#include <rivet/ddl/generated/UIOptionTypeReference.hpp>
#include <rivet/ddl/generated/UIOptionTypeCommand.hpp> 

#include <rivet/ddl/generated/UIOptionTypeBase.hpp>

namespace rivet::ddl::generated {
	UIOptionTypeBase::UIOptionTypeBase([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {

	}

	[[nodiscard]] auto
	UIOptionTypeBase::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	UIOptionTypeBase::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UIOptionTypeBase> {
		if (incoming_type_id == UIOptionTypeBase::type_id) {
			return std::make_shared<UIOptionTypeBase>(serialized);
		}

		auto UIOptionTypeHeader_ptr = UIOptionTypeHeader::from_substruct(incoming_type_id, serialized);
		if (UIOptionTypeHeader_ptr != nullptr) {
			return UIOptionTypeHeader_ptr;
		}

		auto UIOptionTypeSettingBase_ptr = UIOptionTypeSettingBase::from_substruct(incoming_type_id, serialized);
		if (UIOptionTypeSettingBase_ptr != nullptr) {
			return UIOptionTypeSettingBase_ptr;
		}

		auto UIOptionTypeCommand_ptr = UIOptionTypeCommand::from_substruct(incoming_type_id, serialized);
		if (UIOptionTypeCommand_ptr != nullptr) {
			return UIOptionTypeCommand_ptr;
		}

		auto UIOptionTypeReference_ptr = UIOptionTypeReference::from_substruct(incoming_type_id, serialized);
		if (UIOptionTypeReference_ptr != nullptr) {
			return UIOptionTypeReference_ptr;
		}

		auto UIOptionTypePage_ptr = UIOptionTypePage::from_substruct(incoming_type_id, serialized);
		if (UIOptionTypePage_ptr != nullptr) {
			return UIOptionTypePage_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
