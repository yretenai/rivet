// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/StreamingVideoToggleOfferPrius.hpp>
#include <rivet/ddl/generated/HoldOfferPrius.hpp>
#include <rivet/ddl/generated/UseTurretOfferPrius.hpp>
#include <rivet/ddl/generated/DoorOfferPrius.hpp>
#include <rivet/ddl/generated/StreamingVideoLinkOfferPrius.hpp>
#include <rivet/ddl/generated/GenericOfferPrius.hpp>
#include <rivet/ddl/generated/InteractGeneralOfferPrius.hpp> 

#include <rivet/ddl/generated/ProximityOfferPrius.hpp>

namespace rivet::ddl::generated {
	ProximityOfferPrius::ProximityOfferPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): OfferPrius(serialized) {
		UserFaceMode = serialized->get_enum<rivet::ddl::generated::xccd3eeab>(UserFaceMode_type_id, rivet::ddl::generated::xccd3eeab_values);
		OfferShape = serialized->get_enum<rivet::ddl::generated::xd7c06e8b>(OfferShape_type_id, rivet::ddl::generated::xd7c06e8b_values);
		OfferVolume = serialized->get_uint64(OfferVolume_type_id);
		PromptFacingMode = serialized->get_enum<rivet::ddl::generated::x11d5b447>(PromptFacingMode_type_id, rivet::ddl::generated::x11d5b447_values); 
	}

	[[nodiscard]] auto
	ProximityOfferPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	ProximityOfferPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ProximityOfferPrius> {
		if (incoming_type_id == ProximityOfferPrius::type_id) {
			return std::make_shared<ProximityOfferPrius>(serialized);
		}

		auto InteractGeneralOfferPrius_ptr = InteractGeneralOfferPrius::from_substruct(incoming_type_id, serialized);
		if (InteractGeneralOfferPrius_ptr != nullptr) {
			return InteractGeneralOfferPrius_ptr;
		}

		auto GenericOfferPrius_ptr = GenericOfferPrius::from_substruct(incoming_type_id, serialized);
		if (GenericOfferPrius_ptr != nullptr) {
			return GenericOfferPrius_ptr;
		}

		auto StreamingVideoLinkOfferPrius_ptr = StreamingVideoLinkOfferPrius::from_substruct(incoming_type_id, serialized);
		if (StreamingVideoLinkOfferPrius_ptr != nullptr) {
			return StreamingVideoLinkOfferPrius_ptr;
		}

		auto DoorOfferPrius_ptr = DoorOfferPrius::from_substruct(incoming_type_id, serialized);
		if (DoorOfferPrius_ptr != nullptr) {
			return DoorOfferPrius_ptr;
		}

		auto HoldOfferPrius_ptr = HoldOfferPrius::from_substruct(incoming_type_id, serialized);
		if (HoldOfferPrius_ptr != nullptr) {
			return HoldOfferPrius_ptr;
		}

		auto UseTurretOfferPrius_ptr = UseTurretOfferPrius::from_substruct(incoming_type_id, serialized);
		if (UseTurretOfferPrius_ptr != nullptr) {
			return UseTurretOfferPrius_ptr;
		}

		auto StreamingVideoToggleOfferPrius_ptr = StreamingVideoToggleOfferPrius::from_substruct(incoming_type_id, serialized);
		if (StreamingVideoToggleOfferPrius_ptr != nullptr) {
			return StreamingVideoToggleOfferPrius_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
