// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VaultViewerKeyboardEvent : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VaultViewerKeyboardEvent";
		constexpr static rivet::rivet_type_id type_id = 0x5fe08d7e;

		constexpr static std::string_view Key_type_name = "Key";
		constexpr static rivet::rivet_type_id Key_type_id = 0xa0c58260;
		constexpr static std::string_view Down_type_name = "Down";
		constexpr static rivet::rivet_type_id Down_type_id = 0x2c6f508b;
		constexpr static std::string_view AltKey_type_name = "AltKey";
		constexpr static rivet::rivet_type_id AltKey_type_id = 0xb911aae7;
		constexpr static std::string_view CtrlKey_type_name = "CtrlKey";
		constexpr static rivet::rivet_type_id CtrlKey_type_id = 0x9156aa6;
		constexpr static std::string_view ShiftKey_type_name = "ShiftKey";
		constexpr static rivet::rivet_type_id ShiftKey_type_id = 0x95ed2907; 

		explicit VaultViewerKeyboardEvent() = default;
		explicit VaultViewerKeyboardEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t Key {};
		bool Down {};
		bool AltKey {};
		bool CtrlKey {};
		bool ShiftKey {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VaultViewerKeyboardEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
