// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SpawnerBotBasePrius : BotPrius {
		constexpr static std::string_view type_name = "SpawnerBotBasePrius";
		constexpr static rivet::rivet_type_id type_id = 0x58ef6c1d;

		constexpr static std::string_view OverrideNumActive_type_name = "OverrideNumActive";
		constexpr static rivet::rivet_type_id OverrideNumActive_type_id = 0x9e8161d6;
		constexpr static std::string_view OverrideSpawnDelay_type_name = "OverrideSpawnDelay";
		constexpr static rivet::rivet_type_id OverrideSpawnDelay_type_id = 0x6098026a;
		constexpr static std::string_view OverrideSpawnTriggerDelay_type_name = "OverrideSpawnTriggerDelay";
		constexpr static rivet::rivet_type_id OverrideSpawnTriggerDelay_type_id = 0xe594131b;
		constexpr static std::string_view SpawnTemplate_type_name = "SpawnTemplate";
		constexpr static rivet::rivet_type_id SpawnTemplate_type_id = 0x9231a3a;
		constexpr static std::string_view SpawnGroup_type_name = "SpawnGroup";
		constexpr static rivet::rivet_type_id SpawnGroup_type_id = 0xb8327777;
		constexpr static std::string_view ExtraSpawnIntoGroup_type_name = "ExtraSpawnIntoGroup";
		constexpr static rivet::rivet_type_id ExtraSpawnIntoGroup_type_id = 0x45de99f;
		constexpr static std::string_view SpawnerBotConfig_type_name = "SpawnerBotConfig";
		constexpr static rivet::rivet_type_id SpawnerBotConfig_type_id = 0x1a244fdf; 

		explicit SpawnerBotBasePrius() = default;
		explicit SpawnerBotBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int8_t OverrideNumActive {};
		float OverrideSpawnDelay {};
		float OverrideSpawnTriggerDelay {};
		uint64_t SpawnTemplate {};
		uint64_t SpawnGroup {};
		uint64_t ExtraSpawnIntoGroup {};
		std::string_view SpawnerBotConfig {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SpawnerBotBasePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
