// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PlayAnimActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PlayAnimActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x169038c7;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view AnimName_type_name = "AnimName";
		constexpr static rivet::rivet_type_id AnimName_type_id = 0xc9e716ce;
		constexpr static std::string_view WorldSpace_type_name = "WorldSpace";
		constexpr static rivet::rivet_type_id WorldSpace_type_id = 0xb06402c8;
		constexpr static std::string_view PreserveScale_type_name = "PreserveScale";
		constexpr static rivet::rivet_type_id PreserveScale_type_id = 0xbad0177a;
		constexpr static std::string_view SkipToEnd_type_name = "SkipToEnd";
		constexpr static rivet::rivet_type_id SkipToEnd_type_id = 0x5c71eeb5;
		constexpr static std::string_view StartOnRndFrame_type_name = "StartOnRndFrame";
		constexpr static rivet::rivet_type_id StartOnRndFrame_type_id = 0x73d10ea0;
		constexpr static std::string_view StartAtSpecificTime_type_name = "StartAtSpecificTime";
		constexpr static rivet::rivet_type_id StartAtSpecificTime_type_id = 0xddd36f9;
		constexpr static std::string_view SpecificTimeIsNormalized_type_name = "SpecificTimeIsNormalized";
		constexpr static rivet::rivet_type_id SpecificTimeIsNormalized_type_id = 0xbaf1607a;
		constexpr static std::string_view RemoveDriverOnDone_type_name = "RemoveDriverOnDone";
		constexpr static rivet::rivet_type_id RemoveDriverOnDone_type_id = 0x3aa780ae;
		constexpr static std::string_view RestartAnimOnCinematicEnd_type_name = "RestartAnimOnCinematicEnd";
		constexpr static rivet::rivet_type_id RestartAnimOnCinematicEnd_type_id = 0x59992c9c;
		constexpr static std::string_view ApplyMotion_type_name = "ApplyMotion";
		constexpr static rivet::rivet_type_id ApplyMotion_type_id = 0xcccfcaf3;
		constexpr static std::string_view DeactivateBaseLayer_type_name = "DeactivateBaseLayer";
		constexpr static rivet::rivet_type_id DeactivateBaseLayer_type_id = 0xdcb6294c; 

		explicit PlayAnimActionPrius() = default;
		explicit PlayAnimActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view AnimName {};
		bool WorldSpace {};
		bool PreserveScale {};
		bool SkipToEnd {};
		bool StartOnRndFrame {};
		float StartAtSpecificTime {};
		bool SpecificTimeIsNormalized {};
		bool RemoveDriverOnDone {};
		bool RestartAnimOnCinematicEnd {};
		bool ApplyMotion {};
		bool DeactivateBaseLayer {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlayAnimActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
