// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED EngineDebugConfig : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "EngineDebugConfig";
		constexpr static rivet::rivet_type_id type_id = 0x4a9f89be;

		constexpr static std::string_view MarketingFov_type_name = "MarketingFov";
		constexpr static rivet::rivet_type_id MarketingFov_type_id = 0xb346c0dd;
		constexpr static std::string_view MarketingCameraRoll_type_name = "MarketingCameraRoll";
		constexpr static rivet::rivet_type_id MarketingCameraRoll_type_id = 0x9847de9e;
		constexpr static std::string_view MarketingCameraPitch_type_name = "MarketingCameraPitch";
		constexpr static rivet::rivet_type_id MarketingCameraPitch_type_id = 0x9e40f24c;
		constexpr static std::string_view MarketingCameraYaw_type_name = "MarketingCameraYaw";
		constexpr static rivet::rivet_type_id MarketingCameraYaw_type_id = 0x8d4d29ad;
		constexpr static std::string_view MarketingCameraXOffset_type_name = "MarketingCameraXOffset";
		constexpr static rivet::rivet_type_id MarketingCameraXOffset_type_id = 0x9f0af7b3;
		constexpr static std::string_view MarketingCameraYOffset_type_name = "MarketingCameraYOffset";
		constexpr static rivet::rivet_type_id MarketingCameraYOffset_type_id = 0x397dfc07;
		constexpr static std::string_view MarketingCameraZOffset_type_name = "MarketingCameraZOffset";
		constexpr static rivet::rivet_type_id MarketingCameraZOffset_type_id = 0x895e69a;
		constexpr static std::string_view MarketingShakeIntensity_type_name = "MarketingShakeIntensity";
		constexpr static rivet::rivet_type_id MarketingShakeIntensity_type_id = 0x6716a029;
		constexpr static std::string_view MarketingShakeFrequency_type_name = "MarketingShakeFrequency";
		constexpr static rivet::rivet_type_id MarketingShakeFrequency_type_id = 0xa8dba0a8;
		constexpr static std::string_view MarketingNearFocusDistance_type_name = "MarketingNearFocusDistance";
		constexpr static rivet::rivet_type_id MarketingNearFocusDistance_type_id = 0x6832341;
		constexpr static std::string_view MarketingNearApertureScale_type_name = "MarketingNearApertureScale";
		constexpr static rivet::rivet_type_id MarketingNearApertureScale_type_id = 0xc769f15b;
		constexpr static std::string_view MarketingFarFocusDistance_type_name = "MarketingFarFocusDistance";
		constexpr static rivet::rivet_type_id MarketingFarFocusDistance_type_id = 0xc69b05b4;
		constexpr static std::string_view MarketingFarApertureScale_type_name = "MarketingFarApertureScale";
		constexpr static rivet::rivet_type_id MarketingFarApertureScale_type_id = 0x771d7ae; 

		explicit EngineDebugConfig() = default;
		explicit EngineDebugConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MarketingFov {};
		float MarketingCameraRoll {};
		float MarketingCameraPitch {};
		float MarketingCameraYaw {};
		float MarketingCameraXOffset {};
		float MarketingCameraYOffset {};
		float MarketingCameraZOffset {};
		float MarketingShakeIntensity {};
		float MarketingShakeFrequency {};
		float MarketingNearFocusDistance {};
		float MarketingNearApertureScale {};
		float MarketingFarFocusDistance {};
		float MarketingFarApertureScale {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<EngineDebugConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
