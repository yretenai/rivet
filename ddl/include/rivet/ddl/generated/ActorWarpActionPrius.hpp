// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xcf5ccb68.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ActorWarpActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ActorWarpActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x5aa59eb0;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view ForceRelative_type_name = "ForceRelative";
		constexpr static rivet::rivet_type_id ForceRelative_type_id = 0xbcb848a1;
		constexpr static std::string_view Reset_type_name = "Reset";
		constexpr static rivet::rivet_type_id Reset_type_id = 0x49ce738c;
		constexpr static std::string_view ResetType_type_name = "ResetType";
		constexpr static rivet::rivet_type_id ResetType_type_id = 0xa6e9fb75;
		constexpr static std::string_view ResetCamera_type_name = "ResetCamera";
		constexpr static rivet::rivet_type_id ResetCamera_type_id = 0xb3ab2b56;
		constexpr static std::string_view ForceLoadScreen_type_name = "ForceLoadScreen";
		constexpr static rivet::rivet_type_id ForceLoadScreen_type_id = 0xc79490c4;
		constexpr static std::string_view UniqueLoadScreenName_type_name = "UniqueLoadScreenName";
		constexpr static rivet::rivet_type_id UniqueLoadScreenName_type_id = 0xabc70ac1; 

		explicit ActorWarpActionPrius() = default;
		explicit ActorWarpActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		bool ForceRelative {};
		bool Reset {};
		rivet::ddl::generated::xcf5ccb68 ResetType {};
		bool ResetCamera {};
		bool ForceLoadScreen {};
		std::string_view UniqueLoadScreenName {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActorWarpActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
