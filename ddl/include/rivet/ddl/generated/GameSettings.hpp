// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED GameSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "GameSettings";
		constexpr static rivet::rivet_type_id type_id = 0x3e376441;

		constexpr static std::string_view ServerCamEnable_type_name = "ServerCamEnable";
		constexpr static rivet::rivet_type_id ServerCamEnable_type_id = 0x5d76de9a;
		constexpr static std::string_view UseLobby_type_name = "UseLobby";
		constexpr static rivet::rivet_type_id UseLobby_type_id = 0x352d245c;
		constexpr static std::string_view UseFrontend_type_name = "UseFrontend";
		constexpr static rivet::rivet_type_id UseFrontend_type_id = 0x32e14755;
		constexpr static std::string_view AutoLoad_type_name = "AutoLoad";
		constexpr static rivet::rivet_type_id AutoLoad_type_id = 0x129306c4;
		constexpr static std::string_view LanMode_type_name = "LanMode";
		constexpr static rivet::rivet_type_id LanMode_type_id = 0x2386b88d;
		constexpr static std::string_view LateJoinEnable_type_name = "LateJoinEnable";
		constexpr static rivet::rivet_type_id LateJoinEnable_type_id = 0xabc02cde;
		constexpr static std::string_view UnlockMultiplayer_type_name = "UnlockMultiplayer";
		constexpr static rivet::rivet_type_id UnlockMultiplayer_type_id = 0x966e01f8;
		constexpr static std::string_view UnlockMultiplayerSave_type_name = "UnlockMultiplayerSave";
		constexpr static rivet::rivet_type_id UnlockMultiplayerSave_type_id = 0x74126edb;
		constexpr static std::string_view UnlockAllMultiplayer_type_name = "UnlockAllMultiplayer";
		constexpr static rivet::rivet_type_id UnlockAllMultiplayer_type_id = 0x3c43b479;
		constexpr static std::string_view UnlockAll_type_name = "UnlockAll";
		constexpr static rivet::rivet_type_id UnlockAll_type_id = 0x60b4b71f;
		constexpr static std::string_view DoLegal_type_name = "DoLegal";
		constexpr static rivet::rivet_type_id DoLegal_type_id = 0xfe5c7176;
		constexpr static std::string_view AllowPause_type_name = "AllowPause";
		constexpr static rivet::rivet_type_id AllowPause_type_id = 0x802ad5c4;
		constexpr static std::string_view MemorySyncCapture_type_name = "MemorySyncCapture";
		constexpr static rivet::rivet_type_id MemorySyncCapture_type_id = 0x5d53a672;
		constexpr static std::string_view JJJEnabled_type_name = "JJJEnabled";
		constexpr static rivet::rivet_type_id JJJEnabled_type_id = 0xfb0a82c;
		constexpr static std::string_view JJJOptional_type_name = "JJJOptional";
		constexpr static rivet::rivet_type_id JJJOptional_type_id = 0x97ae1c10;
		constexpr static std::string_view JJJDebugUI_type_name = "JJJDebugUI";
		constexpr static rivet::rivet_type_id JJJDebugUI_type_id = 0xdfa2c3ca;
		constexpr static std::string_view JJJTestConfig_type_name = "JJJTestConfig";
		constexpr static rivet::rivet_type_id JJJTestConfig_type_id = 0x14050dee;
		constexpr static std::string_view NewspaperDebugUI_type_name = "NewspaperDebugUI";
		constexpr static rivet::rivet_type_id NewspaperDebugUI_type_id = 0x24b7100c;
		constexpr static std::string_view NewspaperConfig_type_name = "NewspaperConfig";
		constexpr static rivet::rivet_type_id NewspaperConfig_type_id = 0x56e45c3c;
		constexpr static std::string_view UnlockTechWeb_type_name = "UnlockTechWeb";
		constexpr static rivet::rivet_type_id UnlockTechWeb_type_id = 0xb99ea887;
		constexpr static std::string_view AFKDisconnectEnable_type_name = "AFKDisconnectEnable";
		constexpr static rivet::rivet_type_id AFKDisconnectEnable_type_id = 0xc421d800;
		constexpr static std::string_view AFKDisconnectTime_type_name = "AFKDisconnectTime";
		constexpr static rivet::rivet_type_id AFKDisconnectTime_type_id = 0x92880656;
		constexpr static std::string_view ContinueGameLoad_type_name = "ContinueGameLoad";
		constexpr static rivet::rivet_type_id ContinueGameLoad_type_id = 0x681b5e96; 

		explicit GameSettings() = default;
		explicit GameSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool ServerCamEnable {};
		bool UseLobby {};
		bool UseFrontend {};
		bool AutoLoad {};
		bool LanMode {};
		bool LateJoinEnable {};
		bool UnlockMultiplayer {};
		bool UnlockMultiplayerSave {};
		bool UnlockAllMultiplayer {};
		bool UnlockAll {};
		bool DoLegal {};
		bool AllowPause {};
		bool MemorySyncCapture {};
		bool JJJEnabled {};
		bool JJJOptional {};
		bool JJJDebugUI {};
		bool JJJTestConfig {};
		bool NewspaperDebugUI {};
		std::string_view NewspaperConfig {};
		bool UnlockTechWeb {};
		bool AFKDisconnectEnable {};
		float AFKDisconnectTime {};
		bool ContinueGameLoad {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
