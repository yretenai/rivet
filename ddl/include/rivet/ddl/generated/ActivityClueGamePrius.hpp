// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ActivityClueAnimSetData;
	struct ActivityClueModuleWrapper;
	struct ActivityClueSpawnConditionWrapper;
	struct ActivityClueConditionWrapper;
	struct ActivityClueActivityBase; 

	struct RIVET_DDL_SHARED ActivityClueGamePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ActivityClueGamePrius";
		constexpr static rivet::rivet_type_id type_id = 0x619f2dfe;

		constexpr static std::string_view Activity_type_name = "Activity";
		constexpr static rivet::rivet_type_id Activity_type_id = 0x5675b42a;
		constexpr static std::string_view UseConditions_type_name = "UseConditions";
		constexpr static rivet::rivet_type_id UseConditions_type_id = 0xbd3060f1;
		constexpr static std::string_view SelectConditions_type_name = "SelectConditions";
		constexpr static rivet::rivet_type_id SelectConditions_type_id = 0xd6d6c6d9;
		constexpr static std::string_view SpawnConditions_type_name = "SpawnConditions";
		constexpr static rivet::rivet_type_id SpawnConditions_type_id = 0xf0d2646b;
		constexpr static std::string_view Modules_type_name = "Modules";
		constexpr static rivet::rivet_type_id Modules_type_id = 0x2f5d20ef;
		constexpr static std::string_view AnimSets_type_name = "AnimSets";
		constexpr static rivet::rivet_type_id AnimSets_type_id = 0x3492d19; 

		explicit ActivityClueGamePrius() = default;
		explicit ActivityClueGamePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::ActivityClueActivityBase> Activity {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityClueConditionWrapper>> UseConditions {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityClueConditionWrapper>> SelectConditions {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityClueSpawnConditionWrapper>> SpawnConditions {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityClueModuleWrapper>> Modules {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityClueAnimSetData>> AnimSets {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActivityClueGamePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
