// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotComboConditionBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED BotComboConditionClearSpacePrius : BotComboConditionBasePrius {
		constexpr static std::string_view type_name = "BotComboConditionClearSpacePrius";
		constexpr static rivet::rivet_type_id type_id = 0xffc626a9;

		constexpr static std::string_view DistanceForward_type_name = "DistanceForward";
		constexpr static rivet::rivet_type_id DistanceForward_type_id = 0x8528ea3;
		constexpr static std::string_view Height_type_name = "Height";
		constexpr static rivet::rivet_type_id Height_type_id = 0xcb35ab68;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view CheckTargetDirection_type_name = "CheckTargetDirection";
		constexpr static rivet::rivet_type_id CheckTargetDirection_type_id = 0x9ddd0fa1;
		constexpr static std::string_view CheckNavMesh_type_name = "CheckNavMesh";
		constexpr static rivet::rivet_type_id CheckNavMesh_type_id = 0x13367412; 

		explicit BotComboConditionClearSpacePrius() = default;
		explicit BotComboConditionClearSpacePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float DistanceForward {};
		float Height {};
		float Radius {};
		bool CheckTargetDirection {};
		bool CheckNavMesh {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotComboConditionClearSpacePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
