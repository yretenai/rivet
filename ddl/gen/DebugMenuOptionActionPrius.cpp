// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/DebugMenuOptionBooleanActionPrius.hpp>
#include <rivet/ddl/generated/DebugMenuOptionTriggerActionPrius.hpp>
#include <rivet/ddl/generated/DebugMenuOptionNumberActionPrius.hpp>
#include <rivet/ddl/generated/DebugMenuOptionActorGroupActionPrius.hpp> 

#include <rivet/ddl/generated/DebugMenuOptionActionPrius.hpp>

namespace rivet::ddl::generated {
	DebugMenuOptionActionPrius::DebugMenuOptionActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		StartEnabled = serialized->get_bool(StartEnabled_type_id, true); 
	}

	[[nodiscard]] auto
	DebugMenuOptionActionPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	DebugMenuOptionActionPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugMenuOptionActionPrius> {
		if (incoming_type_id == DebugMenuOptionActionPrius::type_id) {
			return std::make_shared<DebugMenuOptionActionPrius>(serialized);
		}

		auto DebugMenuOptionActorGroupActionPrius_ptr = DebugMenuOptionActorGroupActionPrius::from_substruct(incoming_type_id, serialized);
		if (DebugMenuOptionActorGroupActionPrius_ptr != nullptr) {
			return DebugMenuOptionActorGroupActionPrius_ptr;
		}

		auto DebugMenuOptionTriggerActionPrius_ptr = DebugMenuOptionTriggerActionPrius::from_substruct(incoming_type_id, serialized);
		if (DebugMenuOptionTriggerActionPrius_ptr != nullptr) {
			return DebugMenuOptionTriggerActionPrius_ptr;
		}

		auto DebugMenuOptionNumberActionPrius_ptr = DebugMenuOptionNumberActionPrius::from_substruct(incoming_type_id, serialized);
		if (DebugMenuOptionNumberActionPrius_ptr != nullptr) {
			return DebugMenuOptionNumberActionPrius_ptr;
		}

		auto DebugMenuOptionBooleanActionPrius_ptr = DebugMenuOptionBooleanActionPrius::from_substruct(incoming_type_id, serialized);
		if (DebugMenuOptionBooleanActionPrius_ptr != nullptr) {
			return DebugMenuOptionBooleanActionPrius_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
