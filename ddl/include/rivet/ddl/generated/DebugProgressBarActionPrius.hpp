// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector2; 

	struct RIVET_DDL_SHARED DebugProgressBarActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DebugProgressBarActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0xd393f064;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view Label_type_name = "Label";
		constexpr static rivet::rivet_type_id Label_type_id = 0x17f49c29;
		constexpr static std::string_view Position_type_name = "Position";
		constexpr static rivet::rivet_type_id Position_type_id = 0xbc2d5985;
		constexpr static std::string_view Position3D_type_name = "Position3D";
		constexpr static rivet::rivet_type_id Position3D_type_id = 0xd199d9ca;
		constexpr static std::string_view Size_type_name = "Size";
		constexpr static rivet::rivet_type_id Size_type_id = 0xc750e4da;
		constexpr static std::string_view MinMaxValue_type_name = "MinMaxValue";
		constexpr static rivet::rivet_type_id MinMaxValue_type_id = 0xa6f4d168;
		constexpr static std::string_view CurValue_type_name = "CurValue";
		constexpr static rivet::rivet_type_id CurValue_type_id = 0x2369162a;
		constexpr static std::string_view DisplayPercent_type_name = "DisplayPercent";
		constexpr static rivet::rivet_type_id DisplayPercent_type_id = 0x32b9c469;
		constexpr static std::string_view DisplayCurMax_type_name = "DisplayCurMax";
		constexpr static rivet::rivet_type_id DisplayCurMax_type_id = 0x26617650; 

		explicit DebugProgressBarActionPrius() = default;
		explicit DebugProgressBarActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view Label {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Position {};
		bool Position3D {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Size {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> MinMaxValue {};
		float CurValue {};
		bool DisplayPercent {};
		bool DisplayCurMax {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugProgressBarActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
