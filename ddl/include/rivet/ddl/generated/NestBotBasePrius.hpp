// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotPrius.hpp> 

namespace rivet::ddl::generated {
	struct POIInstanceDataBase; 

	struct RIVET_DDL_SHARED NestBotBasePrius : BotPrius {
		constexpr static std::string_view type_name = "NestBotBasePrius";
		constexpr static rivet::rivet_type_id type_id = 0x85a7fb93;

		constexpr static std::string_view ShieldActor_type_name = "ShieldActor";
		constexpr static rivet::rivet_type_id ShieldActor_type_id = 0xb785ec5c;
		constexpr static std::string_view ExplosionRadius_type_name = "ExplosionRadius";
		constexpr static rivet::rivet_type_id ExplosionRadius_type_id = 0x9ad9fc86;
		constexpr static std::string_view ExplosionDamage_type_name = "ExplosionDamage";
		constexpr static rivet::rivet_type_id ExplosionDamage_type_id = 0xb06dc6b0;
		constexpr static std::string_view ShieldHealth_type_name = "ShieldHealth";
		constexpr static rivet::rivet_type_id ShieldHealth_type_id = 0xba976b43;
		constexpr static std::string_view ShieldRespawnDelay_type_name = "ShieldRespawnDelay";
		constexpr static rivet::rivet_type_id ShieldRespawnDelay_type_id = 0x22ba9ca8;
		constexpr static std::string_view InstanceData_type_name = "InstanceData";
		constexpr static rivet::rivet_type_id InstanceData_type_id = 0x8bcc281f;
		constexpr static std::string_view ShieldLink_type_name = "ShieldLink";
		constexpr static rivet::rivet_type_id ShieldLink_type_id = 0x700d04c5;
		constexpr static std::string_view WireGroup_type_name = "WireGroup";
		constexpr static rivet::rivet_type_id WireGroup_type_id = 0x767f5d19;
		constexpr static std::string_view RedWireMaterial_type_name = "RedWireMaterial";
		constexpr static rivet::rivet_type_id RedWireMaterial_type_id = 0xdb0eab01;
		constexpr static std::string_view GreenWireMaterial_type_name = "GreenWireMaterial";
		constexpr static rivet::rivet_type_id GreenWireMaterial_type_id = 0x6173e75c;
		constexpr static std::string_view LookTest_type_name = "LookTest";
		constexpr static rivet::rivet_type_id LookTest_type_id = 0x2bd01e1c; 

		explicit NestBotBasePrius() = default;
		explicit NestBotBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ShieldActor {};
		float ExplosionRadius {};
		float ExplosionDamage {};
		float ShieldHealth {};
		float ShieldRespawnDelay {};
		std::shared_ptr<rivet::ddl::generated::POIInstanceDataBase> InstanceData {};
		uint64_t ShieldLink {};
		uint64_t WireGroup {};
		std::string_view RedWireMaterial {};
		std::string_view GreenWireMaterial {};
		std::string_view LookTest {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<NestBotBasePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
