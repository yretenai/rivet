// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x7756f5e5.hpp> 

namespace rivet::ddl::generated {
	struct DDLMatrix4;
	struct Cinematic2Options;
	struct Cinematic2Def; 

	struct RIVET_DDL_SHARED CinematicCommandEngineItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CinematicCommandEngineItem";
		constexpr static rivet::rivet_type_id type_id = 0x625fa169;

		constexpr static std::string_view Command_type_name = "Command";
		constexpr static rivet::rivet_type_id Command_type_id = 0x8f2089ec;
		constexpr static std::string_view ValueBool_type_name = "ValueBool";
		constexpr static rivet::rivet_type_id ValueBool_type_id = 0x69d095b6;
		constexpr static std::string_view ValueCinematic2Def_type_name = "ValueCinematic2Def";
		constexpr static rivet::rivet_type_id ValueCinematic2Def_type_id = 0x1edff962;
		constexpr static std::string_view ValueCinematic2Options_type_name = "ValueCinematic2Options";
		constexpr static rivet::rivet_type_id ValueCinematic2Options_type_id = 0xab7ec26f;
		constexpr static std::string_view ValueDouble_type_name = "ValueDouble";
		constexpr static rivet::rivet_type_id ValueDouble_type_id = 0x2509cfb5;
		constexpr static std::string_view ValueMatrix_type_name = "ValueMatrix";
		constexpr static rivet::rivet_type_id ValueMatrix_type_id = 0x7dd7c95;
		constexpr static std::string_view ValueString_type_name = "ValueString";
		constexpr static rivet::rivet_type_id ValueString_type_id = 0x61508ff3;
		constexpr static std::string_view ValueTuidSet_type_name = "ValueTuidSet";
		constexpr static rivet::rivet_type_id ValueTuidSet_type_id = 0x8699c128; 

		explicit CinematicCommandEngineItem() = default;
		explicit CinematicCommandEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x7756f5e5 Command {};
		bool ValueBool {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2Def> ValueCinematic2Def {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2Options> ValueCinematic2Options {};
		double ValueDouble {};
		std::shared_ptr<rivet::ddl::generated::DDLMatrix4> ValueMatrix {};
		std::string_view ValueString {};
		std::vector<uint64_t> ValueTuidSet {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CinematicCommandEngineItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
