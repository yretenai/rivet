// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLTransform; 

	struct RIVET_DDL_SHARED MagShieldSuspendedShotPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MagShieldSuspendedShotPrius";
		constexpr static rivet::rivet_type_id type_id = 0x16015872;

		constexpr static std::string_view ReferenceActor_type_name = "ReferenceActor";
		constexpr static rivet::rivet_type_id ReferenceActor_type_id = 0xfd0a00e2;
		constexpr static std::string_view ReferenceMatrix_type_name = "ReferenceMatrix";
		constexpr static rivet::rivet_type_id ReferenceMatrix_type_id = 0xa0ed18f8;
		constexpr static std::string_view ReferenceActorOffset_type_name = "ReferenceActorOffset";
		constexpr static rivet::rivet_type_id ReferenceActorOffset_type_id = 0x6649d42b;
		constexpr static std::string_view ReferenceActorRadius_type_name = "ReferenceActorRadius";
		constexpr static rivet::rivet_type_id ReferenceActorRadius_type_id = 0x43f70a1;
		constexpr static std::string_view ShotNameHash_type_name = "ShotNameHash";
		constexpr static rivet::rivet_type_id ShotNameHash_type_id = 0x289b761f;
		constexpr static std::string_view OriginalShotAsset_type_name = "OriginalShotAsset";
		constexpr static rivet::rivet_type_id OriginalShotAsset_type_id = 0x261a43a; 

		explicit MagShieldSuspendedShotPrius() = default;
		explicit MagShieldSuspendedShotPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t ReferenceActor {};
		std::shared_ptr<rivet::ddl::generated::DDLTransform> ReferenceMatrix {};
		float ReferenceActorOffset {};
		float ReferenceActorRadius {};
		uint32_t ShotNameHash {};
		uint64_t OriginalShotAsset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MagShieldSuspendedShotPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
