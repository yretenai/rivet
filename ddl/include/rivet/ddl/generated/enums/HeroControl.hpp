// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view HeroControl_type_name = "HeroControl";
	constexpr static rivet::rivet_type_id HeroControl_type_id = 0x5316cb93;

	constexpr static std::array<std::string_view, 46> HeroControl_values = {
		"kJump",
		"kGlide",
		"kMelee",
		"kSwapWeapons",
		"kSwingshot",
		"kFire",
		"kAim",
		"kDash",
		"kTransform",
		"kHoverboot",
		"kMagbootLaunch",
		"kLedgeDrop",
		"kLook",
		"kCrouch",
		"kLeft",
		"kRight",
		"kUp",
		"kDown",
		"kDive",
		"kRise",
		"kWrenchThrow",
		"kRiftTether",
		"kDPadUp",
		"kDPadRight",
		"kDPadDown",
		"kDPadLeft",
		"kClankPuzzleRecall",
		"kHoverbootKick",
		"kHoverbootKickAlt",
		"kSprint",
		"kObjectivePing",
		"kWeaponPrevious",
		"kWeaponNext",
		"kWeaponQuickSelect1",
		"kWeaponQuickSelect2",
		"kWeaponQuickSelect3",
		"kWeaponQuickSelect4",
		"kWeaponQuickSelect5",
		"kWeaponQuickSelect6",
		"kWeaponQuickSelect7",
		"kWeaponQuickSelect8",
		"kHeroTouchpadX",
		"kHeroTouchpadY",
		"kHeroTouchpadXPinch2",
		"kHeroTouchpadYPinch2",
		"kMountBoost", 
	};

	enum class HeroControl : uint64_t {
		Jump,
		Glide,
		Melee,
		SwapWeapons,
		Swingshot,
		Fire,
		Aim,
		Dash,
		Transform,
		Hoverboot,
		MagbootLaunch,
		LedgeDrop,
		Look,
		Crouch,
		Left,
		Right,
		Up,
		Down,
		Dive,
		Rise,
		WrenchThrow,
		RiftTether,
		DPadUp,
		DPadRight,
		DPadDown,
		DPadLeft,
		ClankPuzzleRecall,
		HoverbootKick,
		HoverbootKickAlt,
		Sprint,
		ObjectivePing,
		WeaponPrevious,
		WeaponNext,
		WeaponQuickSelect1,
		WeaponQuickSelect2,
		WeaponQuickSelect3,
		WeaponQuickSelect4,
		WeaponQuickSelect5,
		WeaponQuickSelect6,
		WeaponQuickSelect7,
		WeaponQuickSelect8,
		HeroTouchpadX,
		HeroTouchpadY,
		HeroTouchpadXPinch2,
		HeroTouchpadYPinch2,
		MountBoost, 
	};
} // namespace rivet::ddl::generated

// clang-format on
