// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct UIVariationLink;
	struct ShaderSampler;
	struct PreviewModel;
	struct ShaderConstant;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED MaterialTemplateDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MaterialTemplateDef";
		constexpr static rivet::rivet_type_id type_id = 0x858a9193;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view SourcePath_type_name = "SourcePath";
		constexpr static rivet::rivet_type_id SourcePath_type_id = 0x6ccf66b3;
		constexpr static std::string_view PreviewModel_type_name = "PreviewModel";
		constexpr static rivet::rivet_type_id PreviewModel_type_id = 0x5e53ae29;
		constexpr static std::string_view ContentHash_type_name = "ContentHash";
		constexpr static rivet::rivet_type_id ContentHash_type_id = 0x4d6d352;
		constexpr static std::string_view Variations_type_name = "Variations";
		constexpr static rivet::rivet_type_id Variations_type_id = 0x80850167;
		constexpr static std::string_view Constants_type_name = "Constants";
		constexpr static rivet::rivet_type_id Constants_type_id = 0x11306034;
		constexpr static std::string_view Globals_type_name = "Globals";
		constexpr static rivet::rivet_type_id Globals_type_id = 0x6ebd7b22;
		constexpr static std::string_view Textures_type_name = "Textures";
		constexpr static rivet::rivet_type_id Textures_type_id = 0x5f860466;
		constexpr static std::string_view VarLinks_type_name = "VarLinks";
		constexpr static rivet::rivet_type_id VarLinks_type_id = 0x48566894; 

		explicit MaterialTemplateDef() = default;
		explicit MaterialTemplateDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::string_view SourcePath {};
		std::shared_ptr<rivet::ddl::generated::PreviewModel> PreviewModel {};
		uint32_t ContentHash {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ShaderConstant>> Variations {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ShaderConstant>> Constants {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ShaderConstant>> Globals {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ShaderSampler>> Textures {};
		std::vector<std::shared_ptr<rivet::ddl::generated::UIVariationLink>> VarLinks {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MaterialTemplateDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
