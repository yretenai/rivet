// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ItemLoadoutComponentOverrideListElement; 

	struct RIVET_DDL_SHARED ItemLoadoutComponentPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ItemLoadoutComponentPrius";
		constexpr static rivet::rivet_type_id type_id = 0xc08f3081;

		constexpr static std::string_view ItemLoadoutConfig_type_name = "ItemLoadoutConfig";
		constexpr static rivet::rivet_type_id ItemLoadoutConfig_type_id = 0xfa5c64a7;
		constexpr static std::string_view ApplyOnStart_type_name = "ApplyOnStart";
		constexpr static rivet::rivet_type_id ApplyOnStart_type_id = 0x12a817c4;
		constexpr static std::string_view CanDeferLoadout_type_name = "CanDeferLoadout";
		constexpr static rivet::rivet_type_id CanDeferLoadout_type_id = 0x7896fc25;
		constexpr static std::string_view CheckSaveFile_type_name = "CheckSaveFile";
		constexpr static rivet::rivet_type_id CheckSaveFile_type_id = 0x1f2771a6;
		constexpr static std::string_view ResetInventory_type_name = "ResetInventory";
		constexpr static rivet::rivet_type_id ResetInventory_type_id = 0xc31e0661;
		constexpr static std::string_view RandomConfigArray_type_name = "RandomConfigArray";
		constexpr static rivet::rivet_type_id RandomConfigArray_type_id = 0x42787a93;
		constexpr static std::string_view LoadoutOverrideList_type_name = "LoadoutOverrideList";
		constexpr static rivet::rivet_type_id LoadoutOverrideList_type_id = 0x8629f694; 

		explicit ItemLoadoutComponentPrius() = default;
		explicit ItemLoadoutComponentPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ItemLoadoutConfig {};
		bool ApplyOnStart {};
		bool CanDeferLoadout {};
		bool CheckSaveFile {};
		bool ResetInventory {};
		std::vector<std::string_view> RandomConfigArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ItemLoadoutComponentOverrideListElement>> LoadoutOverrideList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ItemLoadoutComponentPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
