// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct Cinematic2MaterialConstOverrideInfo;
	struct Cinematic2MaterialTextureOverrideInfo;
	struct Cinematic2MaterialReplaceInfo; 

	struct RIVET_DDL_SHARED Cinematic2CharacterLookInfo : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Cinematic2CharacterLookInfo";
		constexpr static rivet::rivet_type_id type_id = 0x15df95ae;

		constexpr static std::string_view Looks_type_name = "Looks";
		constexpr static rivet::rivet_type_id Looks_type_id = 0xec785832;
		constexpr static std::string_view MaterialOverrides_type_name = "MaterialOverrides";
		constexpr static rivet::rivet_type_id MaterialOverrides_type_id = 0x68221c5d;
		constexpr static std::string_view MaterialConstOverrides_type_name = "MaterialConstOverrides";
		constexpr static rivet::rivet_type_id MaterialConstOverrides_type_id = 0xb7896f8e;
		constexpr static std::string_view MaterialTextureOverrides_type_name = "MaterialTextureOverrides";
		constexpr static rivet::rivet_type_id MaterialTextureOverrides_type_id = 0x667945b1; 

		explicit Cinematic2CharacterLookInfo() = default;
		explicit Cinematic2CharacterLookInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::string_view> Looks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Cinematic2MaterialReplaceInfo>> MaterialOverrides {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Cinematic2MaterialConstOverrideInfo>> MaterialConstOverrides {};
		std::vector<std::shared_ptr<rivet::ddl::generated::Cinematic2MaterialTextureOverrideInfo>> MaterialTextureOverrides {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2CharacterLookInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
