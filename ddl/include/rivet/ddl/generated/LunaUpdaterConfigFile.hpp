// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct LunaFtpUserConfigFile;
	struct LunaFtpToolsPackageConfigFile;
	struct LunaFtpProjectConfigFile;
	struct LunaFtpInstallerInfo; 

	struct RIVET_DDL_SHARED LunaUpdaterConfigFile : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LunaUpdaterConfigFile";
		constexpr static rivet::rivet_type_id type_id = 0x99caf949;

		constexpr static std::string_view AutoDownloadLatest_type_name = "AutoDownloadLatest";
		constexpr static rivet::rivet_type_id AutoDownloadLatest_type_id = 0x6f99b0a8;
		constexpr static std::string_view AutoStartTools_type_name = "AutoStartTools";
		constexpr static rivet::rivet_type_id AutoStartTools_type_id = 0x34fa76d2;
		constexpr static std::string_view AllowBetaTools_type_name = "AllowBetaTools";
		constexpr static rivet::rivet_type_id AllowBetaTools_type_id = 0xa260f3f8;
		constexpr static std::string_view NumPreviousVersionsToKeep_type_name = "NumPreviousVersionsToKeep";
		constexpr static rivet::rivet_type_id NumPreviousVersionsToKeep_type_id = 0x38c88a52;
		constexpr static std::string_view UpdaterVersion_type_name = "UpdaterVersion";
		constexpr static rivet::rivet_type_id UpdaterVersion_type_id = 0x73b7585;
		constexpr static std::string_view FtpUserId_type_name = "FtpUserId";
		constexpr static rivet::rivet_type_id FtpUserId_type_id = 0x5d27d594;
		constexpr static std::string_view FtpUserPass_type_name = "FtpUserPass";
		constexpr static rivet::rivet_type_id FtpUserPass_type_id = 0x550e42f;
		constexpr static std::string_view FtpUpdaterInstallers_type_name = "FtpUpdaterInstallers";
		constexpr static rivet::rivet_type_id FtpUpdaterInstallers_type_id = 0xb76ebb21;
		constexpr static std::string_view FtpHavokInstallers_type_name = "FtpHavokInstallers";
		constexpr static rivet::rivet_type_id FtpHavokInstallers_type_id = 0x79cdfecf;
		constexpr static std::string_view FtpWinExtInstallers_type_name = "FtpWinExtInstallers";
		constexpr static rivet::rivet_type_id FtpWinExtInstallers_type_id = 0x2f914efb;
		constexpr static std::string_view FtpMaya2018Installers_type_name = "FtpMaya2018Installers";
		constexpr static rivet::rivet_type_id FtpMaya2018Installers_type_id = 0x18fc8d87;
		constexpr static std::string_view FtpMaya2020Installers_type_name = "FtpMaya2020Installers";
		constexpr static rivet::rivet_type_id FtpMaya2020Installers_type_id = 0xd5a1be32;
		constexpr static std::string_view FtpUserConfig_type_name = "FtpUserConfig";
		constexpr static rivet::rivet_type_id FtpUserConfig_type_id = 0x507e1fc4;
		constexpr static std::string_view FtpProjects_type_name = "FtpProjects";
		constexpr static rivet::rivet_type_id FtpProjects_type_id = 0x91fc54e0;
		constexpr static std::string_view FtpBranches_type_name = "FtpBranches";
		constexpr static rivet::rivet_type_id FtpBranches_type_id = 0x1a0f362b;
		constexpr static std::string_view FtpToolsPackages_type_name = "FtpToolsPackages";
		constexpr static rivet::rivet_type_id FtpToolsPackages_type_id = 0xf4e1f26a;
		constexpr static std::string_view FtpLatestToolsPackage_type_name = "FtpLatestToolsPackage";
		constexpr static rivet::rivet_type_id FtpLatestToolsPackage_type_id = 0xb8c63036; 

		explicit LunaUpdaterConfigFile() = default;
		explicit LunaUpdaterConfigFile([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool AutoDownloadLatest {};
		bool AutoStartTools {};
		bool AllowBetaTools {};
		int32_t NumPreviousVersionsToKeep {};
		std::string_view UpdaterVersion {};
		std::string_view FtpUserId {};
		std::string_view FtpUserPass {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpInstallerInfo>> FtpUpdaterInstallers {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpInstallerInfo>> FtpHavokInstallers {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpInstallerInfo>> FtpWinExtInstallers {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpInstallerInfo>> FtpMaya2018Installers {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpInstallerInfo>> FtpMaya2020Installers {};
		std::shared_ptr<rivet::ddl::generated::LunaFtpUserConfigFile> FtpUserConfig {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpProjectConfigFile>> FtpProjects {};
		std::vector<std::string_view> FtpBranches {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpToolsPackageConfigFile>> FtpToolsPackages {};
		int32_t FtpLatestToolsPackage {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LunaUpdaterConfigFile>;
	};
} // namespace rivet::ddl::generated

// clang-format on
