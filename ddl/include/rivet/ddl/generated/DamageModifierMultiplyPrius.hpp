// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/DamageModifierIncomingPrius.hpp>
#include <rivet/ddl/generated/enums/x8d7e44cf.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DamageModifierMultiplyPrius : DamageModifierIncomingPrius {
		constexpr const static std::string_view type_name = "DamageModifierMultiplyPrius";
		constexpr const static rivet::rivet_type_id type_id = 0xcfede227;

		constexpr const static std::string_view Multiplier_type_name = "Multiplier";
		constexpr const static rivet::rivet_type_id Multiplier_type_id = 0x7facf762;
		constexpr const static std::string_view StatusMultiplier_type_name = "StatusMultiplier";
		constexpr const static rivet::rivet_type_id StatusMultiplier_type_id = 0x6fc67017;
		constexpr const static std::string_view Lifetime_type_name = "Lifetime";
		constexpr const static rivet::rivet_type_id Lifetime_type_id = 0xc7e68df8;
		constexpr const static std::string_view ApplyHeal_type_name = "ApplyHeal";
		constexpr const static rivet::rivet_type_id ApplyHeal_type_id = 0xcc7e1ced;
		constexpr const static std::string_view ApplyToKnockdown_type_name = "ApplyToKnockdown";
		constexpr const static rivet::rivet_type_id ApplyToKnockdown_type_id = 0xaae98b21;
		constexpr const static std::string_view DamageFiltersAreExclude_type_name = "DamageFiltersAreExclude";
		constexpr const static rivet::rivet_type_id DamageFiltersAreExclude_type_id = 0xef96e64d;
		constexpr const static std::string_view DamageFilter_type_name = "DamageFilter";
		constexpr const static rivet::rivet_type_id DamageFilter_type_id = 0xa75ecb2f;
		constexpr const static std::string_view AllegianceFilter_type_name = "AllegianceFilter";
		constexpr const static rivet::rivet_type_id AllegianceFilter_type_id = 0x1b32101d;
		constexpr const static std::string_view ModifiedTag_type_name = "ModifiedTag";
		constexpr const static rivet::rivet_type_id ModifiedTag_type_id = 0x75529898; 

		explicit DamageModifierMultiplyPrius() = default;
		explicit DamageModifierMultiplyPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Multiplier {};
		float StatusMultiplier {};
		float Lifetime {};
		bool ApplyHeal {};
		bool ApplyToKnockdown {};
		bool DamageFiltersAreExclude {};
		std::vector<rivet::ddl::generated::x8d7e44cf> DamageFilter {};
		uint32_t AllegianceFilter {};
		uint32_t ModifiedTag {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageModifierMultiplyPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
