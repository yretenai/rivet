// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/AimAssistTraversalModifier.hpp>
#include <rivet/ddl/generated/AimAssistMultiTargetModifier.hpp>
#include <rivet/ddl/generated/AimAssistTurnMatchModifier.hpp>
#include <rivet/ddl/generated/AimAssistMoveTurnModifier.hpp>
#include <rivet/ddl/generated/AimAssistRelativeSpeedModifier.hpp>
#include <rivet/ddl/generated/AimAssistDistanceModifier.hpp> 

#include <rivet/ddl/generated/AimAssistFactorModifiers.hpp>

namespace rivet::ddl::generated {
	AimAssistFactorModifiers::AimAssistFactorModifiers([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		DistanceMod = serialized->unwrap_into<rivet::ddl::generated::AimAssistDistanceModifier>(DistanceMod_type_id);
		SpeedMod = serialized->unwrap_into<rivet::ddl::generated::AimAssistRelativeSpeedModifier>(SpeedMod_type_id);
		MoveTurnMod = serialized->unwrap_into<rivet::ddl::generated::AimAssistMoveTurnModifier>(MoveTurnMod_type_id);
		TurnMatchMod = serialized->unwrap_into<rivet::ddl::generated::AimAssistTurnMatchModifier>(TurnMatchMod_type_id);
		ManyTargetMod = serialized->unwrap_into<rivet::ddl::generated::AimAssistMultiTargetModifier>(ManyTargetMod_type_id);
		TraversalMod = serialized->unwrap_into<rivet::ddl::generated::AimAssistTraversalModifier>(TraversalMod_type_id); 
	}

	[[nodiscard]] auto
	AimAssistFactorModifiers::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	AimAssistFactorModifiers::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AimAssistFactorModifiers> {
		if (incoming_type_id == AimAssistFactorModifiers::type_id) {
			return std::make_shared<AimAssistFactorModifiers>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
