// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x6f4fd950.hpp>
#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SoundEvent : EventBase {
		constexpr static std::string_view type_name = "SoundEvent";
		constexpr static rivet::rivet_type_id type_id = 0x3609711f;

		constexpr static std::string_view Action_type_name = "Action";
		constexpr static rivet::rivet_type_id Action_type_id = 0x79b4c2f5;
		constexpr static std::string_view SoundBankPath_type_name = "SoundBankPath";
		constexpr static rivet::rivet_type_id SoundBankPath_type_id = 0x3c660c64;
		constexpr static std::string_view SoundEventName_type_name = "SoundEventName";
		constexpr static rivet::rivet_type_id SoundEventName_type_id = 0x9c64655a;
		constexpr static std::string_view EventInitiator_type_name = "EventInitiator";
		constexpr static rivet::rivet_type_id EventInitiator_type_id = 0xfd9e2a20;
		constexpr static std::string_view TriggerLocator_type_name = "TriggerLocator";
		constexpr static rivet::rivet_type_id TriggerLocator_type_id = 0x85b17d52; 

		explicit SoundEvent() = default;
		explicit SoundEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x6f4fd950 Action {};
		std::string_view SoundBankPath {};
		std::string_view SoundEventName {};
		std::string_view EventInitiator {};
		std::string_view TriggerLocator {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SoundEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
