// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xfb0b3aad.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED POISuppressorPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "POISuppressorPrius";
		constexpr static rivet::rivet_type_id type_id = 0x6d6ad3db;

		constexpr static std::string_view Priority_type_name = "Priority";
		constexpr static rivet::rivet_type_id Priority_type_id = 0x98a76157;
		constexpr static std::string_view AutoDeleteTimer_type_name = "AutoDeleteTimer";
		constexpr static rivet::rivet_type_id AutoDeleteTimer_type_id = 0x3f9460c6;
		constexpr static std::string_view UseActorPosition_type_name = "UseActorPosition";
		constexpr static rivet::rivet_type_id UseActorPosition_type_id = 0x423eb5c8;
		constexpr static std::string_view Dynamic_type_name = "Dynamic";
		constexpr static rivet::rivet_type_id Dynamic_type_id = 0x4a41698c;
		constexpr static std::string_view OverridePosition_type_name = "OverridePosition";
		constexpr static rivet::rivet_type_id OverridePosition_type_id = 0x1b00f200;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d; 

		explicit POISuppressorPrius() = default;
		explicit POISuppressorPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xfb0b3aad Priority {};
		float AutoDeleteTimer {};
		bool UseActorPosition {};
		bool Dynamic {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> OverridePosition {};
		float Radius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<POISuppressorPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
