// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/StatusEffectTrackerBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED StatusEffectTrackerFreezePrius : StatusEffectTrackerBasePrius {
		constexpr static std::string_view type_name = "StatusEffectTrackerFreezePrius";
		constexpr static rivet::rivet_type_id type_id = 0x1d83afb1;

		constexpr static std::string_view IntroAnim_type_name = "IntroAnim";
		constexpr static rivet::rivet_type_id IntroAnim_type_id = 0xf227a2c3;
		constexpr static std::string_view LoopAnim_type_name = "LoopAnim";
		constexpr static rivet::rivet_type_id LoopAnim_type_id = 0x8334a2d8;
		constexpr static std::string_view BreakOutAnim_type_name = "BreakOutAnim";
		constexpr static rivet::rivet_type_id BreakOutAnim_type_id = 0x2808cae0;
		constexpr static std::string_view DeathAnim_type_name = "DeathAnim";
		constexpr static rivet::rivet_type_id DeathAnim_type_id = 0xf9dd5a6;
		constexpr static std::string_view IceActor_type_name = "IceActor";
		constexpr static rivet::rivet_type_id IceActor_type_id = 0xf1769ff8;
		constexpr static std::string_view IceAttachLocator_type_name = "IceAttachLocator";
		constexpr static rivet::rivet_type_id IceAttachLocator_type_id = 0x6b4adf6a; 

		explicit StatusEffectTrackerFreezePrius() = default;
		explicit StatusEffectTrackerFreezePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view IntroAnim {};
		std::string_view LoopAnim {};
		std::string_view BreakOutAnim {};
		std::string_view DeathAnim {};
		std::string_view IceActor {};
		std::string_view IceAttachLocator {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<StatusEffectTrackerFreezePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
