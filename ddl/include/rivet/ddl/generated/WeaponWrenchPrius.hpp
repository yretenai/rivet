// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x3133560c.hpp>
#include <rivet/ddl/generated/WeaponMeleePrius.hpp> 

namespace rivet::ddl::generated {
	struct ThrownWeaponDamageInfo;
	struct WeaponPickupAttachment; 

	struct RIVET_DDL_SHARED WeaponWrenchPrius : WeaponMeleePrius {
		constexpr const static std::string_view type_name = "WeaponWrenchPrius";
		constexpr const static rivet::rivet_type_id type_id = 0x758e6188;

		constexpr const static std::string_view ThrowDamageInfo_type_name = "ThrowDamageInfo";
		constexpr const static rivet::rivet_type_id ThrowDamageInfo_type_id = 0x451c6d0;
		constexpr const static std::string_view ThrowOrientation_type_name = "ThrowOrientation";
		constexpr const static rivet::rivet_type_id ThrowOrientation_type_id = 0x82982dfa;
		constexpr const static std::string_view ThrowPickupAttachment_type_name = "ThrowPickupAttachment";
		constexpr const static rivet::rivet_type_id ThrowPickupAttachment_type_id = 0x7bf606ec; 

		explicit WeaponWrenchPrius() = default;
		explicit WeaponWrenchPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::ThrownWeaponDamageInfo> ThrowDamageInfo {};
		rivet::ddl::generated::x3133560c ThrowOrientation {};
		std::shared_ptr<rivet::ddl::generated::WeaponPickupAttachment> ThrowPickupAttachment {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponWrenchPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
