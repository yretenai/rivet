// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED IdealDistanceParamsDDL : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "IdealDistanceParamsDDL";
		constexpr static rivet::rivet_type_id type_id = 0xcd539866;

		constexpr static std::string_view IdealMinDistance_type_name = "IdealMinDistance";
		constexpr static rivet::rivet_type_id IdealMinDistance_type_id = 0x53c1d680;
		constexpr static std::string_view IdealMaxDistance_type_name = "IdealMaxDistance";
		constexpr static rivet::rivet_type_id IdealMaxDistance_type_id = 0x9fccad8f;
		constexpr static std::string_view MinChaseSpeed_type_name = "MinChaseSpeed";
		constexpr static rivet::rivet_type_id MinChaseSpeed_type_id = 0xcd80b81a;
		constexpr static std::string_view MaxChaseSpeed_type_name = "MaxChaseSpeed";
		constexpr static rivet::rivet_type_id MaxChaseSpeed_type_id = 0x8dcfc06c;
		constexpr static std::string_view Deceleration_type_name = "Deceleration";
		constexpr static rivet::rivet_type_id Deceleration_type_id = 0xc9ee30a8;
		constexpr static std::string_view Acceleration_type_name = "Acceleration";
		constexpr static rivet::rivet_type_id Acceleration_type_id = 0xb9f88dfb; 

		explicit IdealDistanceParamsDDL() = default;
		explicit IdealDistanceParamsDDL([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float IdealMinDistance {};
		float IdealMaxDistance {};
		float MinChaseSpeed {};
		float MaxChaseSpeed {};
		float Deceleration {};
		float Acceleration {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<IdealDistanceParamsDDL>;
	};
} // namespace rivet::ddl::generated

// clang-format on
