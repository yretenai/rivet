// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct OrientationMode;
	struct FalloffData;
	struct OffsetReductionMode; 

	struct RIVET_DDL_SHARED ShotMotionBasePrius : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "ShotMotionBasePrius";
		constexpr const static rivet::rivet_type_id type_id = 0xbbb4ed1b;

		constexpr const static std::string_view Orientation_type_name = "Orientation";
		constexpr const static rivet::rivet_type_id Orientation_type_id = 0xbb5c948d;
		constexpr const static std::string_view Range_type_name = "Range";
		constexpr const static rivet::rivet_type_id Range_type_id = 0x8ad49688;
		constexpr const static std::string_view Falloff_type_name = "Falloff";
		constexpr const static rivet::rivet_type_id Falloff_type_id = 0x4e874fc0;
		constexpr const static std::string_view OffsetMode_type_name = "OffsetMode";
		constexpr const static rivet::rivet_type_id OffsetMode_type_id = 0xbefa1d79;
		constexpr const static std::string_view RespondToProjectiles_type_name = "RespondToProjectiles";
		constexpr const static rivet::rivet_type_id RespondToProjectiles_type_id = 0xe4577ed3;
		constexpr const static std::string_view IgnoreDeadBots_type_name = "IgnoreDeadBots";
		constexpr const static rivet::rivet_type_id IgnoreDeadBots_type_id = 0x1f654a52;
		constexpr const static std::string_view SendSyncMotionEvents_type_name = "SendSyncMotionEvents";
		constexpr const static rivet::rivet_type_id SendSyncMotionEvents_type_id = 0xd3c00b25;
		constexpr const static std::string_view HitMoveCollision_type_name = "HitMoveCollision";
		constexpr const static rivet::rivet_type_id HitMoveCollision_type_id = 0x9e652c14;
		constexpr const static std::string_view HitWaterCollision_type_name = "HitWaterCollision";
		constexpr const static rivet::rivet_type_id HitWaterCollision_type_id = 0x27c2f21c;
		constexpr const static std::string_view HitThrowables_type_name = "HitThrowables";
		constexpr const static rivet::rivet_type_id HitThrowables_type_id = 0xe823a48f;
		constexpr const static std::string_view HitCharacterMove_type_name = "HitCharacterMove";
		constexpr const static rivet::rivet_type_id HitCharacterMove_type_id = 0xd5a99bda; 

		explicit ShotMotionBasePrius() = default;
		explicit ShotMotionBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::OrientationMode> Orientation {};
		float Range {};
		std::shared_ptr<rivet::ddl::generated::FalloffData> Falloff {};
		std::shared_ptr<rivet::ddl::generated::OffsetReductionMode> OffsetMode {};
		bool RespondToProjectiles {};
		bool IgnoreDeadBots {};
		bool SendSyncMotionEvents {};
		bool HitMoveCollision {};
		bool HitWaterCollision {};
		bool HitThrowables {};
		bool HitCharacterMove {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ShotMotionBasePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
