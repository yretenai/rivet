// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/DamageLOSTypes.hpp>
#include <rivet/ddl/generated/LobbedShotPrius.hpp>
#include <rivet/ddl/generated/enums/x8d7e44cf.hpp> 

namespace rivet::ddl::generated {
	struct GrenadeExplosionMode;
	struct DamageModifierExplosionPrius; 

	struct RIVET_DDL_SHARED GrenadeShotPrius : LobbedShotPrius {
		constexpr const static std::string_view type_name = "GrenadeShotPrius";
		constexpr const static rivet::rivet_type_id type_id = 0xdf75dc39;

		constexpr const static std::string_view ExplosionMode_type_name = "ExplosionMode";
		constexpr const static rivet::rivet_type_id ExplosionMode_type_id = 0x42591e47;
		constexpr const static std::string_view ExplosionDamageType_type_name = "ExplosionDamageType";
		constexpr const static rivet::rivet_type_id ExplosionDamageType_type_id = 0x9eca2505;
		constexpr const static std::string_view ExplosionData_type_name = "ExplosionData";
		constexpr const static rivet::rivet_type_id ExplosionData_type_id = 0x7860aa8f;
		constexpr const static std::string_view DamageLOSType_type_name = "DamageLOSType";
		constexpr const static rivet::rivet_type_id DamageLOSType_type_id = 0x4762f7df; 

		explicit GrenadeShotPrius() = default;
		explicit GrenadeShotPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::GrenadeExplosionMode> ExplosionMode {};
		rivet::ddl::generated::x8d7e44cf ExplosionDamageType {};
		std::shared_ptr<rivet::ddl::generated::DamageModifierExplosionPrius> ExplosionData {};
		rivet::ddl::generated::DamageLOSTypes DamageLOSType {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GrenadeShotPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
