// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x51b3e0b1.hpp>
#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED Cinematic2CameraPaneEvent : EventBase {
		constexpr static std::string_view type_name = "Cinematic2CameraPaneEvent";
		constexpr static rivet::rivet_type_id type_id = 0x97ee272a;

		constexpr static std::string_view EventType_type_name = "EventType";
		constexpr static rivet::rivet_type_id EventType_type_id = 0xf2b5bb32;
		constexpr static std::string_view TransitionDuration_type_name = "TransitionDuration";
		constexpr static rivet::rivet_type_id TransitionDuration_type_id = 0x30805030;
		constexpr static std::string_view DebugId_type_name = "DebugId";
		constexpr static rivet::rivet_type_id DebugId_type_id = 0x22a9b272;
		constexpr static std::string_view DebugTime_type_name = "DebugTime";
		constexpr static rivet::rivet_type_id DebugTime_type_id = 0x7f467751; 

		explicit Cinematic2CameraPaneEvent() = default;
		explicit Cinematic2CameraPaneEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x51b3e0b1 EventType {};
		float TransitionDuration {};
		uint64_t DebugId {};
		float DebugTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2CameraPaneEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
