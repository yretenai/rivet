// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/GPUPerformanceBudgetView.hpp>

namespace rivet::ddl::generated {
	GPUPerformanceBudgetView::GPUPerformanceBudgetView([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Name = serialized->get_string(Name_type_id, "DefaultBudget");
		All = serialized->get_float(All_type_id, 0.000000f);
		Unknown = serialized->get_float(Unknown_type_id, 0.000000f);
		Animation = serialized->get_float(Animation_type_id, 0.000000f);
		Audio = serialized->get_float(Audio_type_id, 0.000000f);
		Character = serialized->get_float(Character_type_id, 0.000000f);
		Core = serialized->get_float(Core_type_id, 0.000000f);
		Creative = serialized->get_float(Creative_type_id, 0.000000f);
		Design = serialized->get_float(Design_type_id, 0.000000f);
		Environment = serialized->get_float(Environment_type_id, 0.000000f);
		FX = serialized->get_float(FX_type_id, 0.000000f);
		Gameplay = serialized->get_float(Gameplay_type_id, 0.000000f);
		Lighting = serialized->get_float(Lighting_type_id, 0.000000f);
		Rigging = serialized->get_float(Rigging_type_id, 0.000000f);
		UIArt = serialized->get_float(UIArt_type_id, 0.000000f);
		Shared = serialized->get_float(Shared_type_id, 0.000000f);
		Trash = serialized->get_float(Trash_type_id, 0.000000f);
		Unowned = serialized->get_float(Unowned_type_id, 0.000000f);
		Starvation = serialized->get_float(Starvation_type_id, 0.000000f); 
	}

	[[nodiscard]] auto
	GPUPerformanceBudgetView::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	GPUPerformanceBudgetView::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GPUPerformanceBudgetView> {
		if (incoming_type_id == GPUPerformanceBudgetView::type_id) {
			return std::make_shared<GPUPerformanceBudgetView>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
