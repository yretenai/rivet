// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xbc02c29e.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SimpleAnimComponentPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SimpleAnimComponentPrius";
		constexpr static rivet::rivet_type_id type_id = 0x220f77fe;

		constexpr static std::string_view AnimSet_type_name = "AnimSet";
		constexpr static rivet::rivet_type_id AnimSet_type_id = 0xffcf15f1;
		constexpr static std::string_view MaxUpdateDistance_type_name = "MaxUpdateDistance";
		constexpr static rivet::rivet_type_id MaxUpdateDistance_type_id = 0x75ad2b16;
		constexpr static std::string_view MaxCulledUpdateDistance_type_name = "MaxCulledUpdateDistance";
		constexpr static rivet::rivet_type_id MaxCulledUpdateDistance_type_id = 0xb617c44;
		constexpr static std::string_view SmallTreeDepth_type_name = "SmallTreeDepth";
		constexpr static rivet::rivet_type_id SmallTreeDepth_type_id = 0xc3ecdbf7;
		constexpr static std::string_view PartialCount_type_name = "PartialCount";
		constexpr static rivet::rivet_type_id PartialCount_type_id = 0x4dd15e04; 

		explicit SimpleAnimComponentPrius() = default;
		explicit SimpleAnimComponentPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view AnimSet {};
		float MaxUpdateDistance {};
		float MaxCulledUpdateDistance {};
		bool SmallTreeDepth {};
		rivet::ddl::generated::xbc02c29e PartialCount {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SimpleAnimComponentPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
