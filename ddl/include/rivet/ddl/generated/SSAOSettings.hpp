// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SSAOSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SSAOSettings";
		constexpr static rivet::rivet_type_id type_id = 0x391ab7c;

		constexpr static std::string_view RTContribution_type_name = "RTContribution";
		constexpr static rivet::rivet_type_id RTContribution_type_id = 0xc800a1ee;
		constexpr static std::string_view RTRadiusScale_type_name = "RTRadiusScale";
		constexpr static rivet::rivet_type_id RTRadiusScale_type_id = 0xdd471146;
		constexpr static std::string_view ThinOcclAdjust_type_name = "ThinOcclAdjust";
		constexpr static rivet::rivet_type_id ThinOcclAdjust_type_id = 0x76c91ca4;
		constexpr static std::string_view MinRadius_type_name = "MinRadius";
		constexpr static rivet::rivet_type_id MinRadius_type_id = 0x50e7abb6; 

		explicit SSAOSettings() = default;
		explicit SSAOSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float RTContribution {};
		float RTRadiusScale {};
		float ThinOcclAdjust {};
		float MinRadius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SSAOSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
