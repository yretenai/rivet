// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED GameBotDoomSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "GameBotDoomSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x93c86dde;

		constexpr static std::string_view OwnerHandle_type_name = "OwnerHandle";
		constexpr static rivet::rivet_type_id OwnerHandle_type_id = 0x6151ad8f;
		constexpr static std::string_view ShotHandle_type_name = "ShotHandle";
		constexpr static rivet::rivet_type_id ShotHandle_type_id = 0xf47be90b;
		constexpr static std::string_view AssetId_type_name = "AssetId";
		constexpr static rivet::rivet_type_id AssetId_type_id = 0xb6e788d7;
		constexpr static std::string_view ZoneIndex_type_name = "ZoneIndex";
		constexpr static rivet::rivet_type_id ZoneIndex_type_id = 0xc9266b7;
		constexpr static std::string_view WeaponId_type_name = "WeaponId";
		constexpr static rivet::rivet_type_id WeaponId_type_id = 0x902af590;
		constexpr static std::string_view Lifetime_type_name = "Lifetime";
		constexpr static rivet::rivet_type_id Lifetime_type_id = 0xc7e68df8;
		constexpr static std::string_view MeleeDamage_type_name = "MeleeDamage";
		constexpr static rivet::rivet_type_id MeleeDamage_type_id = 0x16a1bbe8;
		constexpr static std::string_view MaxMeleeDamage_type_name = "MaxMeleeDamage";
		constexpr static rivet::rivet_type_id MaxMeleeDamage_type_id = 0x3f8157c8;
		constexpr static std::string_view ExplodeDamage_type_name = "ExplodeDamage";
		constexpr static rivet::rivet_type_id ExplodeDamage_type_id = 0x9d3dffd2;
		constexpr static std::string_view ExplodeRadius_type_name = "ExplodeRadius";
		constexpr static rivet::rivet_type_id ExplodeRadius_type_id = 0xb789c5e4;
		constexpr static std::string_view Speed_type_name = "Speed";
		constexpr static rivet::rivet_type_id Speed_type_id = 0x16753237;
		constexpr static std::string_view AwarenessRange_type_name = "AwarenessRange";
		constexpr static rivet::rivet_type_id AwarenessRange_type_id = 0xbf395be1;
		constexpr static std::string_view SpawnPos_type_name = "SpawnPos";
		constexpr static rivet::rivet_type_id SpawnPos_type_id = 0x45e23d0f;
		constexpr static std::string_view Facing_type_name = "Facing";
		constexpr static rivet::rivet_type_id Facing_type_id = 0xb37847ee;
		constexpr static std::string_view Up_type_name = "Up";
		constexpr static rivet::rivet_type_id Up_type_id = 0x76fcc3ad;
		constexpr static std::string_view LandPos_type_name = "LandPos";
		constexpr static rivet::rivet_type_id LandPos_type_id = 0xc6ab960e;
		constexpr static std::string_view MaxDistanceMod_type_name = "MaxDistanceMod";
		constexpr static rivet::rivet_type_id MaxDistanceMod_type_id = 0xfe1d4900;
		constexpr static std::string_view MaxHeightMod_type_name = "MaxHeightMod";
		constexpr static rivet::rivet_type_id MaxHeightMod_type_id = 0x111be174;
		constexpr static std::string_view IsUpgraded_type_name = "IsUpgraded";
		constexpr static rivet::rivet_type_id IsUpgraded_type_id = 0x253c8e18; 

		explicit GameBotDoomSpawnData() = default;
		explicit GameBotDoomSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t OwnerHandle {};
		uint32_t ShotHandle {};
		uint64_t AssetId {};
		int32_t ZoneIndex {};
		uint32_t WeaponId {};
		float Lifetime {};
		float MeleeDamage {};
		float MaxMeleeDamage {};
		float ExplodeDamage {};
		float ExplodeRadius {};
		float Speed {};
		float AwarenessRange {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnPos {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Facing {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Up {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> LandPos {};
		float MaxDistanceMod {};
		float MaxHeightMod {};
		bool IsUpgraded {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GameBotDoomSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
