// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/BuildSettings.hpp>

namespace rivet::ddl::generated {
	BuildSettings::BuildSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		AssetBranch = serialized->get_string(AssetBranch_type_id);
		VersionTag = serialized->get_string(VersionTag_type_id);
		ArchiveAssetsChangelist = serialized->get_int32(ArchiveAssetsChangelist_type_id);
		TimeZone = serialized->get_string(TimeZone_type_id); 
	}

	[[nodiscard]] auto
	BuildSettings::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	BuildSettings::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BuildSettings> {
		if (incoming_type_id == BuildSettings::type_id) {
			return std::make_shared<BuildSettings>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
