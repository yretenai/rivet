// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x190611d9.hpp> 

namespace rivet::ddl::generated {
	struct CameraShakingWithFallOffData; 

	struct RIVET_DDL_SHARED ClankBotPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ClankBotPrius";
		constexpr static rivet::rivet_type_id type_id = 0x8dbc1d41;

		constexpr static std::string_view Role_type_name = "Role";
		constexpr static rivet::rivet_type_id Role_type_id = 0x67f94ada;
		constexpr static std::string_view ClankBot_type_name = "ClankBot";
		constexpr static rivet::rivet_type_id ClankBot_type_id = 0x42cf1de2;
		constexpr static std::string_view PowerBot_type_name = "PowerBot";
		constexpr static rivet::rivet_type_id PowerBot_type_id = 0xe5df935;
		constexpr static std::string_view SpringBot_type_name = "SpringBot";
		constexpr static rivet::rivet_type_id SpringBot_type_id = 0x1366e7c7;
		constexpr static std::string_view StretchBot_type_name = "StretchBot";
		constexpr static rivet::rivet_type_id StretchBot_type_id = 0xc9d669e7;
		constexpr static std::string_view StretchPieces_type_name = "StretchPieces";
		constexpr static rivet::rivet_type_id StretchPieces_type_id = 0xc5cecd34;
		constexpr static std::string_view StretchPieceVis_type_name = "StretchPieceVis";
		constexpr static rivet::rivet_type_id StretchPieceVis_type_id = 0x1d4afc57;
		constexpr static std::string_view ArcHeight_type_name = "ArcHeight";
		constexpr static rivet::rivet_type_id ArcHeight_type_id = 0x38e49f4a;
		constexpr static std::string_view GravMultiplier_type_name = "GravMultiplier";
		constexpr static rivet::rivet_type_id GravMultiplier_type_id = 0x1d761e6f;
		constexpr static std::string_view SpringRadius_type_name = "SpringRadius";
		constexpr static rivet::rivet_type_id SpringRadius_type_id = 0x11b3976f;
		constexpr static std::string_view ShakeData_type_name = "ShakeData";
		constexpr static rivet::rivet_type_id ShakeData_type_id = 0x9c710c08; 

		explicit ClankBotPrius() = default;
		explicit ClankBotPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x190611d9 Role {};
		std::string_view ClankBot {};
		std::string_view PowerBot {};
		std::string_view SpringBot {};
		std::string_view StretchBot {};
		std::string_view StretchPieces {};
		std::string_view StretchPieceVis {};
		float ArcHeight {};
		float GravMultiplier {};
		float SpringRadius {};
		std::shared_ptr<rivet::ddl::generated::CameraShakingWithFallOffData> ShakeData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ClankBotPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
