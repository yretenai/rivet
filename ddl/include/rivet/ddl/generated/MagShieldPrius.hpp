// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MagShieldPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MagShieldPrius";
		constexpr static rivet::rivet_type_id type_id = 0x86d80657;

		constexpr static std::string_view SuspendedShotAsset_type_name = "SuspendedShotAsset";
		constexpr static rivet::rivet_type_id SuspendedShotAsset_type_id = 0xa311f7c;
		constexpr static std::string_view SuspendedLaserAsset_type_name = "SuspendedLaserAsset";
		constexpr static rivet::rivet_type_id SuspendedLaserAsset_type_id = 0x8c17043a;
		constexpr static std::string_view CameraShakeCollectImpact_type_name = "CameraShakeCollectImpact";
		constexpr static rivet::rivet_type_id CameraShakeCollectImpact_type_id = 0xa943cf8b;
		constexpr static std::string_view CameraShakeFullImpact_type_name = "CameraShakeFullImpact";
		constexpr static rivet::rivet_type_id CameraShakeFullImpact_type_id = 0xe9a54ce9;
		constexpr static std::string_view DeployDuration_type_name = "DeployDuration";
		constexpr static rivet::rivet_type_id DeployDuration_type_id = 0x1d2d739b; 

		explicit MagShieldPrius() = default;
		explicit MagShieldPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view SuspendedShotAsset {};
		std::string_view SuspendedLaserAsset {};
		std::string_view CameraShakeCollectImpact {};
		std::string_view CameraShakeFullImpact {};
		float DeployDuration {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MagShieldPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
