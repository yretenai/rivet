// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/HeroPortalZipLineData.hpp>

namespace rivet::ddl::generated {
	HeroPortalZipLineData::HeroPortalZipLineData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		LaunchSpeed = serialized->get_float(LaunchSpeed_type_id);
		LaunchMaxHeight = serialized->get_float(LaunchMaxHeight_type_id);
		LaunchDistanceForMaxHeight = serialized->get_float(LaunchDistanceForMaxHeight_type_id);
		LaunchMinTime = serialized->get_float(LaunchMinTime_type_id);
		LaunchMaxTime = serialized->get_float(LaunchMaxTime_type_id);
		TautTime = serialized->get_float(TautTime_type_id);
		TautMinAmplitude = serialized->get_float(TautMinAmplitude_type_id);
		TautMaxAmplitude = serialized->get_float(TautMaxAmplitude_type_id);
		TautFrequency = serialized->get_float(TautFrequency_type_id);
		RecoilMinWaveLength = serialized->get_float(RecoilMinWaveLength_type_id);
		RecoilMaxAmplitude = serialized->get_float(RecoilMaxAmplitude_type_id);
		ProjectileActor = serialized->get_string(ProjectileActor_type_id);
		ProjectileActorScale = serialized->get_float(ProjectileActorScale_type_id);
		SplineMaterial = serialized->get_string(SplineMaterial_type_id);
		SplineWidth = serialized->get_float(SplineWidth_type_id);
		SplineTilingDistance = serialized->get_float(SplineTilingDistance_type_id); 
	}

	auto
	HeroPortalZipLineData::get_type_id() const noexcept -> rivet::rivet_type_id {
		return type_id;
	}

	[[nodiscard]] auto
	HeroPortalZipLineData::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	HeroPortalZipLineData::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroPortalZipLineData> {
		if (incoming_type_id == HeroPortalZipLineData::type_id) {
			return std::make_shared<HeroPortalZipLineData>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
