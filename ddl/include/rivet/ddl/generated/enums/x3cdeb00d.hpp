// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x3cdeb00d_type_name = "x3cdeb00d";
	constexpr static rivet::rivet_type_id x3cdeb00d_type_id = 0x3cdeb00d;

	constexpr static std::array<std::string_view, 10> x3cdeb00d_values = {
		"kPathPlanar",
		"kPathFull",
		"kPlaced",
		"kPlacedPlusPath",
		"kPlacedPlusPathPlanar",
		"kStop",
		"kLookAtHero",
		"kLookAtActor",
		"kPlacedPlusLookAtActor",
		"kMatchActor", 
	};

	constexpr static std::array<std::string_view, 10> x3cdeb00d_labels = {
		"Path Planar",
		"Path Full",
		"As Placed",
		"Placed Plus Path",
		"Placed Plus Path Planar",
		"Stop Match",
		"Look At Hero",
		"Look At Actor",
		"Placed Plus Look At Actor",
		"Match Actor", 
	};

	enum class x3cdeb00d : uint64_t {
		Path_Planar,
		Path_Full,
		As_Placed,
		Placed_Plus_Path,
		Placed_Plus_Path_Planar,
		Stop_Match,
		Look_At_Hero,
		Look_At_Actor,
		Placed_Plus_Look_At_Actor,
		Match_Actor, 
	};
} // namespace rivet::ddl::generated

// clang-format on
