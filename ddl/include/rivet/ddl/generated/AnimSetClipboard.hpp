// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct AnimTriggerTrack;
	struct AnimSetCommentDef;
	struct AnimDriverDef;
	struct AnimTriggerEventDef;
	struct AnimClipGroupEntryDef;
	struct AnimClipGroupElemDef;
	struct AnimClipGroupDef; 

	struct RIVET_DDL_SHARED AnimSetClipboard : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimSetClipboard";
		constexpr static rivet::rivet_type_id type_id = 0x8064fea3;

		constexpr static std::string_view AnimClipAssetPathArray_type_name = "AnimClipAssetPathArray";
		constexpr static rivet::rivet_type_id AnimClipAssetPathArray_type_id = 0xdb9a291f;
		constexpr static std::string_view AnimClipGroupArray_type_name = "AnimClipGroupArray";
		constexpr static rivet::rivet_type_id AnimClipGroupArray_type_id = 0xfd283164;
		constexpr static std::string_view AnimClipGroupElemArray_type_name = "AnimClipGroupElemArray";
		constexpr static rivet::rivet_type_id AnimClipGroupElemArray_type_id = 0xbcf76bc6;
		constexpr static std::string_view AnimClipGroupEntryArray_type_name = "AnimClipGroupEntryArray";
		constexpr static rivet::rivet_type_id AnimClipGroupEntryArray_type_id = 0xc6c06e84;
		constexpr static std::string_view AnimDriverArray_type_name = "AnimDriverArray";
		constexpr static rivet::rivet_type_id AnimDriverArray_type_id = 0x6079439e;
		constexpr static std::string_view AnimDriverDataArray_type_name = "AnimDriverDataArray";
		constexpr static rivet::rivet_type_id AnimDriverDataArray_type_id = 0x1552f444;
		constexpr static std::string_view AnimSetComments_type_name = "AnimSetComments";
		constexpr static rivet::rivet_type_id AnimSetComments_type_id = 0xef37e745;
		constexpr static std::string_view AnimTriggerTracks_type_name = "AnimTriggerTracks";
		constexpr static rivet::rivet_type_id AnimTriggerTracks_type_id = 0x323e66d7;
		constexpr static std::string_view AnimTriggers_type_name = "AnimTriggers";
		constexpr static rivet::rivet_type_id AnimTriggers_type_id = 0x1b4a1e8d; 

		explicit AnimSetClipboard() = default;
		explicit AnimSetClipboard([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::string_view> AnimClipAssetPathArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimClipGroupDef>> AnimClipGroupArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimClipGroupElemDef>> AnimClipGroupElemArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimClipGroupEntryDef>> AnimClipGroupEntryArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimDriverDef>> AnimDriverArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimDriverDef>> AnimDriverDataArray {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetCommentDef>> AnimSetComments {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimTriggerTrack>> AnimTriggerTracks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimTriggerEventDef>> AnimTriggers {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimSetClipboard>;
	};
} // namespace rivet::ddl::generated

// clang-format on
