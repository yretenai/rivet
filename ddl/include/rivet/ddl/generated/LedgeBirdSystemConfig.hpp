// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct DimensionalPulseTargetFlockPrius;
	struct LedgeBirdType; 

	struct RIVET_DDL_SHARED LedgeBirdSystemConfig : ConfigBase {
		constexpr const static std::string_view type_name = "LedgeBirdSystemConfig";
		constexpr const static rivet::rivet_type_id type_id = 0xbd2fc977;

		constexpr const static std::string_view MaxHeroSpeed_type_name = "MaxHeroSpeed";
		constexpr const static rivet::rivet_type_id MaxHeroSpeed_type_id = 0xdb34a3f;
		constexpr const static std::string_view StopSpawnDistance_type_name = "StopSpawnDistance";
		constexpr const static rivet::rivet_type_id StopSpawnDistance_type_id = 0x41cafbf3;
		constexpr const static std::string_view MinSpawnDistance_type_name = "MinSpawnDistance";
		constexpr const static rivet::rivet_type_id MinSpawnDistance_type_id = 0xef1087b4;
		constexpr const static std::string_view MaxSpawnDistance_type_name = "MaxSpawnDistance";
		constexpr const static rivet::rivet_type_id MaxSpawnDistance_type_id = 0xbee93ce9;
		constexpr const static std::string_view LedgeSpawnCooldown_type_name = "LedgeSpawnCooldown";
		constexpr const static rivet::rivet_type_id LedgeSpawnCooldown_type_id = 0x444cc687;
		constexpr const static std::string_view MaxSpawnedFlocks_type_name = "MaxSpawnedFlocks";
		constexpr const static rivet::rivet_type_id MaxSpawnedFlocks_type_id = 0x3acfae85;
		constexpr const static std::string_view SpawnQueryDimensions_type_name = "SpawnQueryDimensions";
		constexpr const static rivet::rivet_type_id SpawnQueryDimensions_type_id = 0x2c50d568;
		constexpr const static std::string_view CulledLedgeDespawnTime_type_name = "CulledLedgeDespawnTime";
		constexpr const static rivet::rivet_type_id CulledLedgeDespawnTime_type_id = 0x40255610;
		constexpr const static std::string_view OffscreenFleeDespawnTime_type_name = "OffscreenFleeDespawnTime";
		constexpr const static rivet::rivet_type_id OffscreenFleeDespawnTime_type_id = 0xdab894d2;
		constexpr const static std::string_view FleeDistance_type_name = "FleeDistance";
		constexpr const static rivet::rivet_type_id FleeDistance_type_id = 0x84061f99;
		constexpr const static std::string_view FleeDistanceCoeffY_type_name = "FleeDistanceCoeffY";
		constexpr const static rivet::rivet_type_id FleeDistanceCoeffY_type_id = 0xe892a6d4;
		constexpr const static std::string_view InitialLoadDelay_type_name = "InitialLoadDelay";
		constexpr const static rivet::rivet_type_id InitialLoadDelay_type_id = 0x6bc8e325;
		constexpr const static std::string_view MinLedgeRespawnTime_type_name = "MinLedgeRespawnTime";
		constexpr const static rivet::rivet_type_id MinLedgeRespawnTime_type_id = 0x135ac45a;
		constexpr const static std::string_view FleeFromPulses_type_name = "FleeFromPulses";
		constexpr const static rivet::rivet_type_id FleeFromPulses_type_id = 0x97e14b23;
		constexpr const static std::string_view PulseFlockTargetPrius_type_name = "PulseFlockTargetPrius";
		constexpr const static rivet::rivet_type_id PulseFlockTargetPrius_type_id = 0xefb78e9c;
		constexpr const static std::string_view BirdTypes_type_name = "BirdTypes";
		constexpr const static rivet::rivet_type_id BirdTypes_type_id = 0x6f844477; 

		explicit LedgeBirdSystemConfig() = default;
		explicit LedgeBirdSystemConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MaxHeroSpeed {};
		float StopSpawnDistance {};
		float MinSpawnDistance {};
		float MaxSpawnDistance {};
		float LedgeSpawnCooldown {};
		int32_t MaxSpawnedFlocks {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnQueryDimensions {};
		float CulledLedgeDespawnTime {};
		float OffscreenFleeDespawnTime {};
		float FleeDistance {};
		float FleeDistanceCoeffY {};
		float InitialLoadDelay {};
		float MinLedgeRespawnTime {};
		bool FleeFromPulses {};
		std::shared_ptr<rivet::ddl::generated::DimensionalPulseTargetFlockPrius> PulseFlockTargetPrius {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LedgeBirdType>> BirdTypes {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LedgeBirdSystemConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
