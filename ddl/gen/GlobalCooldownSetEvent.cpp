// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/GlobalCooldownSetEvent.hpp>

namespace rivet::ddl::generated {
	GlobalCooldownSetEvent::GlobalCooldownSetEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): EventBase(serialized) {
		CooldownType = serialized->get_enum<rivet::ddl::generated::x942b54f2>(CooldownType_type_id, rivet::ddl::generated::x942b54f2_values);
		CooldownDuration = serialized->get_float(CooldownDuration_type_id); 
	}

	[[nodiscard]] auto
	GlobalCooldownSetEvent::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	GlobalCooldownSetEvent::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GlobalCooldownSetEvent> {
		if (incoming_type_id == GlobalCooldownSetEvent::type_id) {
			return std::make_shared<GlobalCooldownSetEvent>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
