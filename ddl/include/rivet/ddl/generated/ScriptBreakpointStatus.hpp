// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ScriptBreakpointStatus : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ScriptBreakpointStatus";
		constexpr static rivet::rivet_type_id type_id = 0x9c8c6439;

		constexpr static std::string_view SourceId_type_name = "SourceId";
		constexpr static rivet::rivet_type_id SourceId_type_id = 0x1414e790;
		constexpr static std::string_view ScriptId_type_name = "ScriptId";
		constexpr static rivet::rivet_type_id ScriptId_type_id = 0x86c92af9;
		constexpr static std::string_view SourcePlug_type_name = "SourcePlug";
		constexpr static rivet::rivet_type_id SourcePlug_type_id = 0xedb3d930;
		constexpr static std::string_view ScriptPlug_type_name = "ScriptPlug";
		constexpr static rivet::rivet_type_id ScriptPlug_type_id = 0xbc59250e;
		constexpr static std::string_view Status_type_name = "Status";
		constexpr static rivet::rivet_type_id Status_type_id = 0x45782b7b; 

		explicit ScriptBreakpointStatus() = default;
		explicit ScriptBreakpointStatus([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t SourceId {};
		uint64_t ScriptId {};
		uint32_t SourcePlug {};
		uint32_t ScriptPlug {};
		std::string_view Status {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ScriptBreakpointStatus>;
	};
} // namespace rivet::ddl::generated

// clang-format on
