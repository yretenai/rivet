// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED TendrilControllerSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "TendrilControllerSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0xdc3cc11e;

		constexpr static std::string_view StartPos_type_name = "StartPos";
		constexpr static rivet::rivet_type_id StartPos_type_id = 0x46e92197;
		constexpr static std::string_view BiasDir_type_name = "BiasDir";
		constexpr static rivet::rivet_type_id BiasDir_type_id = 0xf2b0b75;
		constexpr static std::string_view MinAngleFromBias_type_name = "MinAngleFromBias";
		constexpr static rivet::rivet_type_id MinAngleFromBias_type_id = 0x24febd9a;
		constexpr static std::string_view MaxAngleFromBias_type_name = "MaxAngleFromBias";
		constexpr static rivet::rivet_type_id MaxAngleFromBias_type_id = 0x750706c7;
		constexpr static std::string_view DamagePerTendril_type_name = "DamagePerTendril";
		constexpr static rivet::rivet_type_id DamagePerTendril_type_id = 0xd533c312;
		constexpr static std::string_view TargetingRadius_type_name = "TargetingRadius";
		constexpr static rivet::rivet_type_id TargetingRadius_type_id = 0xe72b6cf8;
		constexpr static std::string_view DamageRequestFlags_type_name = "DamageRequestFlags";
		constexpr static rivet::rivet_type_id DamageRequestFlags_type_id = 0x65d7dac2;
		constexpr static std::string_view Owner_type_name = "Owner";
		constexpr static rivet::rivet_type_id Owner_type_id = 0xd6332abd;
		constexpr static std::string_view RandSeed_type_name = "RandSeed";
		constexpr static rivet::rivet_type_id RandSeed_type_id = 0xc72a9f26;
		constexpr static std::string_view TendrilCount_type_name = "TendrilCount";
		constexpr static rivet::rivet_type_id TendrilCount_type_id = 0x7d6256f4; 

		explicit TendrilControllerSpawnData() = default;
		explicit TendrilControllerSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLVector3> StartPos {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> BiasDir {};
		float MinAngleFromBias {};
		float MaxAngleFromBias {};
		float DamagePerTendril {};
		float TargetingRadius {};
		uint32_t DamageRequestFlags {};
		uint32_t Owner {};
		uint32_t RandSeed {};
		uint8_t TendrilCount {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TendrilControllerSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
