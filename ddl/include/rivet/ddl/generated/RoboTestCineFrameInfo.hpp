// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RobotTestActionEventInfo;
	struct RobotestCineFrameActorInfo;
	struct RobotTestCineEnableShotActor;
	struct DDLTransform; 

	struct RIVET_DDL_SHARED RoboTestCineFrameInfo : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RoboTestCineFrameInfo";
		constexpr static rivet::rivet_type_id type_id = 0x9675bf31;

		constexpr static std::string_view TestName_type_name = "TestName";
		constexpr static rivet::rivet_type_id TestName_type_id = 0x3006a975;
		constexpr static std::string_view CurrentCineTime_type_name = "CurrentCineTime";
		constexpr static rivet::rivet_type_id CurrentCineTime_type_id = 0x8c7ed954;
		constexpr static std::string_view Status_type_name = "Status";
		constexpr static rivet::rivet_type_id Status_type_id = 0x45782b7b;
		constexpr static std::string_view CinematicAsset_type_name = "CinematicAsset";
		constexpr static rivet::rivet_type_id CinematicAsset_type_id = 0xc8c00481;
		constexpr static std::string_view Transform_type_name = "Transform";
		constexpr static rivet::rivet_type_id Transform_type_id = 0xf54f1ea1;
		constexpr static std::string_view EnabledShotActors_type_name = "EnabledShotActors";
		constexpr static rivet::rivet_type_id EnabledShotActors_type_id = 0x81b250f5;
		constexpr static std::string_view ActorInfos_type_name = "ActorInfos";
		constexpr static rivet::rivet_type_id ActorInfos_type_id = 0x9950b1b8;
		constexpr static std::string_view ActionEvents_type_name = "ActionEvents";
		constexpr static rivet::rivet_type_id ActionEvents_type_id = 0xfa534adc; 

		explicit RoboTestCineFrameInfo() = default;
		explicit RoboTestCineFrameInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view TestName {};
		float CurrentCineTime {};
		std::string_view Status {};
		std::string_view CinematicAsset {};
		std::shared_ptr<rivet::ddl::generated::DDLTransform> Transform {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RobotTestCineEnableShotActor>> EnabledShotActors {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RobotestCineFrameActorInfo>> ActorInfos {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RobotTestActionEventInfo>> ActionEvents {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RoboTestCineFrameInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
