// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x184da46c_type_name = "x184da46c";
	constexpr static rivet::rivet_type_id x184da46c_type_id = 0x184da46c;

	constexpr static std::array<std::tuple<std::string_view, uint64_t>, 12> x184da46c_values = {
		std::make_tuple("kWarnProgrammer", 0x1),
		std::make_tuple("kWarnDesigner", 0x2),
		std::make_tuple("kWarnEnvArtist", 0x4),
		std::make_tuple("kWarnCharArtist", 0x8),
		std::make_tuple("kWarnVFX", 0x10),
		std::make_tuple("kWarnAudio", 0x20),
		std::make_tuple("kWarnAnimator", 0x40),
		std::make_tuple("kWarnWriter", 0x80),
		std::make_tuple("kWarnUI", 0x100),
		std::make_tuple("kWarnScriptBreakpoint", 0x200),
		std::make_tuple("kWarnNone", 0x0),
		std::make_tuple("kWarnEveryone", 0x1ff), 
	};

	enum class x184da46c : uint64_t {
		WarnProgrammer = 0x1,
		WarnDesigner = 0x2,
		WarnEnvArtist = 0x4,
		WarnCharArtist = 0x8,
		WarnVFX = 0x10,
		WarnAudio = 0x20,
		WarnAnimator = 0x40,
		WarnWriter = 0x80,
		WarnUI = 0x100,
		WarnScriptBreakpoint = 0x200,
		WarnNone = 0x0,
		WarnEveryone = 0x1ff, 
	};
} // namespace rivet::ddl::generated

// clang-format on
