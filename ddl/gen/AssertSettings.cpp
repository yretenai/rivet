// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/AssertSettings.hpp>

namespace rivet::ddl::generated {
	AssertSettings::AssertSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		CallStackEnable = serialized->get_bool(CallStackEnable_type_id);
		ProfilerStackEnable = serialized->get_bool(ProfilerStackEnable_type_id);
		CallStackDeferredInitialization = serialized->get_bool(CallStackDeferredInitialization_type_id);
		UnhandledExceptionMode = serialized->get_enum<rivet::ddl::generated::xd839f866>(UnhandledExceptionMode_type_id, rivet::ddl::generated::xd839f866_values);
		FatalAssertMode = serialized->get_enum<rivet::ddl::generated::xd839f866>(FatalAssertMode_type_id, rivet::ddl::generated::xd839f866_values);
		AssertMode = serialized->get_enum<rivet::ddl::generated::xd839f866>(AssertMode_type_id, rivet::ddl::generated::xd839f866_values);
		WarningFilter = serialized->get_string(WarningFilter_type_id);
		LogFile = serialized->get_string(LogFile_type_id);
		AppendToLogFile = serialized->get_bool(AppendToLogFile_type_id);
		CrashDumpMode = serialized->get_enum<rivet::ddl::generated::xb022b3f7>(CrashDumpMode_type_id, rivet::ddl::generated::xb022b3f7_values);
		UseToolTransmitter = serialized->get_bool(UseToolTransmitter_type_id);
		EveryAssertIsFatal = serialized->get_bool(EveryAssertIsFatal_type_id); 
	}

	[[nodiscard]] auto
	AssertSettings::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	AssertSettings::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AssertSettings> {
		if (incoming_type_id == AssertSettings::type_id) {
			return std::make_shared<AssertSettings>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
