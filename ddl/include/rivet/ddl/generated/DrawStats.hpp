// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DrawStats : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DrawStats";
		constexpr static rivet::rivet_type_id type_id = 0xe04c087c;

		constexpr static std::string_view TextureCount_type_name = "TextureCount";
		constexpr static rivet::rivet_type_id TextureCount_type_id = 0xb30175cf;
		constexpr static std::string_view MaterialCount_type_name = "MaterialCount";
		constexpr static rivet::rivet_type_id MaterialCount_type_id = 0x722c94dd;
		constexpr static std::string_view IndexCount_type_name = "IndexCount";
		constexpr static rivet::rivet_type_id IndexCount_type_id = 0x698b9d17;
		constexpr static std::string_view IndexedVertexCount_type_name = "IndexedVertexCount";
		constexpr static rivet::rivet_type_id IndexedVertexCount_type_id = 0x7a666a9b;
		constexpr static std::string_view UnindexedVertexCount_type_name = "UnindexedVertexCount";
		constexpr static rivet::rivet_type_id UnindexedVertexCount_type_id = 0x8ec7c0de;
		constexpr static std::string_view InstanceCount_type_name = "InstanceCount";
		constexpr static rivet::rivet_type_id InstanceCount_type_id = 0xe4ea923;
		constexpr static std::string_view DrawCount_type_name = "DrawCount";
		constexpr static rivet::rivet_type_id DrawCount_type_id = 0x32d22bb4; 

		explicit DrawStats() = default;
		explicit DrawStats([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t TextureCount {};
		uint32_t MaterialCount {};
		uint32_t IndexCount {};
		uint32_t IndexedVertexCount {};
		uint32_t UnindexedVertexCount {};
		uint32_t InstanceCount {};
		uint32_t DrawCount {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DrawStats>;
	};
} // namespace rivet::ddl::generated

// clang-format on
