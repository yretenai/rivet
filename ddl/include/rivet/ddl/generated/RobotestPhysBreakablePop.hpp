// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RobotestPhysBreakableChunkInfo;
	struct RobotestBasicActorInfo; 

	struct RIVET_DDL_SHARED RobotestPhysBreakablePop : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RobotestPhysBreakablePop";
		constexpr static rivet::rivet_type_id type_id = 0x94fc4b53;

		constexpr static std::string_view TestName_type_name = "TestName";
		constexpr static rivet::rivet_type_id TestName_type_id = 0x3006a975;
		constexpr static std::string_view Actor_type_name = "Actor";
		constexpr static rivet::rivet_type_id Actor_type_id = 0x5d269a38;
		constexpr static std::string_view ChunkPoolInUse_type_name = "ChunkPoolInUse";
		constexpr static rivet::rivet_type_id ChunkPoolInUse_type_id = 0x14157602;
		constexpr static std::string_view ChunkPoolMax_type_name = "ChunkPoolMax";
		constexpr static rivet::rivet_type_id ChunkPoolMax_type_id = 0xee5fde09;
		constexpr static std::string_view MinRadius_type_name = "MinRadius";
		constexpr static rivet::rivet_type_id MinRadius_type_id = 0x50e7abb6;
		constexpr static std::string_view AddToIndex_type_name = "AddToIndex";
		constexpr static rivet::rivet_type_id AddToIndex_type_id = 0xfa1fe8db;
		constexpr static std::string_view ChunkSpawnCountIdeal_type_name = "ChunkSpawnCountIdeal";
		constexpr static rivet::rivet_type_id ChunkSpawnCountIdeal_type_id = 0x8c1cd124;
		constexpr static std::string_view DebrisPerChunk_type_name = "DebrisPerChunk";
		constexpr static rivet::rivet_type_id DebrisPerChunk_type_id = 0xdb12bd6a;
		constexpr static std::string_view Chunks_type_name = "Chunks";
		constexpr static rivet::rivet_type_id Chunks_type_id = 0xf9358ad2; 

		explicit RobotestPhysBreakablePop() = default;
		explicit RobotestPhysBreakablePop([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view TestName {};
		std::shared_ptr<rivet::ddl::generated::RobotestBasicActorInfo> Actor {};
		uint16_t ChunkPoolInUse {};
		uint16_t ChunkPoolMax {};
		float MinRadius {};
		float AddToIndex {};
		uint16_t ChunkSpawnCountIdeal {};
		int16_t DebrisPerChunk {};
		std::vector<std::shared_ptr<rivet::ddl::generated::RobotestPhysBreakableChunkInfo>> Chunks {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RobotestPhysBreakablePop>;
	};
} // namespace rivet::ddl::generated

// clang-format on
