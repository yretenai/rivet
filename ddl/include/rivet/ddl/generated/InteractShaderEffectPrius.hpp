// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x8f7f2e3.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED InteractShaderEffectPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "InteractShaderEffectPrius";
		constexpr static rivet::rivet_type_id type_id = 0x7ca388b5;

		constexpr static std::string_view EffectType_type_name = "EffectType";
		constexpr static rivet::rivet_type_id EffectType_type_id = 0x609bd7db;
		constexpr static std::string_view ShaderAttribute_type_name = "ShaderAttribute";
		constexpr static rivet::rivet_type_id ShaderAttribute_type_id = 0xc911b025;
		constexpr static std::string_view MinValue_type_name = "MinValue";
		constexpr static rivet::rivet_type_id MinValue_type_id = 0xe2893042;
		constexpr static std::string_view MaxValue_type_name = "MaxValue";
		constexpr static rivet::rivet_type_id MaxValue_type_id = 0x4e99fa3;
		constexpr static std::string_view DeltaSpeed_type_name = "DeltaSpeed";
		constexpr static rivet::rivet_type_id DeltaSpeed_type_id = 0xa24aed72; 

		explicit InteractShaderEffectPrius() = default;
		explicit InteractShaderEffectPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x8f7f2e3 EffectType {};
		std::string_view ShaderAttribute {};
		float MinValue {};
		float MaxValue {};
		float DeltaSpeed {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<InteractShaderEffectPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
