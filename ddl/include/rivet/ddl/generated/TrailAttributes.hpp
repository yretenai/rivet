// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TrailAttributes : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TrailAttributes";
		constexpr static rivet::rivet_type_id type_id = 0xf205bf26;

		constexpr static std::string_view DistanceThreshold_type_name = "DistanceThreshold";
		constexpr static rivet::rivet_type_id DistanceThreshold_type_id = 0xe3819433;
		constexpr static std::string_view ParticleLifetime_type_name = "ParticleLifetime";
		constexpr static rivet::rivet_type_id ParticleLifetime_type_id = 0xf80df77f;
		constexpr static std::string_view CreaseFading_type_name = "CreaseFading";
		constexpr static rivet::rivet_type_id CreaseFading_type_id = 0x60e79162;
		constexpr static std::string_view Subdivision_type_name = "Subdivision";
		constexpr static rivet::rivet_type_id Subdivision_type_id = 0x965bab46;
		constexpr static std::string_view MaxLength_type_name = "MaxLength";
		constexpr static rivet::rivet_type_id MaxLength_type_id = 0xbd0de91f;
		constexpr static std::string_view UV0Tiling_type_name = "UV0Tiling";
		constexpr static rivet::rivet_type_id UV0Tiling_type_id = 0xf8890730;
		constexpr static std::string_view UV1Tiling_type_name = "UV1Tiling";
		constexpr static rivet::rivet_type_id UV1Tiling_type_id = 0x5efe0c84; 

		explicit TrailAttributes() = default;
		explicit TrailAttributes([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float DistanceThreshold {};
		float ParticleLifetime {};
		bool CreaseFading {};
		float Subdivision {};
		float MaxLength {};
		float UV0Tiling {};
		float UV1Tiling {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TrailAttributes>;
	};
} // namespace rivet::ddl::generated

// clang-format on
