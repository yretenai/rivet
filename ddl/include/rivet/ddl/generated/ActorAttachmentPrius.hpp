// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct CurveAttachmentItem;
	struct JointAttachmentItem; 

	struct RIVET_DDL_SHARED ActorAttachmentPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ActorAttachmentPrius";
		constexpr static rivet::rivet_type_id type_id = 0x9c92ff8f;

		constexpr static std::string_view AttachedList_type_name = "AttachedList";
		constexpr static rivet::rivet_type_id AttachedList_type_id = 0xe6e52d78;
		constexpr static std::string_view JointAttachList_type_name = "JointAttachList";
		constexpr static rivet::rivet_type_id JointAttachList_type_id = 0x16ce71af;
		constexpr static std::string_view CurveAttachList_type_name = "CurveAttachList";
		constexpr static rivet::rivet_type_id CurveAttachList_type_id = 0xe29b1947;
		constexpr static std::string_view DestroyAttachmentsOnDestroy_type_name = "DestroyAttachmentsOnDestroy";
		constexpr static rivet::rivet_type_id DestroyAttachmentsOnDestroy_type_id = 0xea296149; 

		explicit ActorAttachmentPrius() = default;
		explicit ActorAttachmentPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<uint64_t> AttachedList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::JointAttachmentItem>> JointAttachList {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CurveAttachmentItem>> CurveAttachList {};
		bool DestroyAttachmentsOnDestroy {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActorAttachmentPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
