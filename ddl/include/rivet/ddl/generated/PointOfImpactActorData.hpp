// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/TargetType.hpp>
#include <rivet/ddl/generated/enums/ActorOrientation.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PointOfImpactActorData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PointOfImpactActorData";
		constexpr static rivet::rivet_type_id type_id = 0x3d2a0fb3;

		constexpr static std::string_view PointOfImpactActor_type_name = "PointOfImpactActor";
		constexpr static rivet::rivet_type_id PointOfImpactActor_type_id = 0x52fba301;
		constexpr static std::string_view ScalePointOfImpactActor_type_name = "ScalePointOfImpactActor";
		constexpr static rivet::rivet_type_id ScalePointOfImpactActor_type_id = 0xd96005f9;
		constexpr static std::string_view PointOfImpactSize_type_name = "PointOfImpactSize";
		constexpr static rivet::rivet_type_id PointOfImpactSize_type_id = 0x1a90e993;
		constexpr static std::string_view ImpactActorSkipDepth_type_name = "ImpactActorSkipDepth";
		constexpr static rivet::rivet_type_id ImpactActorSkipDepth_type_id = 0x559378e3;
		constexpr static std::string_view ApplyMaterialToImpactActor_type_name = "ApplyMaterialToImpactActor";
		constexpr static rivet::rivet_type_id ApplyMaterialToImpactActor_type_id = 0x19e8f40d;
		constexpr static std::string_view ActorOrientation_type_name = "ActorOrientation";
		constexpr static rivet::rivet_type_id ActorOrientation_type_id = 0xa073542a;
		constexpr static std::string_view TargetTypes_type_name = "TargetTypes";
		constexpr static rivet::rivet_type_id TargetTypes_type_id = 0x85109145; 

		explicit PointOfImpactActorData() = default;
		explicit PointOfImpactActorData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view PointOfImpactActor {};
		bool ScalePointOfImpactActor {};
		float PointOfImpactSize {};
		bool ImpactActorSkipDepth {};
		bool ApplyMaterialToImpactActor {};
		rivet::ddl::generated::ActorOrientation ActorOrientation {};
		rivet::ddl::generated::TargetType TargetTypes {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PointOfImpactActorData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
