// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED UserProfileDevstatsEvent : EventBase {
		constexpr static std::string_view type_name = "UserProfileDevstatsEvent";
		constexpr static rivet::rivet_type_id type_id = 0x80075b2d;

		constexpr static std::string_view psn_account_type_name = "psn_account";
		constexpr static rivet::rivet_type_id psn_account_type_id = 0x7b66310e;
		constexpr static std::string_view np_account_id_type_name = "np_account_id";
		constexpr static rivet::rivet_type_id np_account_id_type_id = 0xc08ba6d6;
		constexpr static std::string_view language_type_name = "language";
		constexpr static rivet::rivet_type_id language_type_id = 0xd7acae93;
		constexpr static std::string_view region_type_name = "region";
		constexpr static rivet::rivet_type_id region_type_id = 0x36b6ba27;
		constexpr static std::string_view is_guest_type_name = "is_guest";
		constexpr static rivet::rivet_type_id is_guest_type_id = 0xe33ca663;
		constexpr static std::string_view age_type_name = "age";
		constexpr static rivet::rivet_type_id age_type_id = 0xb3287f9b;
		constexpr static std::string_view restrict_chat_type_name = "restrict_chat";
		constexpr static rivet::rivet_type_id restrict_chat_type_id = 0xb4ce10e5;
		constexpr static std::string_view restrict_ugm_type_name = "restrict_ugm";
		constexpr static rivet::rivet_type_id restrict_ugm_type_id = 0x532b5dae; 

		explicit UserProfileDevstatsEvent() = default;
		explicit UserProfileDevstatsEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view psn_account {};
		uint64_t np_account_id {};
		std::string_view language {};
		std::string_view region {};
		bool is_guest {};
		int32_t age {};
		bool restrict_chat {};
		bool restrict_ugm {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UserProfileDevstatsEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
