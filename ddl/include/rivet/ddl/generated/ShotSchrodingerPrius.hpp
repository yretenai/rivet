// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ShotBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct ShotDamageData;
	struct ShotMotionSchrodingerOrbitPrius;
	struct ShotMotionSchrodingerDisappearPrius; 

	struct RIVET_DDL_SHARED ShotSchrodingerPrius : ShotBasePrius {
		constexpr const static std::string_view type_name = "ShotSchrodingerPrius";
		constexpr const static rivet::rivet_type_id type_id = 0x984a2d98;

		constexpr const static std::string_view ImpactDamage_type_name = "ImpactDamage";
		constexpr const static rivet::rivet_type_id ImpactDamage_type_id = 0xca54c0af;
		constexpr const static std::string_view AttachedDamage_type_name = "AttachedDamage";
		constexpr const static rivet::rivet_type_id AttachedDamage_type_id = 0xc355a942;
		constexpr const static std::string_view AttachedData_type_name = "AttachedData";
		constexpr const static rivet::rivet_type_id AttachedData_type_id = 0xfde2603;
		constexpr const static std::string_view DisappearData_type_name = "DisappearData";
		constexpr const static rivet::rivet_type_id DisappearData_type_id = 0xfb1bc4ec; 

		explicit ShotSchrodingerPrius() = default;
		explicit ShotSchrodingerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::ShotDamageData> ImpactDamage {};
		std::shared_ptr<rivet::ddl::generated::ShotDamageData> AttachedDamage {};
		std::shared_ptr<rivet::ddl::generated::ShotMotionSchrodingerOrbitPrius> AttachedData {};
		std::shared_ptr<rivet::ddl::generated::ShotMotionSchrodingerDisappearPrius> DisappearData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ShotSchrodingerPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
