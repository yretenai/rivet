// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x1c7d74ff.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PhysicsMaterialPropertiesParam : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "PhysicsMaterialPropertiesParam";
		constexpr const static rivet::rivet_type_id type_id = 0xbd3c26f7;

		constexpr const static std::string_view DynamicFriction_type_name = "DynamicFriction";
		constexpr const static rivet::rivet_type_id DynamicFriction_type_id = 0x42a5a5b6;
		constexpr const static std::string_view DynFrictionCombinePolicy_type_name = "DynFrictionCombinePolicy";
		constexpr const static rivet::rivet_type_id DynFrictionCombinePolicy_type_id = 0x55cfa570;
		constexpr const static std::string_view StaticFriction_type_name = "StaticFriction";
		constexpr const static rivet::rivet_type_id StaticFriction_type_id = 0x54e83e16;
		constexpr const static std::string_view Restitution_type_name = "Restitution";
		constexpr const static rivet::rivet_type_id Restitution_type_id = 0xc2747146;
		constexpr const static std::string_view RestitutionCombinePolicy_type_name = "RestitutionCombinePolicy";
		constexpr const static rivet::rivet_type_id RestitutionCombinePolicy_type_id = 0x2ed93ad9;
		constexpr const static std::string_view SoftContactForceFactor_type_name = "SoftContactForceFactor";
		constexpr const static rivet::rivet_type_id SoftContactForceFactor_type_id = 0xad38544e;
		constexpr const static std::string_view SoftContactDampFactor_type_name = "SoftContactDampFactor";
		constexpr const static rivet::rivet_type_id SoftContactDampFactor_type_id = 0xebcff8d2;
		constexpr const static std::string_view SoftContactSepVelocity_type_name = "SoftContactSepVelocity";
		constexpr const static rivet::rivet_type_id SoftContactSepVelocity_type_id = 0xb57d6391; 

		explicit PhysicsMaterialPropertiesParam() = default;
		explicit PhysicsMaterialPropertiesParam([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float DynamicFriction {};
		rivet::ddl::generated::x1c7d74ff DynFrictionCombinePolicy {};
		float StaticFriction {};
		float Restitution {};
		rivet::ddl::generated::x1c7d74ff RestitutionCombinePolicy {};
		float SoftContactForceFactor {};
		float SoftContactDampFactor {};
		float SoftContactSepVelocity {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PhysicsMaterialPropertiesParam>;
	};
} // namespace rivet::ddl::generated

// clang-format on
