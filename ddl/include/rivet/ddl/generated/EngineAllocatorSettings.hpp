// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xba58b2b9.hpp> 

namespace rivet::ddl::generated {
	struct HeapTemplate; 

	struct RIVET_DDL_SHARED EngineAllocatorSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "EngineAllocatorSettings";
		constexpr static rivet::rivet_type_id type_id = 0x2b1585ee;

		constexpr static std::string_view DynamicHeapTemplate_type_name = "DynamicHeapTemplate";
		constexpr static rivet::rivet_type_id DynamicHeapTemplate_type_id = 0xa6ce9a88;
		constexpr static std::string_view DDLHeapTemplate_type_name = "DDLHeapTemplate";
		constexpr static rivet::rivet_type_id DDLHeapTemplate_type_id = 0xb1065603;
		constexpr static std::string_view AssetHeapTemplate_type_name = "AssetHeapTemplate";
		constexpr static rivet::rivet_type_id AssetHeapTemplate_type_id = 0x3569fd0d;
		constexpr static std::string_view PhysicsHeapTemplate_type_name = "PhysicsHeapTemplate";
		constexpr static rivet::rivet_type_id PhysicsHeapTemplate_type_id = 0x271da170;
		constexpr static std::string_view ComponentHeapTemplate_type_name = "ComponentHeapTemplate";
		constexpr static rivet::rivet_type_id ComponentHeapTemplate_type_id = 0x340e4ddd;
		constexpr static std::string_view SoundBanksHeapTemplate_type_name = "SoundBanksHeapTemplate";
		constexpr static rivet::rivet_type_id SoundBanksHeapTemplate_type_id = 0x2e28ec14;
		constexpr static std::string_view SoundHeapTemplate_type_name = "SoundHeapTemplate";
		constexpr static rivet::rivet_type_id SoundHeapTemplate_type_id = 0x6ec45024;
		constexpr static std::string_view ZoneAssetHeapTemplate_type_name = "ZoneAssetHeapTemplate";
		constexpr static rivet::rivet_type_id ZoneAssetHeapTemplate_type_id = 0x587a874;
		constexpr static std::string_view DebugScratch_type_name = "DebugScratch";
		constexpr static rivet::rivet_type_id DebugScratch_type_id = 0xc510d402;
		constexpr static std::string_view PrintAllocSummaryAfterInit_type_name = "PrintAllocSummaryAfterInit";
		constexpr static rivet::rivet_type_id PrintAllocSummaryAfterInit_type_id = 0x2a868b05;
		constexpr static std::string_view ShowLiveStats_type_name = "ShowLiveStats";
		constexpr static rivet::rivet_type_id ShowLiveStats_type_id = 0xbef3dd7c;
		constexpr static std::string_view ManagedHeapWarningThresholdPercentage_type_name = "ManagedHeapWarningThresholdPercentage";
		constexpr static rivet::rivet_type_id ManagedHeapWarningThresholdPercentage_type_id = 0x450bd185;
		constexpr static std::string_view ManagedHeapErrorThresholdPercentage_type_name = "ManagedHeapErrorThresholdPercentage";
		constexpr static rivet::rivet_type_id ManagedHeapErrorThresholdPercentage_type_id = 0x4a8c0abe;
		constexpr static std::string_view AssetHeapWarningThresholdPercentage_type_name = "AssetHeapWarningThresholdPercentage";
		constexpr static rivet::rivet_type_id AssetHeapWarningThresholdPercentage_type_id = 0x87d06bb2;
		constexpr static std::string_view AssetHeapErrorThresholdPercentage_type_name = "AssetHeapErrorThresholdPercentage";
		constexpr static rivet::rivet_type_id AssetHeapErrorThresholdPercentage_type_id = 0xb9078e75;
		constexpr static std::string_view TextureHeapErrorThresholdPercentage_type_name = "TextureHeapErrorThresholdPercentage";
		constexpr static rivet::rivet_type_id TextureHeapErrorThresholdPercentage_type_id = 0x3531bcbd; 

		explicit EngineAllocatorSettings() = default;
		explicit EngineAllocatorSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::HeapTemplate> DynamicHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> DDLHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> AssetHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> PhysicsHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> ComponentHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> SoundBanksHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> SoundHeapTemplate {};
		std::shared_ptr<rivet::ddl::generated::HeapTemplate> ZoneAssetHeapTemplate {};
		bool DebugScratch {};
		bool PrintAllocSummaryAfterInit {};
		rivet::ddl::generated::xba58b2b9 ShowLiveStats {};
		int32_t ManagedHeapWarningThresholdPercentage {};
		int32_t ManagedHeapErrorThresholdPercentage {};
		int32_t AssetHeapWarningThresholdPercentage {};
		int32_t AssetHeapErrorThresholdPercentage {};
		int32_t TextureHeapErrorThresholdPercentage {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<EngineAllocatorSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
