// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RenderStats; 

	struct RIVET_DDL_SHARED PythonMetrics : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PythonMetrics";
		constexpr static rivet::rivet_type_id type_id = 0x8931b6fa;

		constexpr static std::string_view RenderStats_type_name = "RenderStats";
		constexpr static rivet::rivet_type_id RenderStats_type_id = 0x781b407d;
		constexpr static std::string_view FramesPerSecond_type_name = "FramesPerSecond";
		constexpr static rivet::rivet_type_id FramesPerSecond_type_id = 0x7747c418;
		constexpr static std::string_view ColorMicros_type_name = "ColorMicros";
		constexpr static rivet::rivet_type_id ColorMicros_type_id = 0xb581f1e5;
		constexpr static std::string_view ShadowMicros_type_name = "ShadowMicros";
		constexpr static rivet::rivet_type_id ShadowMicros_type_id = 0x6c5d8671;
		constexpr static std::string_view TotalMicros_type_name = "TotalMicros";
		constexpr static rivet::rivet_type_id TotalMicros_type_id = 0x73f3565; 

		explicit PythonMetrics() = default;
		explicit PythonMetrics([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::RenderStats> RenderStats {};
		float FramesPerSecond {};
		uint32_t ColorMicros {};
		uint32_t ShadowMicros {};
		uint32_t TotalMicros {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PythonMetrics>;
	};
} // namespace rivet::ddl::generated

// clang-format on
