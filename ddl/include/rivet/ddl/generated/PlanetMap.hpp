// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xd64fa9b1.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED PlanetMap : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PlanetMap";
		constexpr static rivet::rivet_type_id type_id = 0xed022e47;

		constexpr static std::string_view Map_type_name = "Map";
		constexpr static rivet::rivet_type_id Map_type_id = 0xb9f88372;
		constexpr static std::string_view MapTexture_type_name = "MapTexture";
		constexpr static rivet::rivet_type_id MapTexture_type_id = 0x2b5a5668;
		constexpr static std::string_view MapMin_type_name = "MapMin";
		constexpr static rivet::rivet_type_id MapMin_type_id = 0x92ca8f03;
		constexpr static std::string_view MapMax_type_name = "MapMax";
		constexpr static rivet::rivet_type_id MapMax_type_id = 0xaec7b05a;
		constexpr static std::string_view MapZoomMax_type_name = "MapZoomMax";
		constexpr static rivet::rivet_type_id MapZoomMax_type_id = 0xdbec4b7;
		constexpr static std::string_view MapZoomDefault_type_name = "MapZoomDefault";
		constexpr static rivet::rivet_type_id MapZoomDefault_type_id = 0x8cad3241;
		constexpr static std::string_view MapRevealSize_type_name = "MapRevealSize";
		constexpr static rivet::rivet_type_id MapRevealSize_type_id = 0xc57f1793;
		constexpr static std::string_view MapCellSize_type_name = "MapCellSize";
		constexpr static rivet::rivet_type_id MapCellSize_type_id = 0x984330fa; 

		explicit PlanetMap() = default;
		explicit PlanetMap([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xd64fa9b1 Map {};
		std::string_view MapTexture {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> MapMin {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> MapMax {};
		float MapZoomMax {};
		float MapZoomDefault {};
		float MapRevealSize {};
		float MapCellSize {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlanetMap>;
	};
} // namespace rivet::ddl::generated

// clang-format on
