// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED ProjectileWarnedEvent : EventBase {
		constexpr static std::string_view type_name = "ProjectileWarnedEvent";
		constexpr static rivet::rivet_type_id type_id = 0x375a0524;

		constexpr static std::string_view TimeLeft_type_name = "TimeLeft";
		constexpr static rivet::rivet_type_id TimeLeft_type_id = 0xb7be87b6;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view UseWarnPosition_type_name = "UseWarnPosition";
		constexpr static rivet::rivet_type_id UseWarnPosition_type_id = 0x1ede4bc;
		constexpr static std::string_view WarnPosition_type_name = "WarnPosition";
		constexpr static rivet::rivet_type_id WarnPosition_type_id = 0xc5b68935;
		constexpr static std::string_view WarnFriends_type_name = "WarnFriends";
		constexpr static rivet::rivet_type_id WarnFriends_type_id = 0x676c0758; 

		explicit ProjectileWarnedEvent() = default;
		explicit ProjectileWarnedEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float TimeLeft {};
		float Radius {};
		bool UseWarnPosition {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> WarnPosition {};
		bool WarnFriends {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ProjectileWarnedEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
