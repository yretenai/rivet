// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/ScriptNodesModelMimeData.hpp>

namespace rivet::ddl::generated {
	ScriptNodesModelMimeData::ScriptNodesModelMimeData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Comment = serialized->get_bool(Comment_type_id);
		EmbeddedScriptGraphIds = serialized->get_uint64s(EmbeddedScriptGraphIds_type_id);
		ScriptActionNames = serialized->get_strings(ScriptActionNames_type_id);
		ScriptGlobalVariableNames = serialized->get_strings(ScriptGlobalVariableNames_type_id);
		ScriptVariableNames = serialized->get_strings(ScriptVariableNames_type_id); 
	}

	[[nodiscard]] auto
	ScriptNodesModelMimeData::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	ScriptNodesModelMimeData::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ScriptNodesModelMimeData> {
		if (incoming_type_id == ScriptNodesModelMimeData::type_id) {
			return std::make_shared<ScriptNodesModelMimeData>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
