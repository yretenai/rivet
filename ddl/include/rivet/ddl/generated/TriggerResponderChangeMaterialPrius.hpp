// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/TriggerResponderBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TriggerResponderChangeMaterialPrius : TriggerResponderBasePrius {
		constexpr static std::string_view type_name = "TriggerResponderChangeMaterialPrius";
		constexpr static rivet::rivet_type_id type_id = 0x61e225e6;

		constexpr static std::string_view MatConstValueTrig_type_name = "MatConstValueTrig";
		constexpr static rivet::rivet_type_id MatConstValueTrig_type_id = 0x98112a20;
		constexpr static std::string_view MatConstValueNotTrig_type_name = "MatConstValueNotTrig";
		constexpr static rivet::rivet_type_id MatConstValueNotTrig_type_id = 0xb02e430;
		constexpr static std::string_view MatConstValueDisabled_type_name = "MatConstValueDisabled";
		constexpr static rivet::rivet_type_id MatConstValueDisabled_type_id = 0x8e3d4e43;
		constexpr static std::string_view BlendTimeTriggered_type_name = "BlendTimeTriggered";
		constexpr static rivet::rivet_type_id BlendTimeTriggered_type_id = 0x8209741e;
		constexpr static std::string_view BlendTimeNotTriggered_type_name = "BlendTimeNotTriggered";
		constexpr static rivet::rivet_type_id BlendTimeNotTriggered_type_id = 0x52a843b;
		constexpr static std::string_view BlendTimeDisabled_type_name = "BlendTimeDisabled";
		constexpr static rivet::rivet_type_id BlendTimeDisabled_type_id = 0x7f648dcd; 

		explicit TriggerResponderChangeMaterialPrius() = default;
		explicit TriggerResponderChangeMaterialPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MatConstValueTrig {};
		float MatConstValueNotTrig {};
		float MatConstValueDisabled {};
		float BlendTimeTriggered {};
		float BlendTimeNotTriggered {};
		float BlendTimeDisabled {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TriggerResponderChangeMaterialPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
