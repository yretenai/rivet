// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xb022b3f7.hpp>
#include <rivet/ddl/generated/enums/xd839f866.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AssertSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AssertSettings";
		constexpr static rivet::rivet_type_id type_id = 0xc1ba458e;

		constexpr static std::string_view CallStackEnable_type_name = "CallStackEnable";
		constexpr static rivet::rivet_type_id CallStackEnable_type_id = 0xe8450843;
		constexpr static std::string_view ProfilerStackEnable_type_name = "ProfilerStackEnable";
		constexpr static rivet::rivet_type_id ProfilerStackEnable_type_id = 0xa8840a13;
		constexpr static std::string_view CallStackDeferredInitialization_type_name = "CallStackDeferredInitialization";
		constexpr static rivet::rivet_type_id CallStackDeferredInitialization_type_id = 0x6ab3012d;
		constexpr static std::string_view UnhandledExceptionMode_type_name = "UnhandledExceptionMode";
		constexpr static rivet::rivet_type_id UnhandledExceptionMode_type_id = 0x6ac40765;
		constexpr static std::string_view FatalAssertMode_type_name = "FatalAssertMode";
		constexpr static rivet::rivet_type_id FatalAssertMode_type_id = 0x2959a55d;
		constexpr static std::string_view AssertMode_type_name = "AssertMode";
		constexpr static rivet::rivet_type_id AssertMode_type_id = 0x68e28e6c;
		constexpr static std::string_view WarningFilter_type_name = "WarningFilter";
		constexpr static rivet::rivet_type_id WarningFilter_type_id = 0x9f072dc8;
		constexpr static std::string_view LogFile_type_name = "LogFile";
		constexpr static rivet::rivet_type_id LogFile_type_id = 0xfc9ca37;
		constexpr static std::string_view AppendToLogFile_type_name = "AppendToLogFile";
		constexpr static rivet::rivet_type_id AppendToLogFile_type_id = 0x6fbe6d0c;
		constexpr static std::string_view CrashDumpMode_type_name = "CrashDumpMode";
		constexpr static rivet::rivet_type_id CrashDumpMode_type_id = 0x6859a16a;
		constexpr static std::string_view UseToolTransmitter_type_name = "UseToolTransmitter";
		constexpr static rivet::rivet_type_id UseToolTransmitter_type_id = 0x1ccaa313;
		constexpr static std::string_view EveryAssertIsFatal_type_name = "EveryAssertIsFatal";
		constexpr static rivet::rivet_type_id EveryAssertIsFatal_type_id = 0x58859683; 

		explicit AssertSettings() = default;
		explicit AssertSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool CallStackEnable {};
		bool ProfilerStackEnable {};
		bool CallStackDeferredInitialization {};
		rivet::ddl::generated::xd839f866 UnhandledExceptionMode {};
		rivet::ddl::generated::xd839f866 FatalAssertMode {};
		rivet::ddl::generated::xd839f866 AssertMode {};
		std::string_view WarningFilter {};
		std::string_view LogFile {};
		bool AppendToLogFile {};
		rivet::ddl::generated::xb022b3f7 CrashDumpMode {};
		bool UseToolTransmitter {};
		bool EveryAssertIsFatal {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AssertSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
