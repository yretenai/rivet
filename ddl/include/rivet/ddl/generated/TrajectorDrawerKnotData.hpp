// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TrajectorDrawerKnotData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TrajectorDrawerKnotData";
		constexpr static rivet::rivet_type_id type_id = 0x278c4bcb;

		constexpr static std::string_view KnotModel_type_name = "KnotModel";
		constexpr static rivet::rivet_type_id KnotModel_type_id = 0x4298ff49;
		constexpr static std::string_view MinInterval_type_name = "MinInterval";
		constexpr static rivet::rivet_type_id MinInterval_type_id = 0x41da1c70;
		constexpr static std::string_view MaxInterval_type_name = "MaxInterval";
		constexpr static rivet::rivet_type_id MaxInterval_type_id = 0x8dd7677f;
		constexpr static std::string_view FadeDistance_type_name = "FadeDistance";
		constexpr static rivet::rivet_type_id FadeDistance_type_id = 0xa05039a0;
		constexpr static std::string_view MinScaleXY_type_name = "MinScaleXY";
		constexpr static rivet::rivet_type_id MinScaleXY_type_id = 0x4e3293a6;
		constexpr static std::string_view MaxScaleXY_type_name = "MaxScaleXY";
		constexpr static rivet::rivet_type_id MaxScaleXY_type_id = 0x4f3e0912;
		constexpr static std::string_view MinScaleZ_type_name = "MinScaleZ";
		constexpr static rivet::rivet_type_id MinScaleZ_type_id = 0xd81e9397;
		constexpr static std::string_view MaxScaleZ_type_name = "MaxScaleZ";
		constexpr static rivet::rivet_type_id MaxScaleZ_type_id = 0xff521d6;
		constexpr static std::string_view StartOffset_type_name = "StartOffset";
		constexpr static rivet::rivet_type_id StartOffset_type_id = 0x2c176850;
		constexpr static std::string_view EndOffset_type_name = "EndOffset";
		constexpr static rivet::rivet_type_id EndOffset_type_id = 0x27fcfb73; 

		explicit TrajectorDrawerKnotData() = default;
		explicit TrajectorDrawerKnotData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view KnotModel {};
		float MinInterval {};
		float MaxInterval {};
		float FadeDistance {};
		float MinScaleXY {};
		float MaxScaleXY {};
		float MinScaleZ {};
		float MaxScaleZ {};
		float StartOffset {};
		float EndOffset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TrajectorDrawerKnotData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
