// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VanityOverrideEvent : EventBase {
		constexpr static std::string_view type_name = "VanityOverrideEvent";
		constexpr static rivet::rivet_type_id type_id = 0x36d54690;

		constexpr static std::string_view HelmetModel_type_name = "HelmetModel";
		constexpr static rivet::rivet_type_id HelmetModel_type_id = 0x537019f1;
		constexpr static std::string_view HeadModel_type_name = "HeadModel";
		constexpr static rivet::rivet_type_id HeadModel_type_id = 0x7596a61c;
		constexpr static std::string_view TorsoModel_type_name = "TorsoModel";
		constexpr static rivet::rivet_type_id TorsoModel_type_id = 0x5ee516cc;
		constexpr static std::string_view LeftGloveModel_type_name = "LeftGloveModel";
		constexpr static rivet::rivet_type_id LeftGloveModel_type_id = 0x778e1af5;
		constexpr static std::string_view RightGloveModel_type_name = "RightGloveModel";
		constexpr static rivet::rivet_type_id RightGloveModel_type_id = 0x834122f9;
		constexpr static std::string_view LegsModel_type_name = "LegsModel";
		constexpr static rivet::rivet_type_id LegsModel_type_id = 0x5579f009;
		constexpr static std::string_view BootsModel_type_name = "BootsModel";
		constexpr static rivet::rivet_type_id BootsModel_type_id = 0x22583ff7;
		constexpr static std::string_view GloveOverrideReset_type_name = "GloveOverrideReset";
		constexpr static rivet::rivet_type_id GloveOverrideReset_type_id = 0x5fc65671; 

		explicit VanityOverrideEvent() = default;
		explicit VanityOverrideEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view HelmetModel {};
		std::string_view HeadModel {};
		std::string_view TorsoModel {};
		std::string_view LeftGloveModel {};
		std::string_view RightGloveModel {};
		std::string_view LegsModel {};
		std::string_view BootsModel {};
		bool GloveOverrideReset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VanityOverrideEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
