// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SkuFilterActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SkuFilterActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0xb0ba204a;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view kSkuNA_type_name = "kSkuNA";
		constexpr static rivet::rivet_type_id kSkuNA_type_id = 0x44aa6944;
		constexpr static std::string_view kSkuUK_type_name = "kSkuUK";
		constexpr static rivet::rivet_type_id kSkuUK_type_id = 0xd494bc0;
		constexpr static std::string_view kSkuEU_type_name = "kSkuEU";
		constexpr static rivet::rivet_type_id kSkuEU_type_id = 0xbd8464f2;
		constexpr static std::string_view kSkuJP_type_name = "kSkuJP";
		constexpr static rivet::rivet_type_id kSkuJP_type_id = 0x4a768cb2;
		constexpr static std::string_view kSkuAS_type_name = "kSkuAS";
		constexpr static rivet::rivet_type_id kSkuAS_type_id = 0x308b04c3;
		constexpr static std::string_view kSkuCN_type_name = "kSkuCN";
		constexpr static rivet::rivet_type_id kSkuCN_type_id = 0x61bb0a98; 

		explicit SkuFilterActionPrius() = default;
		explicit SkuFilterActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		bool kSkuNA {};
		bool kSkuUK {};
		bool kSkuEU {};
		bool kSkuJP {};
		bool kSkuAS {};
		bool kSkuCN {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SkuFilterActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
