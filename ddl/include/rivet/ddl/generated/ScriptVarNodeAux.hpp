// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct GraphNodeNotesDef; 

	struct RIVET_DDL_SHARED ScriptVarNodeAux : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ScriptVarNodeAux";
		constexpr static rivet::rivet_type_id type_id = 0x1fd9c67;

		constexpr static std::string_view VarType_type_name = "VarType";
		constexpr static rivet::rivet_type_id VarType_type_id = 0x5e2c110c;
		constexpr static std::string_view ReadOnly_type_name = "ReadOnly";
		constexpr static rivet::rivet_type_id ReadOnly_type_id = 0x666dd9b6;
		constexpr static std::string_view GlobalName_type_name = "GlobalName";
		constexpr static rivet::rivet_type_id GlobalName_type_id = 0xe40dfcba;
		constexpr static std::string_view Notes_type_name = "Notes";
		constexpr static rivet::rivet_type_id Notes_type_id = 0x18486a4d;
		constexpr static std::string_view IsGlobal_type_name = "IsGlobal";
		constexpr static rivet::rivet_type_id IsGlobal_type_id = 0xd36c3c29;
		constexpr static std::string_view BoolValue_type_name = "BoolValue";
		constexpr static rivet::rivet_type_id BoolValue_type_id = 0x7f6e397;
		constexpr static std::string_view FloatValue_type_name = "FloatValue";
		constexpr static rivet::rivet_type_id FloatValue_type_id = 0xf03f0a74;
		constexpr static std::string_view VecValue_type_name = "VecValue";
		constexpr static rivet::rivet_type_id VecValue_type_id = 0xb8666495;
		constexpr static std::string_view StringValue_type_name = "StringValue";
		constexpr static rivet::rivet_type_id StringValue_type_id = 0xbb242993;
		constexpr static std::string_view ActorValue_type_name = "ActorValue";
		constexpr static rivet::rivet_type_id ActorValue_type_id = 0x6aed6be1; 

		explicit ScriptVarNodeAux() = default;
		explicit ScriptVarNodeAux([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view VarType {};
		bool ReadOnly {};
		std::string_view GlobalName {};
		std::shared_ptr<rivet::ddl::generated::GraphNodeNotesDef> Notes {};
		bool IsGlobal {};
		bool BoolValue {};
		float FloatValue {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> VecValue {};
		std::string_view StringValue {};
		uint64_t ActorValue {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ScriptVarNodeAux>;
	};
} // namespace rivet::ddl::generated

// clang-format on
