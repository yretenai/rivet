// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct CinematicTrackState;
	struct DDLMatrix4;
	struct Cinematic2Def; 

	struct RIVET_DDL_SHARED CinematicStateEngineItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CinematicStateEngineItem";
		constexpr static rivet::rivet_type_id type_id = 0xa1bb7d92;

		constexpr static std::string_view AssetPath_type_name = "AssetPath";
		constexpr static rivet::rivet_type_id AssetPath_type_id = 0xefa614b;
		constexpr static std::string_view Cinematic2Def_type_name = "Cinematic2Def";
		constexpr static rivet::rivet_type_id Cinematic2Def_type_id = 0xca6a194c;
		constexpr static std::string_view Focused_type_name = "Focused";
		constexpr static rivet::rivet_type_id Focused_type_id = 0xbd3c98f;
		constexpr static std::string_view Loaded_type_name = "Loaded";
		constexpr static rivet::rivet_type_id Loaded_type_id = 0x75ff0940;
		constexpr static std::string_view ObjToWorld_type_name = "ObjToWorld";
		constexpr static rivet::rivet_type_id ObjToWorld_type_id = 0x3842c592;
		constexpr static std::string_view Playing_type_name = "Playing";
		constexpr static rivet::rivet_type_id Playing_type_id = 0xd21350da;
		constexpr static std::string_view Time_type_name = "Time";
		constexpr static rivet::rivet_type_id Time_type_id = 0x5f0458f5;
		constexpr static std::string_view TracksInactive_type_name = "TracksInactive";
		constexpr static rivet::rivet_type_id TracksInactive_type_id = 0x27e71ee4;
		constexpr static std::string_view TrackState_type_name = "TrackState";
		constexpr static rivet::rivet_type_id TrackState_type_id = 0x7917fbd8; 

		explicit CinematicStateEngineItem() = default;
		explicit CinematicStateEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view AssetPath {};
		std::shared_ptr<rivet::ddl::generated::Cinematic2Def> Cinematic2Def {};
		bool Focused {};
		bool Loaded {};
		std::shared_ptr<rivet::ddl::generated::DDLMatrix4> ObjToWorld {};
		bool Playing {};
		double Time {};
		std::vector<uint64_t> TracksInactive {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CinematicTrackState>> TrackState {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CinematicStateEngineItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
