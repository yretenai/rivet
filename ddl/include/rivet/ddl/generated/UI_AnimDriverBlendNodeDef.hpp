// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x53f8509f.hpp> 

namespace rivet::ddl::generated {
	struct UI_AnimDriverBlendNodeIntervals;
	struct AnimDriverBlendElemDef; 

	struct RIVET_DDL_SHARED UI_AnimDriverBlendNodeDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "UI_AnimDriverBlendNodeDef";
		constexpr static rivet::rivet_type_id type_id = 0x2ab12cc0;

		constexpr static std::string_view DisplayName_type_name = "DisplayName";
		constexpr static rivet::rivet_type_id DisplayName_type_id = 0xeaf33243;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view Rate_type_name = "Rate";
		constexpr static rivet::rivet_type_id Rate_type_id = 0xef7cff89;
		constexpr static std::string_view CurrentValue_type_name = "CurrentValue";
		constexpr static rivet::rivet_type_id CurrentValue_type_id = 0x8dae56cd;
		constexpr static std::string_view Intervals_type_name = "Intervals";
		constexpr static rivet::rivet_type_id Intervals_type_id = 0x955c8dd0;
		constexpr static std::string_view IntervalsUI_type_name = "IntervalsUI";
		constexpr static rivet::rivet_type_id IntervalsUI_type_id = 0xdafdfffb; 

		explicit UI_AnimDriverBlendNodeDef() = default;
		explicit UI_AnimDriverBlendNodeDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view DisplayName {};
		rivet::ddl::generated::x53f8509f Type {};
		float Rate {};
		float CurrentValue {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimDriverBlendElemDef>> Intervals {};
		std::shared_ptr<rivet::ddl::generated::UI_AnimDriverBlendNodeIntervals> IntervalsUI {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UI_AnimDriverBlendNodeDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
