// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x3749ca1b.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AnimGestureDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimGestureDef";
		constexpr static rivet::rivet_type_id type_id = 0x7385172;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view ClipPath_type_name = "ClipPath";
		constexpr static rivet::rivet_type_id ClipPath_type_id = 0xd15aa6a0;
		constexpr static std::string_view MirrorAxis_type_name = "MirrorAxis";
		constexpr static rivet::rivet_type_id MirrorAxis_type_id = 0x72e2167;
		constexpr static std::string_view StartTime_type_name = "StartTime";
		constexpr static rivet::rivet_type_id StartTime_type_id = 0xc5bae2b;
		constexpr static std::string_view StartOffset_type_name = "StartOffset";
		constexpr static rivet::rivet_type_id StartOffset_type_id = 0x2c176850;
		constexpr static std::string_view BlendInDuration_type_name = "BlendInDuration";
		constexpr static rivet::rivet_type_id BlendInDuration_type_id = 0x461f415e;
		constexpr static std::string_view EndOffset_type_name = "EndOffset";
		constexpr static rivet::rivet_type_id EndOffset_type_id = 0x27fcfb73;
		constexpr static std::string_view BlendOutDuration_type_name = "BlendOutDuration";
		constexpr static rivet::rivet_type_id BlendOutDuration_type_id = 0x21329878;
		constexpr static std::string_view Weight_type_name = "Weight";
		constexpr static rivet::rivet_type_id Weight_type_id = 0x39b51b26; 

		explicit AnimGestureDef() = default;
		explicit AnimGestureDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		std::string_view Name {};
		std::string_view ClipPath {};
		rivet::ddl::generated::x3749ca1b MirrorAxis {};
		float StartTime {};
		float StartOffset {};
		float BlendInDuration {};
		float EndOffset {};
		float BlendOutDuration {};
		float Weight {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimGestureDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
