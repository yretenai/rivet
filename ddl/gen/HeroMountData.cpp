// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/HeroAnimMapElement.hpp> 

#include <rivet/ddl/generated/HeroMountData.hpp>

namespace rivet::ddl::generated {
	HeroMountData::HeroMountData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		CanRatchetMount = serialized->get_bool(CanRatchetMount_type_id, false);
		CanRatchetteMount = serialized->get_bool(CanRatchetteMount_type_id, true);
		DrawWhileMounted = serialized->get_bool(DrawWhileMounted_type_id, true);
		AutoMountDist = serialized->get_float(AutoMountDist_type_id, 1.000000f);
		TimeToMountFromAir = serialized->get_float(TimeToMountFromAir_type_id, 0.450000f);
		FallAnimName = serialized->get_string(FallAnimName_type_id, {});
		TimeToMountFromGround = serialized->get_float(TimeToMountFromGround_type_id, 0.800000f);
		LocatorAttachName = serialized->get_string(LocatorAttachName_type_id, {});
		IntroStartAnimName = serialized->get_string(IntroStartAnimName_type_id, {});
		MiddleStartAnimName = serialized->get_string(MiddleStartAnimName_type_id, {});
		OutroStartAnimName = serialized->get_string(OutroStartAnimName_type_id, {});
		AnimatedDismountAnim = serialized->get_string(AnimatedDismountAnim_type_id, {});
		IdleAnimName = serialized->get_string(IdleAnimName_type_id, {});
		HeroAnimMap = serialized->unwrap_into_many<rivet::ddl::generated::HeroAnimMapElement>(HeroAnimMap_type_id); 
	}

	[[nodiscard]] auto
	HeroMountData::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	HeroMountData::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroMountData> {
		if (incoming_type_id == HeroMountData::type_id) {
			return std::make_shared<HeroMountData>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
