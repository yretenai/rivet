// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ActivityHint;
	struct ActivityReward;
	struct ObjSysUnlockSequence; 

	struct RIVET_DDL_SHARED PlanetDimension : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PlanetDimension";
		constexpr static rivet::rivet_type_id type_id = 0x1608e306;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view CodeName_type_name = "CodeName";
		constexpr static rivet::rivet_type_id CodeName_type_id = 0xa15b4218;
		constexpr static std::string_view NameTag_type_name = "NameTag";
		constexpr static rivet::rivet_type_id NameTag_type_id = 0x2d78cbbd;
		constexpr static std::string_view DescTag_type_name = "DescTag";
		constexpr static rivet::rivet_type_id DescTag_type_id = 0xe822a0da;
		constexpr static std::string_view CardSmallImage_type_name = "CardSmallImage";
		constexpr static rivet::rivet_type_id CardSmallImage_type_id = 0x9af615f0;
		constexpr static std::string_view CardLargeImage_type_name = "CardLargeImage";
		constexpr static rivet::rivet_type_id CardLargeImage_type_id = 0x7d5b0f7b;
		constexpr static std::string_view UnlockSequence_type_name = "UnlockSequence";
		constexpr static rivet::rivet_type_id UnlockSequence_type_id = 0xdd7a0acc;
		constexpr static std::string_view DefaultPlaytimeEstimate_type_name = "DefaultPlaytimeEstimate";
		constexpr static rivet::rivet_type_id DefaultPlaytimeEstimate_type_id = 0xa76d47a6;
		constexpr static std::string_view GameIntentCheckpoint_type_name = "GameIntentCheckpoint";
		constexpr static rivet::rivet_type_id GameIntentCheckpoint_type_id = 0x5952cfa5;
		constexpr static std::string_view Reward_type_name = "Reward";
		constexpr static rivet::rivet_type_id Reward_type_id = 0x70a93c34;
		constexpr static std::string_view Hints_type_name = "Hints";
		constexpr static rivet::rivet_type_id Hints_type_id = 0xf00bc587;
		constexpr static std::string_view UnlockCondition_type_name = "UnlockCondition";
		constexpr static rivet::rivet_type_id UnlockCondition_type_id = 0x5135ecc8; 

		explicit PlanetDimension() = default;
		explicit PlanetDimension([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		std::string_view CodeName {};
		std::string_view NameTag {};
		std::string_view DescTag {};
		std::string_view CardSmallImage {};
		std::string_view CardLargeImage {};
		std::shared_ptr<rivet::ddl::generated::ObjSysUnlockSequence> UnlockSequence {};
		uint32_t DefaultPlaytimeEstimate {};
		std::string_view GameIntentCheckpoint {};
		std::shared_ptr<rivet::ddl::generated::ActivityReward> Reward {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActivityHint>> Hints {};
		std::shared_ptr<rivet::ddl::generated::ObjSysUnlockSequence> UnlockCondition {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlanetDimension>;
	};
} // namespace rivet::ddl::generated

// clang-format on
