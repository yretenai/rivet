// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HBAOPlusSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HBAOPlusSettings";
		constexpr static rivet::rivet_type_id type_id = 0x53dc86d;

		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view Bias_type_name = "Bias";
		constexpr static rivet::rivet_type_id Bias_type_id = 0x7217aaeb;
		constexpr static std::string_view SmallScaleAO_type_name = "SmallScaleAO";
		constexpr static rivet::rivet_type_id SmallScaleAO_type_id = 0x7b1b6dc8;
		constexpr static std::string_view LargeScaleAO_type_name = "LargeScaleAO";
		constexpr static rivet::rivet_type_id LargeScaleAO_type_id = 0x5e0e329f;
		constexpr static std::string_view PowerExponent_type_name = "PowerExponent";
		constexpr static rivet::rivet_type_id PowerExponent_type_id = 0x79f48d92;
		constexpr static std::string_view EnableForegroundAO_type_name = "EnableForegroundAO";
		constexpr static rivet::rivet_type_id EnableForegroundAO_type_id = 0x349763db;
		constexpr static std::string_view ForegroundViewDepth_type_name = "ForegroundViewDepth";
		constexpr static rivet::rivet_type_id ForegroundViewDepth_type_id = 0x38fe0187;
		constexpr static std::string_view EnableBackgroundAO_type_name = "EnableBackgroundAO";
		constexpr static rivet::rivet_type_id EnableBackgroundAO_type_id = 0x654942e6;
		constexpr static std::string_view BackgroundViewDepth_type_name = "BackgroundViewDepth";
		constexpr static rivet::rivet_type_id BackgroundViewDepth_type_id = 0x78ceba79;
		constexpr static std::string_view EnableBlur_type_name = "EnableBlur";
		constexpr static rivet::rivet_type_id EnableBlur_type_id = 0x29cc56e9;
		constexpr static std::string_view BlurSharpness_type_name = "BlurSharpness";
		constexpr static rivet::rivet_type_id BlurSharpness_type_id = 0x8ce00f3e;
		constexpr static std::string_view EnableNormalMap_type_name = "EnableNormalMap";
		constexpr static rivet::rivet_type_id EnableNormalMap_type_id = 0xc9ce5c27; 

		explicit HBAOPlusSettings() = default;
		explicit HBAOPlusSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Radius {};
		float Bias {};
		float SmallScaleAO {};
		float LargeScaleAO {};
		float PowerExponent {};
		bool EnableForegroundAO {};
		float ForegroundViewDepth {};
		bool EnableBackgroundAO {};
		float BackgroundViewDepth {};
		bool EnableBlur {};
		float BlurSharpness {};
		bool EnableNormalMap {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HBAOPlusSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
