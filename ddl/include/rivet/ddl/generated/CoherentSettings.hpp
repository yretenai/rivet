// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CoherentSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CoherentSettings";
		constexpr static rivet::rivet_type_id type_id = 0xf556693d;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view RenderEnable_type_name = "RenderEnable";
		constexpr static rivet::rivet_type_id RenderEnable_type_id = 0x393a3cef;
		constexpr static std::string_view ShowMemoryGraph_type_name = "ShowMemoryGraph";
		constexpr static rivet::rivet_type_id ShowMemoryGraph_type_id = 0xd2459a46;
		constexpr static std::string_view ShowMemoryMetrics_type_name = "ShowMemoryMetrics";
		constexpr static rivet::rivet_type_id ShowMemoryMetrics_type_id = 0x884d8f5d;
		constexpr static std::string_view ShowFrameGraph_type_name = "ShowFrameGraph";
		constexpr static rivet::rivet_type_id ShowFrameGraph_type_id = 0x218cf15f;
		constexpr static std::string_view ShowGraphicsMemoryGraph_type_name = "ShowGraphicsMemoryGraph";
		constexpr static rivet::rivet_type_id ShowGraphicsMemoryGraph_type_id = 0xbd3b7a10;
		constexpr static std::string_view ShowBackendTextures_type_name = "ShowBackendTextures";
		constexpr static rivet::rivet_type_id ShowBackendTextures_type_id = 0xbe285851;
		constexpr static std::string_view Memory_type_name = "Memory";
		constexpr static rivet::rivet_type_id Memory_type_id = 0xd4157a52;
		constexpr static std::string_view UseSmallBlock_type_name = "UseSmallBlock";
		constexpr static rivet::rivet_type_id UseSmallBlock_type_id = 0xb1175fe8;
		constexpr static std::string_view GraphicsMemoryLarge_type_name = "GraphicsMemoryLarge";
		constexpr static rivet::rivet_type_id GraphicsMemoryLarge_type_id = 0x4328c8dd;
		constexpr static std::string_view GraphicsMemorySmall_type_name = "GraphicsMemorySmall";
		constexpr static rivet::rivet_type_id GraphicsMemorySmall_type_id = 0x6f060b70;
		constexpr static std::string_view GraphicsMemoryMetrics_type_name = "GraphicsMemoryMetrics";
		constexpr static rivet::rivet_type_id GraphicsMemoryMetrics_type_id = 0xfa8e48d1;
		constexpr static std::string_view LoggingEnabled_type_name = "LoggingEnabled";
		constexpr static rivet::rivet_type_id LoggingEnabled_type_id = 0x48381e78;
		constexpr static std::string_view DebuggingEnabled_type_name = "DebuggingEnabled";
		constexpr static rivet::rivet_type_id DebuggingEnabled_type_id = 0xbf62899a;
		constexpr static std::string_view SoundLoggingEnabled_type_name = "SoundLoggingEnabled";
		constexpr static rivet::rivet_type_id SoundLoggingEnabled_type_id = 0xc07dea0f;
		constexpr static std::string_view DefaultStyleFontFamily_type_name = "DefaultStyleFontFamily";
		constexpr static rivet::rivet_type_id DefaultStyleFontFamily_type_id = 0x272d0a0e;
		constexpr static std::string_view ReadBuiltFiles_type_name = "ReadBuiltFiles";
		constexpr static rivet::rivet_type_id ReadBuiltFiles_type_id = 0xfa68488a;
		constexpr static std::string_view ShowUsabilityInputs_type_name = "ShowUsabilityInputs";
		constexpr static rivet::rivet_type_id ShowUsabilityInputs_type_id = 0x39f410d2; 

		explicit CoherentSettings() = default;
		explicit CoherentSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		bool RenderEnable {};
		bool ShowMemoryGraph {};
		bool ShowMemoryMetrics {};
		bool ShowFrameGraph {};
		bool ShowGraphicsMemoryGraph {};
		bool ShowBackendTextures {};
		uint32_t Memory {};
		bool UseSmallBlock {};
		uint32_t GraphicsMemoryLarge {};
		uint32_t GraphicsMemorySmall {};
		bool GraphicsMemoryMetrics {};
		bool LoggingEnabled {};
		bool DebuggingEnabled {};
		bool SoundLoggingEnabled {};
		std::string_view DefaultStyleFontFamily {};
		bool ReadBuiltFiles {};
		bool ShowUsabilityInputs {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CoherentSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
