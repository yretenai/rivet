// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x6c8f7f60_type_name = "x6c8f7f60";
	constexpr static rivet::rivet_type_id x6c8f7f60_type_id = 0x6c8f7f60;

	constexpr static std::array<std::string_view, 19> x6c8f7f60_values = {
		"kTypeDriverClip",
		"kTypeDriverBiBlend",
		"kTypeDriverTriBlend",
		"kTypeDriverNBlend",
		"kTypeDriverBlend",
		"kTypeDriverSequence",
		"kTypeDriverRandom",
		"kTypeDriverGrid",
		"kTypeDriverDistance",
		"kTypeDriverSelect",
		"kTypeDriverMirror",
		"kTypeDriverPerformance",
		"kTypeTreeBindPose",
		"kTypeTreeClip",
		"kTypeTreeBiBlend",
		"kTypeTreeTriBlend",
		"kTypeTreeBiCombineAdd",
		"kTypeTreeSnapshot",
		"kTypeTreeMirror", 
	};

	constexpr static std::array<std::string_view, 19> x6c8f7f60_labels = {
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE", 
	};

	enum class x6c8f7f60 : uint64_t {
		TypeDriverClip,
		TypeDriverBiBlend,
		TypeDriverTriBlend,
		TypeDriverNBlend,
		TypeDriverBlend,
		TypeDriverSequence,
		TypeDriverRandom,
		TypeDriverGrid,
		TypeDriverDistance,
		TypeDriverSelect,
		TypeDriverMirror,
		TypeDriverPerformance,
		TypeTreeBindPose,
		TypeTreeClip,
		TypeTreeBiBlend,
		TypeTreeTriBlend,
		TypeTreeBiCombineAdd,
		TypeTreeSnapshot,
		TypeTreeMirror, 
	};
} // namespace rivet::ddl::generated

// clang-format on
