// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct FormationMotionInfo;
	struct FormationEntry; 

	struct RIVET_DDL_SHARED FormationCoordinatorPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "FormationCoordinatorPrius";
		constexpr static rivet::rivet_type_id type_id = 0xaae91262;

		constexpr static std::string_view SpawnIntoGroup_type_name = "SpawnIntoGroup";
		constexpr static rivet::rivet_type_id SpawnIntoGroup_type_id = 0x382fe313;
		constexpr static std::string_view WaitDuration_type_name = "WaitDuration";
		constexpr static rivet::rivet_type_id WaitDuration_type_id = 0xe3655ff0;
		constexpr static std::string_view AttackDuration_type_name = "AttackDuration";
		constexpr static rivet::rivet_type_id AttackDuration_type_id = 0xa0879ea8;
		constexpr static std::string_view NumCycles_type_name = "NumCycles";
		constexpr static rivet::rivet_type_id NumCycles_type_id = 0x3a524cf4;
		constexpr static std::string_view Entries_type_name = "Entries";
		constexpr static rivet::rivet_type_id Entries_type_id = 0x2c12d0fd;
		constexpr static std::string_view MotionInfo_type_name = "MotionInfo";
		constexpr static rivet::rivet_type_id MotionInfo_type_id = 0x3c145470;
		constexpr static std::string_view MotionPivotActor_type_name = "MotionPivotActor";
		constexpr static rivet::rivet_type_id MotionPivotActor_type_id = 0x24ff8f01;
		constexpr static std::string_view BotTemplate_type_name = "BotTemplate";
		constexpr static rivet::rivet_type_id BotTemplate_type_id = 0x6874a056; 

		explicit FormationCoordinatorPrius() = default;
		explicit FormationCoordinatorPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t SpawnIntoGroup {};
		float WaitDuration {};
		float AttackDuration {};
		float NumCycles {};
		std::vector<std::shared_ptr<rivet::ddl::generated::FormationEntry>> Entries {};
		std::vector<std::shared_ptr<rivet::ddl::generated::FormationMotionInfo>> MotionInfo {};
		uint64_t MotionPivotActor {};
		uint64_t BotTemplate {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FormationCoordinatorPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
