// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AirplaneCrashPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AirplaneCrashPrius";
		constexpr static rivet::rivet_type_id type_id = 0xbd735375;

		constexpr static std::string_view PercentChance_type_name = "PercentChance";
		constexpr static rivet::rivet_type_id PercentChance_type_id = 0xff718a21;
		constexpr static std::string_view CollisionRadius_type_name = "CollisionRadius";
		constexpr static rivet::rivet_type_id CollisionRadius_type_id = 0x7d546bba;
		constexpr static std::string_view Gravity_type_name = "Gravity";
		constexpr static rivet::rivet_type_id Gravity_type_id = 0x5bf7469f;
		constexpr static std::string_view MinRollRate_type_name = "MinRollRate";
		constexpr static rivet::rivet_type_id MinRollRate_type_id = 0xd3db9c45;
		constexpr static std::string_view MaxRollRate_type_name = "MaxRollRate";
		constexpr static rivet::rivet_type_id MaxRollRate_type_id = 0x1fd6e74a;
		constexpr static std::string_view MinTurnRate_type_name = "MinTurnRate";
		constexpr static rivet::rivet_type_id MinTurnRate_type_id = 0x950666c9;
		constexpr static std::string_view MaxTurnRate_type_name = "MaxTurnRate";
		constexpr static rivet::rivet_type_id MaxTurnRate_type_id = 0x590b1dc6;
		constexpr static std::string_view MaxTime_type_name = "MaxTime";
		constexpr static rivet::rivet_type_id MaxTime_type_id = 0x920f0ef5; 

		explicit AirplaneCrashPrius() = default;
		explicit AirplaneCrashPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float PercentChance {};
		float CollisionRadius {};
		float Gravity {};
		float MinRollRate {};
		float MaxRollRate {};
		float MinTurnRate {};
		float MaxTurnRate {};
		float MaxTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AirplaneCrashPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
