// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xcf5ccb68.hpp>
#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PerformWarpEvent : EventBase {
		constexpr static std::string_view type_name = "PerformWarpEvent";
		constexpr static rivet::rivet_type_id type_id = 0x38008fe3;

		constexpr static std::string_view ResetType_type_name = "ResetType";
		constexpr static rivet::rivet_type_id ResetType_type_id = 0xa6e9fb75;
		constexpr static std::string_view ResetState_type_name = "ResetState";
		constexpr static rivet::rivet_type_id ResetState_type_id = 0x13661705;
		constexpr static std::string_view ResetCamera_type_name = "ResetCamera";
		constexpr static rivet::rivet_type_id ResetCamera_type_id = 0xb3ab2b56;
		constexpr static std::string_view RelativeCamera_type_name = "RelativeCamera";
		constexpr static rivet::rivet_type_id RelativeCamera_type_id = 0x169d5d6f;
		constexpr static std::string_view RequireAuthority_type_name = "RequireAuthority";
		constexpr static rivet::rivet_type_id RequireAuthority_type_id = 0x5e0dce4d;
		constexpr static std::string_view ResetWeapons_type_name = "ResetWeapons";
		constexpr static rivet::rivet_type_id ResetWeapons_type_id = 0x72e6e3e7;
		constexpr static std::string_view ForceLoadScren_type_name = "ForceLoadScren";
		constexpr static rivet::rivet_type_id ForceLoadScren_type_id = 0xd4eaa99d;
		constexpr static std::string_view Cloaked_type_name = "Cloaked";
		constexpr static rivet::rivet_type_id Cloaked_type_id = 0xd7c14b87;
		constexpr static std::string_view UseDestinationActorMatrix_type_name = "UseDestinationActorMatrix";
		constexpr static rivet::rivet_type_id UseDestinationActorMatrix_type_id = 0x45cda69f;
		constexpr static std::string_view ForceMoveZero_type_name = "ForceMoveZero";
		constexpr static rivet::rivet_type_id ForceMoveZero_type_id = 0x27d0be26; 

		explicit PerformWarpEvent() = default;
		explicit PerformWarpEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xcf5ccb68 ResetType {};
		bool ResetState {};
		bool ResetCamera {};
		bool RelativeCamera {};
		bool RequireAuthority {};
		bool ResetWeapons {};
		bool ForceLoadScren {};
		bool Cloaked {};
		bool UseDestinationActorMatrix {};
		bool ForceMoveZero {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PerformWarpEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
