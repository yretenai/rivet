// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view xb379a82e_type_name = "xb379a82e";
	constexpr static rivet::rivet_type_id xb379a82e_type_id = 0xb379a82e;

	constexpr static std::array<std::string_view, 16> xb379a82e_values = {
		"kDebugNothing",
		"kGetGameStatus",
		"kWatchActionAdd",
		"kWatchActionRemove",
		"kBreakRunToHere",
		"kBreakAddBreakpoint",
		"kBreakRemoveBreakpoint",
		"kBreakStop",
		"kBreakContinue",
		"kBreakStepInZone",
		"kVarSet",
		"kActorInfo",
		"kActorShowInGameAdd",
		"kActorShowInGameRemove",
		"kActorSetAsDebug",
		"kPropertyQuery", 
	};

	constexpr static std::array<std::string_view, 16> xb379a82e_labels = {
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE",
		"NONE", 
	};

	enum class xb379a82e : uint64_t {
		DebugNothing,
		GetGameStatus,
		WatchActionAdd,
		WatchActionRemove,
		BreakRunToHere,
		BreakAddBreakpoint,
		BreakRemoveBreakpoint,
		BreakStop,
		BreakContinue,
		BreakStepInZone,
		VarSet,
		ActorInfo,
		ActorShowInGameAdd,
		ActorShowInGameRemove,
		ActorSetAsDebug,
		PropertyQuery, 
	};
} // namespace rivet::ddl::generated

// clang-format on
