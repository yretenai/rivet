// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xb87f7049.hpp>
#include <rivet/ddl/generated/enums/BlendType.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MaterialAlpha : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MaterialAlpha";
		constexpr static rivet::rivet_type_id type_id = 0x2715e9d5;

		constexpr static std::string_view BlendType_type_name = "BlendType";
		constexpr static rivet::rivet_type_id BlendType_type_id = 0x1b4f6c9a;
		constexpr static std::string_view Alpha_type_name = "Alpha";
		constexpr static rivet::rivet_type_id Alpha_type_id = 0xc9b3f5ab;
		constexpr static std::string_view AlphaTest_type_name = "AlphaTest";
		constexpr static rivet::rivet_type_id AlphaTest_type_id = 0x5d3ca67e;
		constexpr static std::string_view Lit_type_name = "Lit";
		constexpr static rivet::rivet_type_id Lit_type_id = 0x778ea754;
		constexpr static std::string_view DepthPass_type_name = "DepthPass";
		constexpr static rivet::rivet_type_id DepthPass_type_id = 0x67eff2a3;
		constexpr static std::string_view ForceOpaqueLoDs_type_name = "ForceOpaqueLoDs";
		constexpr static rivet::rivet_type_id ForceOpaqueLoDs_type_id = 0xc67375fb;
		constexpr static std::string_view UseRayTracedShadowsAlphaTest_type_name = "UseRayTracedShadowsAlphaTest";
		constexpr static rivet::rivet_type_id UseRayTracedShadowsAlphaTest_type_id = 0xb4ba3e9f;
		constexpr static std::string_view RayTracedShadowsAlphaTest_type_name = "RayTracedShadowsAlphaTest";
		constexpr static rivet::rivet_type_id RayTracedShadowsAlphaTest_type_id = 0xf73883d;
		constexpr static std::string_view TemporalAA_type_name = "TemporalAA";
		constexpr static rivet::rivet_type_id TemporalAA_type_id = 0x26321147; 

		explicit MaterialAlpha() = default;
		explicit MaterialAlpha([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::BlendType BlendType {};
		float Alpha {};
		float AlphaTest {};
		bool Lit {};
		bool DepthPass {};
		bool ForceOpaqueLoDs {};
		bool UseRayTracedShadowsAlphaTest {};
		float RayTracedShadowsAlphaTest {};
		rivet::ddl::generated::xb87f7049 TemporalAA {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MaterialAlpha>;
	};
} // namespace rivet::ddl::generated

// clang-format on
