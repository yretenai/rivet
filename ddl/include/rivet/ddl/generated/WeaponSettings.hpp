// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xb5e7b894.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED WeaponSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "WeaponSettings";
		constexpr static rivet::rivet_type_id type_id = 0x9f14920e;

		constexpr static std::string_view OneHitKill_type_name = "OneHitKill";
		constexpr static rivet::rivet_type_id OneHitKill_type_id = 0xc6e89893;
		constexpr static std::string_view InfiniteAmmo_type_name = "InfiniteAmmo";
		constexpr static rivet::rivet_type_id InfiniteAmmo_type_id = 0x57ec54dd;
		constexpr static std::string_view TapMaxHoldTime_type_name = "TapMaxHoldTime";
		constexpr static rivet::rivet_type_id TapMaxHoldTime_type_id = 0x956d7fe6;
		constexpr static std::string_view DrawDebugImguiWindow_type_name = "DrawDebugImguiWindow";
		constexpr static rivet::rivet_type_id DrawDebugImguiWindow_type_id = 0x623d726e; 

		explicit WeaponSettings() = default;
		explicit WeaponSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool OneHitKill {};
		rivet::ddl::generated::xb5e7b894 InfiniteAmmo {};
		float TapMaxHoldTime {};
		bool DrawDebugImguiWindow {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
