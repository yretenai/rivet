// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED NodeGraphBuiltDebugIdMapping : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "NodeGraphBuiltDebugIdMapping";
		constexpr static rivet::rivet_type_id type_id = 0x9b2e05de;

		constexpr static std::string_view FlattenedId_type_name = "FlattenedId";
		constexpr static rivet::rivet_type_id FlattenedId_type_id = 0xb8bdc402;
		constexpr static std::string_view OriginalAssetId_type_name = "OriginalAssetId";
		constexpr static rivet::rivet_type_id OriginalAssetId_type_id = 0xd114c6ad;
		constexpr static std::string_view OriginalId_type_name = "OriginalId";
		constexpr static rivet::rivet_type_id OriginalId_type_id = 0xe77a2f8b;
		constexpr static std::string_view OriginalEmbeddedGraphId_type_name = "OriginalEmbeddedGraphId";
		constexpr static rivet::rivet_type_id OriginalEmbeddedGraphId_type_id = 0x8e971938; 

		explicit NodeGraphBuiltDebugIdMapping() = default;
		explicit NodeGraphBuiltDebugIdMapping([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t FlattenedId {};
		uint64_t OriginalAssetId {};
		uint64_t OriginalId {};
		uint64_t OriginalEmbeddedGraphId {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<NodeGraphBuiltDebugIdMapping>;
	};
} // namespace rivet::ddl::generated

// clang-format on
