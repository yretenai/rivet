// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x59a8f068.hpp>
#include <rivet/ddl/generated/enums/x94fdc626.hpp> 

namespace rivet::ddl::generated {
	struct AnimFootstepRemovedEventKey;
	struct AnimFootstepJoint; 

	struct RIVET_DDL_SHARED AnimFootstepConfigDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimFootstepConfigDef";
		constexpr static rivet::rivet_type_id type_id = 0xfe7a51fd;

		constexpr static std::string_view Strength_type_name = "Strength";
		constexpr static rivet::rivet_type_id Strength_type_id = 0x2cb85ca8;
		constexpr static std::string_view Speed_type_name = "Speed";
		constexpr static rivet::rivet_type_id Speed_type_id = 0x16753237;
		constexpr static std::string_view FootStepJoints_type_name = "FootStepJoints";
		constexpr static rivet::rivet_type_id FootStepJoints_type_id = 0x72d44bb8;
		constexpr static std::string_view RemovedEvents_type_name = "RemovedEvents";
		constexpr static rivet::rivet_type_id RemovedEvents_type_id = 0x605a7dab;
		constexpr static std::string_view AnimPoseKeyVersion_type_name = "AnimPoseKeyVersion";
		constexpr static rivet::rivet_type_id AnimPoseKeyVersion_type_id = 0xf5a62f51; 

		explicit AnimFootstepConfigDef() = default;
		explicit AnimFootstepConfigDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x94fdc626 Strength {};
		rivet::ddl::generated::x59a8f068 Speed {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimFootstepJoint>> FootStepJoints {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimFootstepRemovedEventKey>> RemovedEvents {};
		std::string_view AnimPoseKeyVersion {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimFootstepConfigDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
