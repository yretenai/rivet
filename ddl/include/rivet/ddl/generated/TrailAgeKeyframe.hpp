// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED TrailAgeKeyframe : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TrailAgeKeyframe";
		constexpr static rivet::rivet_type_id type_id = 0x7d558cbb;

		constexpr static std::string_view Luminance_type_name = "Luminance";
		constexpr static rivet::rivet_type_id Luminance_type_id = 0x6b500782;
		constexpr static std::string_view Color_type_name = "Color";
		constexpr static rivet::rivet_type_id Color_type_id = 0x7f058428;
		constexpr static std::string_view Alpha_type_name = "Alpha";
		constexpr static rivet::rivet_type_id Alpha_type_id = 0xc9b3f5ab;
		constexpr static std::string_view Scales_type_name = "Scales";
		constexpr static rivet::rivet_type_id Scales_type_id = 0xcf4f8070;
		constexpr static std::string_view Custom_type_name = "Custom";
		constexpr static rivet::rivet_type_id Custom_type_id = 0xcbfc58fc; 

		explicit TrailAgeKeyframe() = default;
		explicit TrailAgeKeyframe([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Luminance {};
		bool Color {};
		bool Alpha {};
		bool Scales {};
		bool Custom {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TrailAgeKeyframe>;
	};
} // namespace rivet::ddl::generated

// clang-format on
