// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x96f58b25.hpp> 

namespace rivet::ddl::generated {
	struct InteractGeneralOfferPrius; 

	struct RIVET_DDL_SHARED InteractEnablePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "InteractEnablePrius";
		constexpr static rivet::rivet_type_id type_id = 0xf92aaa25;

		constexpr static std::string_view StartActive_type_name = "StartActive";
		constexpr static rivet::rivet_type_id StartActive_type_id = 0x3e035e82;
		constexpr static std::string_view AnimDriverInactive_type_name = "AnimDriverInactive";
		constexpr static rivet::rivet_type_id AnimDriverInactive_type_id = 0x78c8ed4b;
		constexpr static std::string_view AnimDriverActive_type_name = "AnimDriverActive";
		constexpr static rivet::rivet_type_id AnimDriverActive_type_id = 0xdb6ffe4e;
		constexpr static std::string_view AnimDriverUse_type_name = "AnimDriverUse";
		constexpr static rivet::rivet_type_id AnimDriverUse_type_id = 0x408cdf38;
		constexpr static std::string_view EnableType_type_name = "EnableType";
		constexpr static rivet::rivet_type_id EnableType_type_id = 0xb8f74eb3;
		constexpr static std::string_view EnableActorGroup_type_name = "EnableActorGroup";
		constexpr static rivet::rivet_type_id EnableActorGroup_type_id = 0x5ffbe5a4;
		constexpr static std::string_view InteractOfferPrius_type_name = "InteractOfferPrius";
		constexpr static rivet::rivet_type_id InteractOfferPrius_type_id = 0xb5acc8f8; 

		explicit InteractEnablePrius() = default;
		explicit InteractEnablePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool StartActive {};
		std::string_view AnimDriverInactive {};
		std::string_view AnimDriverActive {};
		std::string_view AnimDriverUse {};
		rivet::ddl::generated::x96f58b25 EnableType {};
		uint64_t EnableActorGroup {};
		std::shared_ptr<rivet::ddl::generated::InteractGeneralOfferPrius> InteractOfferPrius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<InteractEnablePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
