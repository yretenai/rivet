// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct LunaFtpUserLocation; 

	struct RIVET_DDL_SHARED LunaFtpUserConfigFile : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LunaFtpUserConfigFile";
		constexpr static rivet::rivet_type_id type_id = 0x82740ec;

		constexpr static std::string_view UserName_type_name = "UserName";
		constexpr static rivet::rivet_type_id UserName_type_id = 0xa26d1439;
		constexpr static std::string_view DefaultLocation_type_name = "DefaultLocation";
		constexpr static rivet::rivet_type_id DefaultLocation_type_id = 0x22ce8b28;
		constexpr static std::string_view DefaultProjectId_type_name = "DefaultProjectId";
		constexpr static rivet::rivet_type_id DefaultProjectId_type_id = 0x87ee6cba;
		constexpr static std::string_view Locations_type_name = "Locations";
		constexpr static rivet::rivet_type_id Locations_type_id = 0x951bd5b6; 

		explicit LunaFtpUserConfigFile() = default;
		explicit LunaFtpUserConfigFile([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view UserName {};
		std::string_view DefaultLocation {};
		std::string_view DefaultProjectId {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LunaFtpUserLocation>> Locations {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LunaFtpUserConfigFile>;
	};
} // namespace rivet::ddl::generated

// clang-format on
