// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/KnockbackLevels.hpp>
#include <rivet/ddl/generated/enums/DamageTypes.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DamageEmitEntry : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DamageEmitEntry";
		constexpr static rivet::rivet_type_id type_id = 0xc415bbd7;

		constexpr static std::string_view DamageDesc_type_name = "DamageDesc";
		constexpr static rivet::rivet_type_id DamageDesc_type_id = 0x367ee30;
		constexpr static std::string_view SourceLocatorName_type_name = "SourceLocatorName";
		constexpr static rivet::rivet_type_id SourceLocatorName_type_id = 0x58c28db;
		constexpr static std::string_view DamageRadius_type_name = "DamageRadius";
		constexpr static rivet::rivet_type_id DamageRadius_type_id = 0xe3e6fa68;
		constexpr static std::string_view UseSweptSphere_type_name = "UseSweptSphere";
		constexpr static rivet::rivet_type_id UseSweptSphere_type_id = 0xee3d188c;
		constexpr static std::string_view EndLocatorName_type_name = "EndLocatorName";
		constexpr static rivet::rivet_type_id EndLocatorName_type_id = 0x6c0fd513;
		constexpr static std::string_view SweptSphereRange_type_name = "SweptSphereRange";
		constexpr static rivet::rivet_type_id SweptSphereRange_type_id = 0x8c892be6;
		constexpr static std::string_view DamageAmount_type_name = "DamageAmount";
		constexpr static rivet::rivet_type_id DamageAmount_type_id = 0x563be470;
		constexpr static std::string_view DamageApplyTime_type_name = "DamageApplyTime";
		constexpr static rivet::rivet_type_id DamageApplyTime_type_id = 0x5566b87a;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view StatusAmount_type_name = "StatusAmount";
		constexpr static rivet::rivet_type_id StatusAmount_type_id = 0x37e1f098;
		constexpr static std::string_view Knockback_type_name = "Knockback";
		constexpr static rivet::rivet_type_id Knockback_type_id = 0x2e553fdd;
		constexpr static std::string_view KnockbackAmount_type_name = "KnockbackAmount";
		constexpr static rivet::rivet_type_id KnockbackAmount_type_id = 0x7b1e600b;
		constexpr static std::string_view DamageFriends_type_name = "DamageFriends";
		constexpr static rivet::rivet_type_id DamageFriends_type_id = 0x3be354f0;
		constexpr static std::string_view SingleShotDamage_type_name = "SingleShotDamage";
		constexpr static rivet::rivet_type_id SingleShotDamage_type_id = 0x549e508f;
		constexpr static std::string_view ExcludeHeroes_type_name = "ExcludeHeroes";
		constexpr static rivet::rivet_type_id ExcludeHeroes_type_id = 0xd5834e5c; 

		explicit DamageEmitEntry() = default;
		explicit DamageEmitEntry([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view DamageDesc {};
		std::string_view SourceLocatorName {};
		float DamageRadius {};
		bool UseSweptSphere {};
		std::string_view EndLocatorName {};
		float SweptSphereRange {};
		float DamageAmount {};
		float DamageApplyTime {};
		rivet::ddl::generated::DamageTypes Type {};
		float StatusAmount {};
		rivet::ddl::generated::KnockbackLevels Knockback {};
		float KnockbackAmount {};
		bool DamageFriends {};
		bool SingleShotDamage {};
		bool ExcludeHeroes {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageEmitEntry>;
	};
} // namespace rivet::ddl::generated

// clang-format on
