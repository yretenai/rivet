// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/SkinItemCategoryList.hpp>

namespace rivet::ddl::generated {
	SkinItemCategoryList::SkinItemCategoryList([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Category = serialized->get_enum<rivet::ddl::generated::xf28253cd>(Category_type_id, rivet::ddl::generated::xf28253cd_values, rivet::ddl::generated::xf28253cd::None);
		CategoryLocTag = serialized->get_string(CategoryLocTag_type_id, {});
		Display = serialized->get_bool(Display_type_id, true);
		UIType = serialized->get_enum<rivet::ddl::generated::xf20c2999>(UIType_type_id, rivet::ddl::generated::xf20c2999_values, rivet::ddl::generated::xf20c2999::None);
		ItemConfigs = serialized->get_strings(ItemConfigs_type_id);
		IsBodyCategory = serialized->get_bool(IsBodyCategory_type_id, false);
		ShowOnBootup = serialized->get_bool(ShowOnBootup_type_id, false);
		SubMenu = serialized->get_enum<rivet::ddl::generated::xca348341>(SubMenu_type_id, rivet::ddl::generated::xca348341_values, rivet::ddl::generated::xca348341::None);
		MenuPriority = serialized->get_uint32(MenuPriority_type_id, 0); 
	}

	[[nodiscard]] auto
	SkinItemCategoryList::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	SkinItemCategoryList::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SkinItemCategoryList> {
		if (incoming_type_id == SkinItemCategoryList::type_id) {
			return std::make_shared<SkinItemCategoryList>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
