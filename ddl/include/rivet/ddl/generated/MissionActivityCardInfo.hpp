// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ActivityReward; 

	struct RIVET_DDL_SHARED MissionActivityCardInfo : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MissionActivityCardInfo";
		constexpr static rivet::rivet_type_id type_id = 0x9a95fbdb;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view ActivityDescTagOverride_type_name = "ActivityDescTagOverride";
		constexpr static rivet::rivet_type_id ActivityDescTagOverride_type_id = 0x6a429009;
		constexpr static std::string_view ActivitySmallImage_type_name = "ActivitySmallImage";
		constexpr static rivet::rivet_type_id ActivitySmallImage_type_id = 0xfbf28f9a;
		constexpr static std::string_view ActivityLargeImage_type_name = "ActivityLargeImage";
		constexpr static rivet::rivet_type_id ActivityLargeImage_type_id = 0x1c5f9511;
		constexpr static std::string_view Reward_type_name = "Reward";
		constexpr static rivet::rivet_type_id Reward_type_id = 0x70a93c34; 

		explicit MissionActivityCardInfo() = default;
		explicit MissionActivityCardInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		std::string_view ActivityDescTagOverride {};
		std::string_view ActivitySmallImage {};
		std::string_view ActivityLargeImage {};
		std::shared_ptr<rivet::ddl::generated::ActivityReward> Reward {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MissionActivityCardInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
