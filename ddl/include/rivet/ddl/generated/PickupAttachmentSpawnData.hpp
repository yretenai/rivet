// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ActorSpawnData.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PickupAttachmentSpawnData : ActorSpawnData {
		constexpr static std::string_view type_name = "PickupAttachmentSpawnData";
		constexpr static rivet::rivet_type_id type_id = 0x569185c;

		constexpr static std::string_view PickupAsset_type_name = "PickupAsset";
		constexpr static rivet::rivet_type_id PickupAsset_type_id = 0x6ddaecfa;
		constexpr static std::string_view AttachActor_type_name = "AttachActor";
		constexpr static rivet::rivet_type_id AttachActor_type_id = 0x24c2eb7e;
		constexpr static std::string_view TrackerComponent_type_name = "TrackerComponent";
		constexpr static rivet::rivet_type_id TrackerComponent_type_id = 0xd2c6c7a;
		constexpr static std::string_view LocatorHash_type_name = "LocatorHash";
		constexpr static rivet::rivet_type_id LocatorHash_type_id = 0xd78f4ef3; 

		explicit PickupAttachmentSpawnData() = default;
		explicit PickupAttachmentSpawnData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t PickupAsset {};
		uint32_t AttachActor {};
		uint32_t TrackerComponent {};
		uint32_t LocatorHash {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PickupAttachmentSpawnData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
