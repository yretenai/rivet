// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct HeroAwarenessConfig;
	struct FlavorCycleConfig; 

	struct RIVET_DDL_SHARED HeroFlavorAnimConfig : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroFlavorAnimConfig";
		constexpr static rivet::rivet_type_id type_id = 0x99daea31;

		constexpr static std::string_view FidgetIntervalMin_type_name = "FidgetIntervalMin";
		constexpr static rivet::rivet_type_id FidgetIntervalMin_type_id = 0xe7d7f59e;
		constexpr static std::string_view FidgetIntervalMax_type_name = "FidgetIntervalMax";
		constexpr static rivet::rivet_type_id FidgetIntervalMax_type_id = 0xdbdacac7;
		constexpr static std::string_view JumpLandHeightRangeShort_type_name = "JumpLandHeightRangeShort";
		constexpr static rivet::rivet_type_id JumpLandHeightRangeShort_type_id = 0x91ce0483;
		constexpr static std::string_view JumpLandHeightRangeLong_type_name = "JumpLandHeightRangeLong";
		constexpr static rivet::rivet_type_id JumpLandHeightRangeLong_type_id = 0xd39b90dc;
		constexpr static std::string_view FallHeightRangeShort_type_name = "FallHeightRangeShort";
		constexpr static rivet::rivet_type_id FallHeightRangeShort_type_id = 0x92c8e416;
		constexpr static std::string_view FallHeightRangeMid_type_name = "FallHeightRangeMid";
		constexpr static rivet::rivet_type_id FallHeightRangeMid_type_id = 0x2828a3d5;
		constexpr static std::string_view FallHeightRangeLong_type_name = "FallHeightRangeLong";
		constexpr static rivet::rivet_type_id FallHeightRangeLong_type_id = 0x6399095e;
		constexpr static std::string_view SlopeVarLerpSpeed_type_name = "SlopeVarLerpSpeed";
		constexpr static rivet::rivet_type_id SlopeVarLerpSpeed_type_id = 0xae9d14e4;
		constexpr static std::string_view TurbulenceMinSpeed_type_name = "TurbulenceMinSpeed";
		constexpr static rivet::rivet_type_id TurbulenceMinSpeed_type_id = 0xd58c9625;
		constexpr static std::string_view TurbulenceMaxSpeed_type_name = "TurbulenceMaxSpeed";
		constexpr static rivet::rivet_type_id TurbulenceMaxSpeed_type_id = 0x33ec39c4;
		constexpr static std::string_view RunCycles_type_name = "RunCycles";
		constexpr static rivet::rivet_type_id RunCycles_type_id = 0x414ee70c;
		constexpr static std::string_view GrindCycles_type_name = "GrindCycles";
		constexpr static rivet::rivet_type_id GrindCycles_type_id = 0xe386f418;
		constexpr static std::string_view GrindSlideCycles_type_name = "GrindSlideCycles";
		constexpr static rivet::rivet_type_id GrindSlideCycles_type_id = 0xa9a5d53c;
		constexpr static std::string_view HeroAwareness_type_name = "HeroAwareness";
		constexpr static rivet::rivet_type_id HeroAwareness_type_id = 0x5fd01dd0; 

		explicit HeroFlavorAnimConfig() = default;
		explicit HeroFlavorAnimConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float FidgetIntervalMin {};
		float FidgetIntervalMax {};
		float JumpLandHeightRangeShort {};
		float JumpLandHeightRangeLong {};
		float FallHeightRangeShort {};
		float FallHeightRangeMid {};
		float FallHeightRangeLong {};
		float SlopeVarLerpSpeed {};
		float TurbulenceMinSpeed {};
		float TurbulenceMaxSpeed {};
		std::shared_ptr<rivet::ddl::generated::FlavorCycleConfig> RunCycles {};
		std::shared_ptr<rivet::ddl::generated::FlavorCycleConfig> GrindCycles {};
		std::shared_ptr<rivet::ddl::generated::FlavorCycleConfig> GrindSlideCycles {};
		std::shared_ptr<rivet::ddl::generated::HeroAwarenessConfig> HeroAwareness {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroFlavorAnimConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
