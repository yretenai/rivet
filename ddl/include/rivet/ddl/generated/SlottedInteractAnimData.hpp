// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SlottedInteractAnimData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SlottedInteractAnimData";
		constexpr static rivet::rivet_type_id type_id = 0x8a3f6597;

		constexpr static std::string_view ObjectPreIdle_type_name = "ObjectPreIdle";
		constexpr static rivet::rivet_type_id ObjectPreIdle_type_id = 0x7c19021f;
		constexpr static std::string_view ObjectIntro_type_name = "ObjectIntro";
		constexpr static rivet::rivet_type_id ObjectIntro_type_id = 0x9628f7f7;
		constexpr static std::string_view ObjectUse_type_name = "ObjectUse";
		constexpr static rivet::rivet_type_id ObjectUse_type_id = 0x6b6d86bc;
		constexpr static std::string_view ObjectOutro_type_name = "ObjectOutro";
		constexpr static rivet::rivet_type_id ObjectOutro_type_id = 0x9e70d2c9;
		constexpr static std::string_view ObjectOutroFail_type_name = "ObjectOutroFail";
		constexpr static rivet::rivet_type_id ObjectOutroFail_type_id = 0xba91dc0c;
		constexpr static std::string_view ObjectPostIdle_type_name = "ObjectPostIdle";
		constexpr static rivet::rivet_type_id ObjectPostIdle_type_id = 0xb7127c8d;
		constexpr static std::string_view UserIntro_type_name = "UserIntro";
		constexpr static rivet::rivet_type_id UserIntro_type_id = 0x7e9d49fa;
		constexpr static std::string_view UserIdle_type_name = "UserIdle";
		constexpr static rivet::rivet_type_id UserIdle_type_id = 0x206adf2a;
		constexpr static std::string_view UserFidget_type_name = "UserFidget";
		constexpr static rivet::rivet_type_id UserFidget_type_id = 0xf9138325;
		constexpr static std::string_view UserUse_type_name = "UserUse";
		constexpr static rivet::rivet_type_id UserUse_type_id = 0x6c39ff36;
		constexpr static std::string_view UserRelease_type_name = "UserRelease";
		constexpr static rivet::rivet_type_id UserRelease_type_id = 0x404797e4;
		constexpr static std::string_view UserReleaseFail_type_name = "UserReleaseFail";
		constexpr static rivet::rivet_type_id UserReleaseFail_type_id = 0x6ff4bb23; 

		explicit SlottedInteractAnimData() = default;
		explicit SlottedInteractAnimData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ObjectPreIdle {};
		std::string_view ObjectIntro {};
		std::string_view ObjectUse {};
		std::string_view ObjectOutro {};
		std::string_view ObjectOutroFail {};
		std::string_view ObjectPostIdle {};
		std::string_view UserIntro {};
		std::string_view UserIdle {};
		std::string_view UserFidget {};
		std::string_view UserUse {};
		std::string_view UserRelease {};
		std::string_view UserReleaseFail {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SlottedInteractAnimData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
