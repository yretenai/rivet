// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x545e4076.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SetUpControllerData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SetUpControllerData";
		constexpr static rivet::rivet_type_id type_id = 0xe065fbe6;

		constexpr static std::string_view UniqueSetupName_type_name = "UniqueSetupName";
		constexpr static rivet::rivet_type_id UniqueSetupName_type_id = 0x9e0c1481;
		constexpr static std::string_view CheckpointName_type_name = "CheckpointName";
		constexpr static rivet::rivet_type_id CheckpointName_type_id = 0x71d061f1;
		constexpr static std::string_view InitialCount_type_name = "InitialCount";
		constexpr static rivet::rivet_type_id InitialCount_type_id = 0x90d607b0;
		constexpr static std::string_view SetupType_type_name = "SetupType";
		constexpr static rivet::rivet_type_id SetupType_type_id = 0x826375e3;
		constexpr static std::string_view DebugLogging_type_name = "DebugLogging";
		constexpr static rivet::rivet_type_id DebugLogging_type_id = 0x9fc0ec8f; 

		explicit SetUpControllerData() = default;
		explicit SetUpControllerData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view UniqueSetupName {};
		std::string_view CheckpointName {};
		uint8_t InitialCount {};
		rivet::ddl::generated::x545e4076 SetupType {};
		bool DebugLogging {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SetUpControllerData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
