// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RCSMoveInput : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RCSMoveInput";
		constexpr static rivet::rivet_type_id type_id = 0x43ff6450;

		constexpr static std::string_view FromFile_type_name = "FromFile";
		constexpr static rivet::rivet_type_id FromFile_type_id = 0x67b94266;
		constexpr static std::string_view ToFile_type_name = "ToFile";
		constexpr static rivet::rivet_type_id ToFile_type_id = 0x98206bd;
		constexpr static std::string_view Changelist_type_name = "Changelist";
		constexpr static rivet::rivet_type_id Changelist_type_id = 0x3b0ddc6;
		constexpr static std::string_view Force_type_name = "Force";
		constexpr static rivet::rivet_type_id Force_type_id = 0x8e3b4fe9;
		constexpr static std::string_view Preview_type_name = "Preview";
		constexpr static rivet::rivet_type_id Preview_type_id = 0xb86f4c08; 

		explicit RCSMoveInput() = default;
		explicit RCSMoveInput([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view FromFile {};
		std::string_view ToFile {};
		uint32_t Changelist {};
		bool Force {};
		bool Preview {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RCSMoveInput>;
	};
} // namespace rivet::ddl::generated

// clang-format on
