// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct HitReactPrius;
	struct PartialReactNonePrius; 

	struct RIVET_DDL_SHARED BotConfigHitReact : ConfigBase {
		constexpr const static std::string_view type_name = "BotConfigHitReact";
		constexpr const static rivet::rivet_type_id type_id = 0xe50934e;

		constexpr const static std::string_view HitReact_type_name = "HitReact";
		constexpr const static rivet::rivet_type_id HitReact_type_id = 0xc36283a;
		constexpr const static std::string_view PartialReact_type_name = "PartialReact";
		constexpr const static rivet::rivet_type_id PartialReact_type_id = 0xd16d75b3;
		constexpr const static std::string_view BodyPartToFilterConfig_type_name = "BodyPartToFilterConfig";
		constexpr const static rivet::rivet_type_id BodyPartToFilterConfig_type_id = 0xb736e25c; 

		explicit BotConfigHitReact() = default;
		explicit BotConfigHitReact([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::HitReactPrius> HitReact {};
		std::shared_ptr<rivet::ddl::generated::PartialReactNonePrius> PartialReact {};
		std::string_view BodyPartToFilterConfig {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotConfigHitReact>;
	};
} // namespace rivet::ddl::generated

// clang-format on
