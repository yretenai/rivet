// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED GPUProgramDesc : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "GPUProgramDesc";
		constexpr static rivet::rivet_type_id type_id = 0x4769aac6;

		constexpr static std::string_view PSTextureMask_type_name = "PSTextureMask";
		constexpr static rivet::rivet_type_id PSTextureMask_type_id = 0xaa5d733;
		constexpr static std::string_view PSInterpMask_type_name = "PSInterpMask";
		constexpr static rivet::rivet_type_id PSInterpMask_type_id = 0x3bf6b15d;
		constexpr static std::string_view DSTextureMask_type_name = "DSTextureMask";
		constexpr static rivet::rivet_type_id DSTextureMask_type_id = 0x7e1b1b7f;
		constexpr static std::string_view DSInterpMask_type_name = "DSInterpMask";
		constexpr static rivet::rivet_type_id DSInterpMask_type_id = 0x34e867de;
		constexpr static std::string_view HSTextureMask_type_name = "HSTextureMask";
		constexpr static rivet::rivet_type_id HSTextureMask_type_id = 0xe4a1a284;
		constexpr static std::string_view HSInterpMask_type_name = "HSInterpMask";
		constexpr static rivet::rivet_type_id HSInterpMask_type_id = 0x31e22a5f;
		constexpr static std::string_view VSTextureMask_type_name = "VSTextureMask";
		constexpr static rivet::rivet_type_id VSTextureMask_type_id = 0xaa4008ee;
		constexpr static std::string_view VSInterpMask_type_name = "VSInterpMask";
		constexpr static rivet::rivet_type_id VSInterpMask_type_id = 0xd4cb14bd; 

		explicit GPUProgramDesc() = default;
		explicit GPUProgramDesc([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t PSTextureMask {};
		uint32_t PSInterpMask {};
		uint32_t DSTextureMask {};
		uint32_t DSInterpMask {};
		uint32_t HSTextureMask {};
		uint32_t HSInterpMask {};
		uint32_t VSTextureMask {};
		uint32_t VSInterpMask {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GPUProgramDesc>;
	};
} // namespace rivet::ddl::generated

// clang-format on
