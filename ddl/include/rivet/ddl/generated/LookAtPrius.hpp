// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x6729cb3b.hpp>
#include <rivet/ddl/generated/enums/x7bee456.hpp>
#include <rivet/ddl/generated/enums/xf16844d6.hpp>
#include <rivet/ddl/generated/EnabledComponentBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LookAtPrius : EnabledComponentBasePrius {
		constexpr static std::string_view type_name = "LookAtPrius";
		constexpr static rivet::rivet_type_id type_id = 0xc58a82f1;

		constexpr static std::string_view LookAtAwareness_type_name = "LookAtAwareness";
		constexpr static rivet::rivet_type_id LookAtAwareness_type_id = 0x9ce33f31;
		constexpr static std::string_view LookAtRange_type_name = "LookAtRange";
		constexpr static rivet::rivet_type_id LookAtRange_type_id = 0x7489fae7;
		constexpr static std::string_view TargetType_type_name = "TargetType";
		constexpr static rivet::rivet_type_id TargetType_type_id = 0x75a19d21;
		constexpr static std::string_view TargetPriority_type_name = "TargetPriority";
		constexpr static rivet::rivet_type_id TargetPriority_type_id = 0x76a817c3;
		constexpr static std::string_view SpecificTarget_type_name = "SpecificTarget";
		constexpr static rivet::rivet_type_id SpecificTarget_type_id = 0x51ae384d;
		constexpr static std::string_view TargetLocationType_type_name = "TargetLocationType";
		constexpr static rivet::rivet_type_id TargetLocationType_type_id = 0x61afe359;
		constexpr static std::string_view TargetLocatorName_type_name = "TargetLocatorName";
		constexpr static rivet::rivet_type_id TargetLocatorName_type_id = 0x4bd4816e;
		constexpr static std::string_view TargetLocUpOffset_type_name = "TargetLocUpOffset";
		constexpr static rivet::rivet_type_id TargetLocUpOffset_type_id = 0xf49d96bb; 

		explicit LookAtPrius() = default;
		explicit LookAtPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t LookAtAwareness {};
		float LookAtRange {};
		rivet::ddl::generated::xf16844d6 TargetType {};
		rivet::ddl::generated::x7bee456 TargetPriority {};
		uint64_t SpecificTarget {};
		rivet::ddl::generated::x6729cb3b TargetLocationType {};
		std::string_view TargetLocatorName {};
		float TargetLocUpOffset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LookAtPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
