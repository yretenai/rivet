// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED FlockDensityConfig : ConfigBase {
		constexpr const static std::string_view type_name = "FlockDensityConfig";
		constexpr const static rivet::rivet_type_id type_id = 0xfec78f0d;

		constexpr const static std::string_view MaxActivatedVolumeNum_type_name = "MaxActivatedVolumeNum";
		constexpr const static rivet::rivet_type_id MaxActivatedVolumeNum_type_id = 0x140ef916;
		constexpr const static std::string_view MinFlockSize_type_name = "MinFlockSize";
		constexpr const static rivet::rivet_type_id MinFlockSize_type_id = 0xab1793e2;
		constexpr const static std::string_view MaxFlockSize_type_name = "MaxFlockSize";
		constexpr const static rivet::rivet_type_id MaxFlockSize_type_id = 0x3b648308; 

		explicit FlockDensityConfig() = default;
		explicit FlockDensityConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint8_t MaxActivatedVolumeNum {};
		int32_t MinFlockSize {};
		int32_t MaxFlockSize {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FlockDensityConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
