// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x14f7ad69.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED CVCCollDataPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CVCCollDataPrius";
		constexpr static rivet::rivet_type_id type_id = 0x86c2a5b8;

		constexpr static std::string_view PushValue_type_name = "PushValue";
		constexpr static rivet::rivet_type_id PushValue_type_id = 0x5354102f;
		constexpr static std::string_view PushOnEqual_type_name = "PushOnEqual";
		constexpr static rivet::rivet_type_id PushOnEqual_type_id = 0x6bcc1e52;
		constexpr static std::string_view AlwaysPushVertical_type_name = "AlwaysPushVertical";
		constexpr static rivet::rivet_type_id AlwaysPushVertical_type_id = 0xce87d89f;
		constexpr static std::string_view AllowSoftCollisions_type_name = "AllowSoftCollisions";
		constexpr static rivet::rivet_type_id AllowSoftCollisions_type_id = 0xa60463e3;
		constexpr static std::string_view UpdateExtents_type_name = "UpdateExtents";
		constexpr static rivet::rivet_type_id UpdateExtents_type_id = 0x690eb294;
		constexpr static std::string_view ManualUpdateShape_type_name = "ManualUpdateShape";
		constexpr static rivet::rivet_type_id ManualUpdateShape_type_id = 0x31a557fe;
		constexpr static std::string_view Crucial_type_name = "Crucial";
		constexpr static rivet::rivet_type_id Crucial_type_id = 0x777f69c;
		constexpr static std::string_view ApplyActorScale_type_name = "ApplyActorScale";
		constexpr static rivet::rivet_type_id ApplyActorScale_type_id = 0x3b6cec91;
		constexpr static std::string_view MovingEnvironment_type_name = "MovingEnvironment";
		constexpr static rivet::rivet_type_id MovingEnvironment_type_id = 0x53f7079d;
		constexpr static std::string_view LocatorOrJointName_type_name = "LocatorOrJointName";
		constexpr static rivet::rivet_type_id LocatorOrJointName_type_id = 0x7ad392f4;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view SoftRadiusInner_type_name = "SoftRadiusInner";
		constexpr static rivet::rivet_type_id SoftRadiusInner_type_id = 0x19e2d4c8;
		constexpr static std::string_view SoftRadiusOuter_type_name = "SoftRadiusOuter";
		constexpr static rivet::rivet_type_id SoftRadiusOuter_type_id = 0xbd750;
		constexpr static std::string_view HeightUp_type_name = "HeightUp";
		constexpr static rivet::rivet_type_id HeightUp_type_id = 0x7be988d7;
		constexpr static std::string_view HeightDown_type_name = "HeightDown";
		constexpr static rivet::rivet_type_id HeightDown_type_id = 0x18b154fa;
		constexpr static std::string_view UseModelOBB_type_name = "UseModelOBB";
		constexpr static rivet::rivet_type_id UseModelOBB_type_id = 0x3fde35ca;
		constexpr static std::string_view BoxExtentsX_type_name = "BoxExtentsX";
		constexpr static rivet::rivet_type_id BoxExtentsX_type_id = 0x134ca79e;
		constexpr static std::string_view BoxExtentsY_type_name = "BoxExtentsY";
		constexpr static rivet::rivet_type_id BoxExtentsY_type_id = 0x644b9708;
		constexpr static std::string_view BoxExtentsZ_type_name = "BoxExtentsZ";
		constexpr static rivet::rivet_type_id BoxExtentsZ_type_id = 0xfd42c6b2;
		constexpr static std::string_view BoxOBBCenter_type_name = "BoxOBBCenter";
		constexpr static rivet::rivet_type_id BoxOBBCenter_type_id = 0x1519894d; 

		explicit CVCCollDataPrius() = default;
		explicit CVCCollDataPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float PushValue {};
		bool PushOnEqual {};
		bool AlwaysPushVertical {};
		bool AllowSoftCollisions {};
		bool UpdateExtents {};
		bool ManualUpdateShape {};
		bool Crucial {};
		bool ApplyActorScale {};
		bool MovingEnvironment {};
		std::string_view LocatorOrJointName {};
		rivet::ddl::generated::x14f7ad69 Type {};
		float Radius {};
		float SoftRadiusInner {};
		float SoftRadiusOuter {};
		float HeightUp {};
		float HeightDown {};
		bool UseModelOBB {};
		float BoxExtentsX {};
		float BoxExtentsY {};
		float BoxExtentsZ {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> BoxOBBCenter {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CVCCollDataPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
