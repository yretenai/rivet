// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct WebServerStatus;
	struct TrackerScanProgress;
	struct RequestProcessorStatus;
	struct BuildWorkerProgress;
	struct BuildManagerStatus; 

	struct RIVET_DDL_SHARED TrackerState : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "TrackerState";
		constexpr static rivet::rivet_type_id type_id = 0xd40704fe;

		constexpr static std::string_view BuildManagerStatus_type_name = "BuildManagerStatus";
		constexpr static rivet::rivet_type_id BuildManagerStatus_type_id = 0xa093cfdb;
		constexpr static std::string_view BuildWorkerStatus_type_name = "BuildWorkerStatus";
		constexpr static rivet::rivet_type_id BuildWorkerStatus_type_id = 0x57d7b408;
		constexpr static std::string_view RequestProcessorStatus_type_name = "RequestProcessorStatus";
		constexpr static rivet::rivet_type_id RequestProcessorStatus_type_id = 0xc2889962;
		constexpr static std::string_view StatusMessages_type_name = "StatusMessages";
		constexpr static rivet::rivet_type_id StatusMessages_type_id = 0xcb41b9c;
		constexpr static std::string_view TrackerStatus_type_name = "TrackerStatus";
		constexpr static rivet::rivet_type_id TrackerStatus_type_id = 0xd91feac8;
		constexpr static std::string_view WebServerStatus_type_name = "WebServerStatus";
		constexpr static rivet::rivet_type_id WebServerStatus_type_id = 0x1a457ba5; 

		explicit TrackerState() = default;
		explicit TrackerState([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::BuildManagerStatus> BuildManagerStatus {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BuildWorkerProgress>> BuildWorkerStatus {};
		std::shared_ptr<rivet::ddl::generated::RequestProcessorStatus> RequestProcessorStatus {};
		std::vector<std::string_view> StatusMessages {};
		std::shared_ptr<rivet::ddl::generated::TrackerScanProgress> TrackerStatus {};
		std::shared_ptr<rivet::ddl::generated::WebServerStatus> WebServerStatus {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<TrackerState>;
	};
} // namespace rivet::ddl::generated

// clang-format on
