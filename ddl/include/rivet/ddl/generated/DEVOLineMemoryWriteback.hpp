// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x9547deb2.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DEVOLineMemoryWriteback : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "DEVOLineMemoryWriteback";
		constexpr const static rivet::rivet_type_id type_id = 0xe0643e70;

		constexpr const static std::string_view FactKey_type_name = "FactKey";
		constexpr const static rivet::rivet_type_id FactKey_type_id = 0xc01b176b;
		constexpr const static std::string_view ValueString_type_name = "ValueString";
		constexpr const static rivet::rivet_type_id ValueString_type_id = 0x61508ff3;
		constexpr const static std::string_view ValueNumeric_type_name = "ValueNumeric";
		constexpr const static rivet::rivet_type_id ValueNumeric_type_id = 0x1ee22511;
		constexpr const static std::string_view Duration_type_name = "Duration";
		constexpr const static rivet::rivet_type_id Duration_type_id = 0x7c5e3db0;
		constexpr const static std::string_view Whom_type_name = "Whom";
		constexpr const static rivet::rivet_type_id Whom_type_id = 0x709e779c;
		constexpr const static std::string_view IsDelta_type_name = "IsDelta";
		constexpr const static rivet::rivet_type_id IsDelta_type_id = 0x9ebeecdf; 

		explicit DEVOLineMemoryWriteback() = default;
		explicit DEVOLineMemoryWriteback([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view FactKey {};
		std::string_view ValueString {};
		float ValueNumeric {};
		float Duration {};
		rivet::ddl::generated::x9547deb2 Whom {};
		bool IsDelta {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DEVOLineMemoryWriteback>;
	};
} // namespace rivet::ddl::generated

// clang-format on
