// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/StatusEffectTrackerProtoGrenadePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerFirePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerFreezePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerBasePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerFossilizePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerMagnaMissilePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerShrubberyPrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerLightningRodPrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerWarpRifleImplodePrius.hpp>
#include <rivet/ddl/generated/StatusEffectTrackerRynotizePrius.hpp> 

#include <rivet/ddl/generated/BotConfigStatusEffects.hpp>

namespace rivet::ddl::generated {
	BotConfigStatusEffects::BotConfigStatusEffects([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): ConfigBase(serialized) {
		FireTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerFirePrius>(FireTrackerPrius_type_id);
		FreezeTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerFreezePrius>(FreezeTrackerPrius_type_id);
		PixelizedTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerBasePrius>(PixelizedTrackerPrius_type_id);
		FossilizeTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerFossilizePrius>(FossilizeTrackerPrius_type_id);
		ShrubberyTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerShrubberyPrius>(ShrubberyTrackerPrius_type_id);
		MagnaMissileTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerMagnaMissilePrius>(MagnaMissileTrackerPrius_type_id);
		LightningRodTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerLightningRodPrius>(LightningRodTrackerPrius_type_id);
		ProtoGrenadeTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerProtoGrenadePrius>(ProtoGrenadeTrackerPrius_type_id);
		WarpRifleImplodeTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerWarpRifleImplodePrius>(WarpRifleImplodeTrackerPrius_type_id);
		RynotizeTrackerPrius = serialized->unwrap_into<rivet::ddl::generated::StatusEffectTrackerRynotizePrius>(RynotizeTrackerPrius_type_id); 
	}

	[[nodiscard]] auto
	BotConfigStatusEffects::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	BotConfigStatusEffects::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotConfigStatusEffects> {
		if (incoming_type_id == BotConfigStatusEffects::type_id) {
			return std::make_shared<BotConfigStatusEffects>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
