// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct VanityLookToggle; 

	struct RIVET_DDL_SHARED VanityLookEvent : EventBase {
		constexpr static std::string_view type_name = "VanityLookEvent";
		constexpr static rivet::rivet_type_id type_id = 0xf6e8ef10;

		constexpr static std::string_view HelmetLooks_type_name = "HelmetLooks";
		constexpr static rivet::rivet_type_id HelmetLooks_type_id = 0x71ceffdb;
		constexpr static std::string_view HeadLooks_type_name = "HeadLooks";
		constexpr static rivet::rivet_type_id HeadLooks_type_id = 0x57284036;
		constexpr static std::string_view TorsoLooks_type_name = "TorsoLooks";
		constexpr static rivet::rivet_type_id TorsoLooks_type_id = 0x7c5bf0e6;
		constexpr static std::string_view LeftGloveLooks_type_name = "LeftGloveLooks";
		constexpr static rivet::rivet_type_id LeftGloveLooks_type_id = 0x5530fcdf;
		constexpr static std::string_view RightGloveLooks_type_name = "RightGloveLooks";
		constexpr static rivet::rivet_type_id RightGloveLooks_type_id = 0xa1ffc4d3;
		constexpr static std::string_view LegLooks_type_name = "LegLooks";
		constexpr static rivet::rivet_type_id LegLooks_type_id = 0x26d0c7a7;
		constexpr static std::string_view BootLooks_type_name = "BootLooks";
		constexpr static rivet::rivet_type_id BootLooks_type_id = 0x2fafa6; 

		explicit VanityLookEvent() = default;
		explicit VanityLookEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> HelmetLooks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> HeadLooks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> TorsoLooks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> LeftGloveLooks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> RightGloveLooks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> LegLooks {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VanityLookToggle>> BootLooks {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VanityLookEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
