// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct GraphIOMeta;
	struct GraphNodeNotesDef; 

	struct RIVET_DDL_SHARED GraphSubGraphNodeAux : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "GraphSubGraphNodeAux";
		constexpr static rivet::rivet_type_id type_id = 0x8ca2f618;

		constexpr static std::string_view NameCache_type_name = "NameCache";
		constexpr static rivet::rivet_type_id NameCache_type_id = 0x18e87183;
		constexpr static std::string_view Notes_type_name = "Notes";
		constexpr static rivet::rivet_type_id Notes_type_id = 0x18486a4d;
		constexpr static std::string_view GraphId_type_name = "GraphId";
		constexpr static rivet::rivet_type_id GraphId_type_id = 0x76b05713;
		constexpr static std::string_view Asset_type_name = "Asset";
		constexpr static rivet::rivet_type_id Asset_type_id = 0x1bfc969d;
		constexpr static std::string_view IOCache_type_name = "IOCache";
		constexpr static rivet::rivet_type_id IOCache_type_id = 0x3a02be37; 

		explicit GraphSubGraphNodeAux() = default;
		explicit GraphSubGraphNodeAux([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view NameCache {};
		std::shared_ptr<rivet::ddl::generated::GraphNodeNotesDef> Notes {};
		uint64_t GraphId {};
		std::string_view Asset {};
		std::vector<std::shared_ptr<rivet::ddl::generated::GraphIOMeta>> IOCache {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GraphSubGraphNodeAux>;
	};
} // namespace rivet::ddl::generated

// clang-format on
