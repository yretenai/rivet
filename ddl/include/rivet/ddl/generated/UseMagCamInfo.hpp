// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED UseMagCamInfo : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "UseMagCamInfo";
		constexpr const static rivet::rivet_type_id type_id = 0x82e5f339;

		constexpr const static std::string_view UseMagCamFOV_type_name = "UseMagCamFOV";
		constexpr const static rivet::rivet_type_id UseMagCamFOV_type_id = 0x4c1d9a4b;
		constexpr const static std::string_view UseMagCamFollowHeight_type_name = "UseMagCamFollowHeight";
		constexpr const static rivet::rivet_type_id UseMagCamFollowHeight_type_id = 0xbc29f044;
		constexpr const static std::string_view UseMagCamFollowDist_type_name = "UseMagCamFollowDist";
		constexpr const static rivet::rivet_type_id UseMagCamFollowDist_type_id = 0xdbf36a12;
		constexpr const static std::string_view UseMagCamTargYOffset_type_name = "UseMagCamTargYOffset";
		constexpr const static rivet::rivet_type_id UseMagCamTargYOffset_type_id = 0xe610a581;
		constexpr const static std::string_view UseMagCamPitchOffet_type_name = "UseMagCamPitchOffet";
		constexpr const static rivet::rivet_type_id UseMagCamPitchOffet_type_id = 0x4ae4eee0; 

		explicit UseMagCamInfo() = default;
		explicit UseMagCamInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float UseMagCamFOV {};
		float UseMagCamFollowHeight {};
		float UseMagCamFollowDist {};
		float UseMagCamTargYOffset {};
		float UseMagCamPitchOffet {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<UseMagCamInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
