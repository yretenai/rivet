// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct OfferPrius;
	struct PickupBobData;
	struct DDLVector3; 

	struct RIVET_DDL_SHARED PickupBasePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PickupBasePrius";
		constexpr static rivet::rivet_type_id type_id = 0x2fd159ad;

		constexpr static std::string_view Velocity_type_name = "Velocity";
		constexpr static rivet::rivet_type_id Velocity_type_id = 0x44d96bd9;
		constexpr static std::string_view DecayTimer_type_name = "DecayTimer";
		constexpr static rivet::rivet_type_id DecayTimer_type_id = 0xc4ffecad;
		constexpr static std::string_view NoPickupTime_type_name = "NoPickupTime";
		constexpr static rivet::rivet_type_id NoPickupTime_type_id = 0x68cab92d;
		constexpr static std::string_view PickupRange_type_name = "PickupRange";
		constexpr static rivet::rivet_type_id PickupRange_type_id = 0xfcf2ecef;
		constexpr static std::string_view CollectThreshold_type_name = "CollectThreshold";
		constexpr static rivet::rivet_type_id CollectThreshold_type_id = 0x900a0067;
		constexpr static std::string_view CollisionRadius_type_name = "CollisionRadius";
		constexpr static rivet::rivet_type_id CollisionRadius_type_id = 0x7d546bba;
		constexpr static std::string_view Gravity_type_name = "Gravity";
		constexpr static rivet::rivet_type_id Gravity_type_id = 0x5bf7469f;
		constexpr static std::string_view MaxRandomAngle_type_name = "MaxRandomAngle";
		constexpr static rivet::rivet_type_id MaxRandomAngle_type_id = 0x59e6c184;
		constexpr static std::string_view MinAngularSpeed_type_name = "MinAngularSpeed";
		constexpr static rivet::rivet_type_id MinAngularSpeed_type_id = 0x7857e5b0;
		constexpr static std::string_view MaxAngularSpeed_type_name = "MaxAngularSpeed";
		constexpr static rivet::rivet_type_id MaxAngularSpeed_type_id = 0x5fec8281;
		constexpr static std::string_view MinCollectSpeed_type_name = "MinCollectSpeed";
		constexpr static rivet::rivet_type_id MinCollectSpeed_type_id = 0xf3e8422d;
		constexpr static std::string_view MaxCollectSpeed_type_name = "MaxCollectSpeed";
		constexpr static rivet::rivet_type_id MaxCollectSpeed_type_id = 0xd453251c;
		constexpr static std::string_view SwarmSpread_type_name = "SwarmSpread";
		constexpr static rivet::rivet_type_id SwarmSpread_type_id = 0x10d960e6;
		constexpr static std::string_view MaxSwarmOffset_type_name = "MaxSwarmOffset";
		constexpr static rivet::rivet_type_id MaxSwarmOffset_type_id = 0x1c46e66e;
		constexpr static std::string_view StartFixed_type_name = "StartFixed";
		constexpr static rivet::rivet_type_id StartFixed_type_id = 0xe6a2a2d6;
		constexpr static std::string_view CanBePickedUp_type_name = "CanBePickedUp";
		constexpr static rivet::rivet_type_id CanBePickedUp_type_id = 0x41bfe110;
		constexpr static std::string_view StartFalling_type_name = "StartFalling";
		constexpr static rivet::rivet_type_id StartFalling_type_id = 0xcbf19bdb;
		constexpr static std::string_view PhysicsMovement_type_name = "PhysicsMovement";
		constexpr static rivet::rivet_type_id PhysicsMovement_type_id = 0xb3bb7da7;
		constexpr static std::string_view OffsetCollision_type_name = "OffsetCollision";
		constexpr static rivet::rivet_type_id OffsetCollision_type_id = 0xaa476d27;
		constexpr static std::string_view DoSettling_type_name = "DoSettling";
		constexpr static rivet::rivet_type_id DoSettling_type_id = 0xe3f24849;
		constexpr static std::string_view DoShimmer_type_name = "DoShimmer";
		constexpr static rivet::rivet_type_id DoShimmer_type_id = 0x21ca7a63;
		constexpr static std::string_view RequirePath_type_name = "RequirePath";
		constexpr static rivet::rivet_type_id RequirePath_type_id = 0xf7872abf;
		constexpr static std::string_view AllowRangeBonus_type_name = "AllowRangeBonus";
		constexpr static rivet::rivet_type_id AllowRangeBonus_type_id = 0x2d88be33;
		constexpr static std::string_view DoSanityChecks_type_name = "DoSanityChecks";
		constexpr static rivet::rivet_type_id DoSanityChecks_type_id = 0xa248eb7c;
		constexpr static std::string_view DeathAutoCollect_type_name = "DeathAutoCollect";
		constexpr static rivet::rivet_type_id DeathAutoCollect_type_id = 0x214ec46d;
		constexpr static std::string_view RezoneToWorld_type_name = "RezoneToWorld";
		constexpr static rivet::rivet_type_id RezoneToWorld_type_id = 0x79336ed2;
		constexpr static std::string_view StopMovingOnAttach_type_name = "StopMovingOnAttach";
		constexpr static rivet::rivet_type_id StopMovingOnAttach_type_id = 0xc96313cc;
		constexpr static std::string_view CanBeBumped_type_name = "CanBeBumped";
		constexpr static rivet::rivet_type_id CanBeBumped_type_id = 0x8b953a51;
		constexpr static std::string_view DoWaterSplash_type_name = "DoWaterSplash";
		constexpr static rivet::rivet_type_id DoWaterSplash_type_id = 0x89c40d2e;
		constexpr static std::string_view DeleteOnPickup_type_name = "DeleteOnPickup";
		constexpr static rivet::rivet_type_id DeleteOnPickup_type_id = 0x3c076177;
		constexpr static std::string_view BobData_type_name = "BobData";
		constexpr static rivet::rivet_type_id BobData_type_id = 0xb67afb69;
		constexpr static std::string_view PercentCollectedRenderConstant_type_name = "PercentCollectedRenderConstant";
		constexpr static rivet::rivet_type_id PercentCollectedRenderConstant_type_id = 0xc396df81;
		constexpr static std::string_view UseEmbeddedOffer_type_name = "UseEmbeddedOffer";
		constexpr static rivet::rivet_type_id UseEmbeddedOffer_type_id = 0xf0a2f58;
		constexpr static std::string_view Offer_type_name = "Offer";
		constexpr static rivet::rivet_type_id Offer_type_id = 0x30854bff; 

		explicit PickupBasePrius() = default;
		explicit PickupBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DDLVector3> Velocity {};
		float DecayTimer {};
		float NoPickupTime {};
		float PickupRange {};
		float CollectThreshold {};
		float CollisionRadius {};
		float Gravity {};
		float MaxRandomAngle {};
		float MinAngularSpeed {};
		float MaxAngularSpeed {};
		float MinCollectSpeed {};
		float MaxCollectSpeed {};
		float SwarmSpread {};
		float MaxSwarmOffset {};
		bool StartFixed {};
		bool CanBePickedUp {};
		bool StartFalling {};
		bool PhysicsMovement {};
		bool OffsetCollision {};
		bool DoSettling {};
		bool DoShimmer {};
		bool RequirePath {};
		bool AllowRangeBonus {};
		bool DoSanityChecks {};
		bool DeathAutoCollect {};
		bool RezoneToWorld {};
		bool StopMovingOnAttach {};
		bool CanBeBumped {};
		bool DoWaterSplash {};
		bool DeleteOnPickup {};
		std::shared_ptr<rivet::ddl::generated::PickupBobData> BobData {};
		std::string_view PercentCollectedRenderConstant {};
		bool UseEmbeddedOffer {};
		std::shared_ptr<rivet::ddl::generated::OfferPrius> Offer {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PickupBasePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
