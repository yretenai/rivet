// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotComboLaserShotType.hpp> 

namespace rivet::ddl::generated {
	struct AimModWrapper; 

	struct RIVET_DDL_SHARED LaserShotTypeShootToTarget : BotComboLaserShotType {
		constexpr const static std::string_view type_name = "LaserShotTypeShootToTarget";
		constexpr const static rivet::rivet_type_id type_id = 0xce53abf;

		constexpr const static std::string_view LaserTargetingTime_type_name = "LaserTargetingTime";
		constexpr const static rivet::rivet_type_id LaserTargetingTime_type_id = 0x7c4f3000;
		constexpr const static std::string_view LaserWarningTime_type_name = "LaserWarningTime";
		constexpr const static rivet::rivet_type_id LaserWarningTime_type_id = 0x18024a7c;
		constexpr const static std::string_view LaserShootTime_type_name = "LaserShootTime";
		constexpr const static rivet::rivet_type_id LaserShootTime_type_id = 0x58784031;
		constexpr const static std::string_view StopOnDamage_type_name = "StopOnDamage";
		constexpr const static rivet::rivet_type_id StopOnDamage_type_id = 0xf9a907b2;
		constexpr const static std::string_view FaceTowardsAimPos_type_name = "FaceTowardsAimPos";
		constexpr const static rivet::rivet_type_id FaceTowardsAimPos_type_id = 0x6b0f75c4;
		constexpr const static std::string_view UseAimingComponent_type_name = "UseAimingComponent";
		constexpr const static rivet::rivet_type_id UseAimingComponent_type_id = 0x2fc3f981;
		constexpr const static std::string_view StartAimModOnTargeting_type_name = "StartAimModOnTargeting";
		constexpr const static rivet::rivet_type_id StartAimModOnTargeting_type_id = 0x96807863;
		constexpr const static std::string_view EndAimModsOnShootEnd_type_name = "EndAimModsOnShootEnd";
		constexpr const static rivet::rivet_type_id EndAimModsOnShootEnd_type_id = 0x7560b934;
		constexpr const static std::string_view LockAimWhileFiring_type_name = "LockAimWhileFiring";
		constexpr const static rivet::rivet_type_id LockAimWhileFiring_type_id = 0x38687f13;
		constexpr const static std::string_view MimicShotRate_type_name = "MimicShotRate";
		constexpr const static rivet::rivet_type_id MimicShotRate_type_id = 0xd7ef4376;
		constexpr const static std::string_view AimMods_type_name = "AimMods";
		constexpr const static rivet::rivet_type_id AimMods_type_id = 0x1d7694a1; 

		explicit LaserShotTypeShootToTarget() = default;
		explicit LaserShotTypeShootToTarget([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float LaserTargetingTime {};
		float LaserWarningTime {};
		float LaserShootTime {};
		bool StopOnDamage {};
		bool FaceTowardsAimPos {};
		bool UseAimingComponent {};
		bool StartAimModOnTargeting {};
		bool EndAimModsOnShootEnd {};
		bool LockAimWhileFiring {};
		float MimicShotRate {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AimModWrapper>> AimMods {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LaserShotTypeShootToTarget>;
	};
} // namespace rivet::ddl::generated

// clang-format on
