// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/ExplosiveStatusInnerOuterData.hpp> 

#include <rivet/ddl/generated/StatusEffectExplosivePrius.hpp>

namespace rivet::ddl::generated {
	StatusEffectExplosivePrius::StatusEffectExplosivePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): StatusEffectBasePrius(serialized) {
		Damage = serialized->unwrap_into<rivet::ddl::generated::ExplosiveStatusInnerOuterData>(Damage_type_id);
		ExplosionLocator = serialized->get_string(ExplosionLocator_type_id);
		DamageNeedsLOS = serialized->get_bool(DamageNeedsLOS_type_id);
		ExplodeOnDamage = serialized->get_bool(ExplodeOnDamage_type_id);
		ExplodeOnDeath = serialized->get_bool(ExplodeOnDeath_type_id);
		ExplodeOnProximity = serialized->get_bool(ExplodeOnProximity_type_id);
		KillSelfOnExplode = serialized->get_bool(KillSelfOnExplode_type_id);
		DamageFriends = serialized->get_bool(DamageFriends_type_id);
		LastDamagerIsExplosionDamager = serialized->get_bool(LastDamagerIsExplosionDamager_type_id);
		ExplosionDamageType = serialized->get_enum<rivet::ddl::generated::x8d7e44cf>(ExplosionDamageType_type_id, rivet::ddl::generated::x8d7e44cf_values);
		ExplosionKnockbackLevel = serialized->get_enum<rivet::ddl::generated::KnockbackLevels>(ExplosionKnockbackLevel_type_id, rivet::ddl::generated::KnockbackLevels_values);
		ProximityTargetMask = serialized->get_bitset<rivet::ddl::generated::TargetType>(ProximityTargetMask_type_id, rivet::ddl::generated::TargetType_values); 
	}

	[[nodiscard]] auto
	StatusEffectExplosivePrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	StatusEffectExplosivePrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<StatusEffectExplosivePrius> {
		if (incoming_type_id == StatusEffectExplosivePrius::type_id) {
			return std::make_shared<StatusEffectExplosivePrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
