// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/PhysicsCollFlags.hpp>
#include <rivet/ddl/generated/enums/xcba6be41.hpp>
#include <rivet/ddl/generated/enums/xea6549e1.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector2;
	struct DDLVector3; 

	struct RIVET_DDL_SHARED ModelGeneratorItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ModelGeneratorItem";
		constexpr static rivet::rivet_type_id type_id = 0x273c3ddf;

		constexpr static std::string_view MergeMethod_type_name = "MergeMethod";
		constexpr static rivet::rivet_type_id MergeMethod_type_id = 0x7f174b7a;
		constexpr static std::string_view ModelSource_type_name = "ModelSource";
		constexpr static rivet::rivet_type_id ModelSource_type_id = 0x6181e7f5;
		constexpr static std::string_view VertexColor_type_name = "VertexColor";
		constexpr static rivet::rivet_type_id VertexColor_type_id = 0x6e07bf94;
		constexpr static std::string_view VertexAlpha_type_name = "VertexAlpha";
		constexpr static rivet::rivet_type_id VertexAlpha_type_id = 0xd8b1ce17;
		constexpr static std::string_view VertexSpacing_type_name = "VertexSpacing";
		constexpr static rivet::rivet_type_id VertexSpacing_type_id = 0x513026ce;
		constexpr static std::string_view ReverseU_type_name = "ReverseU";
		constexpr static rivet::rivet_type_id ReverseU_type_id = 0xb07b05d0;
		constexpr static std::string_view ReverseV_type_name = "ReverseV";
		constexpr static rivet::rivet_type_id ReverseV_type_id = 0x2972546a;
		constexpr static std::string_view UVTilingDistance_type_name = "UVTilingDistance";
		constexpr static rivet::rivet_type_id UVTilingDistance_type_id = 0x62050c4e;
		constexpr static std::string_view UVOffset_type_name = "UVOffset";
		constexpr static rivet::rivet_type_id UVOffset_type_id = 0xd4f24f25;
		constexpr static std::string_view Material_type_name = "Material";
		constexpr static rivet::rivet_type_id Material_type_id = 0x86bfc8e5;
		constexpr static std::string_view Collision_type_name = "Collision";
		constexpr static rivet::rivet_type_id Collision_type_id = 0xd930bcb2;
		constexpr static std::string_view CollisionFlags_type_name = "CollisionFlags";
		constexpr static rivet::rivet_type_id CollisionFlags_type_id = 0x45d4a833;
		constexpr static std::string_view LOD1_type_name = "LOD1";
		constexpr static rivet::rivet_type_id LOD1_type_id = 0xde2917d1;
		constexpr static std::string_view GeomLodDist1_type_name = "GeomLodDist1";
		constexpr static rivet::rivet_type_id GeomLodDist1_type_id = 0x7f1cf23f;
		constexpr static std::string_view LOD2_type_name = "LOD2";
		constexpr static rivet::rivet_type_id LOD2_type_id = 0x4720466b;
		constexpr static std::string_view GeomLodDist2_type_name = "GeomLodDist2";
		constexpr static rivet::rivet_type_id GeomLodDist2_type_id = 0xe615a385; 

		explicit ModelGeneratorItem() = default;
		explicit ModelGeneratorItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xea6549e1 MergeMethod {};
		rivet::ddl::generated::xcba6be41 ModelSource {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> VertexColor {};
		float VertexAlpha {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> VertexSpacing {};
		bool ReverseU {};
		bool ReverseV {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UVTilingDistance {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UVOffset {};
		std::string_view Material {};
		bool Collision {};
		rivet::ddl::generated::PhysicsCollFlags CollisionFlags {};
		bool LOD1 {};
		float GeomLodDist1 {};
		bool LOD2 {};
		float GeomLodDist2 {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ModelGeneratorItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
