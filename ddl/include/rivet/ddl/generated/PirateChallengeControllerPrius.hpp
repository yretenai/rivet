// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct PirateData; 

	struct RIVET_DDL_SHARED PirateChallengeControllerPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PirateChallengeControllerPrius";
		constexpr static rivet::rivet_type_id type_id = 0x5a4f7770;

		constexpr static std::string_view InactiveAnim_type_name = "InactiveAnim";
		constexpr static rivet::rivet_type_id InactiveAnim_type_id = 0x88953a3;
		constexpr static std::string_view ActivateAnim_type_name = "ActivateAnim";
		constexpr static rivet::rivet_type_id ActivateAnim_type_id = 0xadba4079;
		constexpr static std::string_view InterruptAnim_type_name = "InterruptAnim";
		constexpr static rivet::rivet_type_id InterruptAnim_type_id = 0x6ee0f877;
		constexpr static std::string_view ReadyOffAnim_type_name = "ReadyOffAnim";
		constexpr static rivet::rivet_type_id ReadyOffAnim_type_id = 0x415d91e0;
		constexpr static std::string_view ReadyOnAnim_type_name = "ReadyOnAnim";
		constexpr static rivet::rivet_type_id ReadyOnAnim_type_id = 0x2f430f83;
		constexpr static std::string_view PerformAnim_type_name = "PerformAnim";
		constexpr static rivet::rivet_type_id PerformAnim_type_id = 0x5b0d08dc;
		constexpr static std::string_view InstructionAnim_type_name = "InstructionAnim";
		constexpr static rivet::rivet_type_id InstructionAnim_type_id = 0x5bc91f87;
		constexpr static std::string_view CelebrateAnim_type_name = "CelebrateAnim";
		constexpr static rivet::rivet_type_id CelebrateAnim_type_id = 0xc8581959;
		constexpr static std::string_view TauntAnim_type_name = "TauntAnim";
		constexpr static rivet::rivet_type_id TauntAnim_type_id = 0xb3db7a8e;
		constexpr static std::string_view DeactivateAnim_type_name = "DeactivateAnim";
		constexpr static rivet::rivet_type_id DeactivateAnim_type_id = 0x10af5f8a;
		constexpr static std::string_view PirateData_type_name = "PirateData";
		constexpr static rivet::rivet_type_id PirateData_type_id = 0x1065613f; 

		explicit PirateChallengeControllerPrius() = default;
		explicit PirateChallengeControllerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view InactiveAnim {};
		std::string_view ActivateAnim {};
		std::string_view InterruptAnim {};
		std::string_view ReadyOffAnim {};
		std::string_view ReadyOnAnim {};
		std::string_view PerformAnim {};
		std::string_view InstructionAnim {};
		std::string_view CelebrateAnim {};
		std::string_view TauntAnim {};
		std::string_view DeactivateAnim {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PirateData>> PirateData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PirateChallengeControllerPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
