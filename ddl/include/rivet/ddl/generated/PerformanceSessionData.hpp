// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct PerformanceAnimClipData;
	struct PerformanceSelectionData; 

	struct RIVET_DDL_SHARED PerformanceSessionData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PerformanceSessionData";
		constexpr static rivet::rivet_type_id type_id = 0x8b6fffaf;

		constexpr static std::string_view SaveRequired_type_name = "SaveRequired";
		constexpr static rivet::rivet_type_id SaveRequired_type_id = 0xebb9cd11;
		constexpr static std::string_view Looping_type_name = "Looping";
		constexpr static rivet::rivet_type_id Looping_type_id = 0x36c12525;
		constexpr static std::string_view Playing_type_name = "Playing";
		constexpr static rivet::rivet_type_id Playing_type_id = 0xd21350da;
		constexpr static std::string_view PerformanceClipId_type_name = "PerformanceClipId";
		constexpr static rivet::rivet_type_id PerformanceClipId_type_id = 0x86c8bc3c;
		constexpr static std::string_view BodyActorHandle_type_name = "BodyActorHandle";
		constexpr static rivet::rivet_type_id BodyActorHandle_type_id = 0x46eb0bb6;
		constexpr static std::string_view MuteAnimSet_type_name = "MuteAnimSet";
		constexpr static rivet::rivet_type_id MuteAnimSet_type_id = 0xf4cbd9f9;
		constexpr static std::string_view MuteAnimClip_type_name = "MuteAnimClip";
		constexpr static rivet::rivet_type_id MuteAnimClip_type_id = 0x3434f051;
		constexpr static std::string_view SoloExpressions_type_name = "SoloExpressions";
		constexpr static rivet::rivet_type_id SoloExpressions_type_id = 0x5615394c;
		constexpr static std::string_view MuteExpressions_type_name = "MuteExpressions";
		constexpr static rivet::rivet_type_id MuteExpressions_type_id = 0x4fb2c557;
		constexpr static std::string_view SoloBodyGestures_type_name = "SoloBodyGestures";
		constexpr static rivet::rivet_type_id SoloBodyGestures_type_id = 0xf8587858;
		constexpr static std::string_view MuteBodyGestures_type_name = "MuteBodyGestures";
		constexpr static rivet::rivet_type_id MuteBodyGestures_type_id = 0x72241648;
		constexpr static std::string_view Time_type_name = "Time";
		constexpr static rivet::rivet_type_id Time_type_id = 0x5f0458f5;
		constexpr static std::string_view SelectionData_type_name = "SelectionData";
		constexpr static rivet::rivet_type_id SelectionData_type_id = 0x4a3db851;
		constexpr static std::string_view AnimClipData_type_name = "AnimClipData";
		constexpr static rivet::rivet_type_id AnimClipData_type_id = 0x9878f47c;
		constexpr static std::string_view AnimSets_type_name = "AnimSets";
		constexpr static rivet::rivet_type_id AnimSets_type_id = 0x3492d19;
		constexpr static std::string_view Selection_type_name = "Selection";
		constexpr static rivet::rivet_type_id Selection_type_id = 0x145893db;
		constexpr static std::string_view MuteNameList_type_name = "MuteNameList";
		constexpr static rivet::rivet_type_id MuteNameList_type_id = 0x595577bc;
		constexpr static std::string_view SoloNameList_type_name = "SoloNameList";
		constexpr static rivet::rivet_type_id SoloNameList_type_id = 0x51729e93; 

		explicit PerformanceSessionData() = default;
		explicit PerformanceSessionData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint8_t SaveRequired {};
		uint8_t Looping {};
		uint8_t Playing {};
		uint32_t PerformanceClipId {};
		uint32_t BodyActorHandle {};
		std::string_view MuteAnimSet {};
		std::string_view MuteAnimClip {};
		std::vector<std::string_view> SoloExpressions {};
		std::vector<std::string_view> MuteExpressions {};
		std::vector<std::string_view> SoloBodyGestures {};
		std::vector<std::string_view> MuteBodyGestures {};
		float Time {};
		std::shared_ptr<rivet::ddl::generated::PerformanceSelectionData> SelectionData {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PerformanceAnimClipData>> AnimClipData {};
		std::vector<std::string_view> AnimSets {};
		std::vector<uint64_t> Selection {};
		std::vector<std::string_view> MuteNameList {};
		std::vector<std::string_view> SoloNameList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PerformanceSessionData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
