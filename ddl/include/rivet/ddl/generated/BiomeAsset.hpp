// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x8eddd608.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED BiomeAsset : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "BiomeAsset";
		constexpr const static rivet::rivet_type_id type_id = 0xa3b15663;

		constexpr const static std::string_view ModelAssetPath_type_name = "ModelAssetPath";
		constexpr const static rivet::rivet_type_id ModelAssetPath_type_id = 0xb8b499c3;
		constexpr const static std::string_view Weight_type_name = "Weight";
		constexpr const static rivet::rivet_type_id Weight_type_id = 0x39b51b26;
		constexpr const static std::string_view HoudiniDebugPrimitive_type_name = "HoudiniDebugPrimitive";
		constexpr const static rivet::rivet_type_id HoudiniDebugPrimitive_type_id = 0x2ed71583;
		constexpr const static std::string_view HoudiniDebugColor_type_name = "HoudiniDebugColor";
		constexpr const static rivet::rivet_type_id HoudiniDebugColor_type_id = 0xb8df1137; 

		explicit BiomeAsset() = default;
		explicit BiomeAsset([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ModelAssetPath {};
		float Weight {};
		rivet::ddl::generated::x8eddd608 HoudiniDebugPrimitive {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> HoudiniDebugColor {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BiomeAsset>;
	};
} // namespace rivet::ddl::generated

// clang-format on
