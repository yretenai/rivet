// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED ParticlesDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ParticlesDef";
		constexpr static rivet::rivet_type_id type_id = 0xbbe45a8a;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view Texture_type_name = "Texture";
		constexpr static rivet::rivet_type_id Texture_type_id = 0x838c6e4a;
		constexpr static std::string_view NearFadeDistance_type_name = "NearFadeDistance";
		constexpr static rivet::rivet_type_id NearFadeDistance_type_id = 0xe898bf6;
		constexpr static std::string_view MaxDrawDistance_type_name = "MaxDrawDistance";
		constexpr static rivet::rivet_type_id MaxDrawDistance_type_id = 0x2427a462;
		constexpr static std::string_view WindInfluence_type_name = "WindInfluence";
		constexpr static rivet::rivet_type_id WindInfluence_type_id = 0xb454035a;
		constexpr static std::string_view Turbulence_type_name = "Turbulence";
		constexpr static rivet::rivet_type_id Turbulence_type_id = 0xb5e21480;
		constexpr static std::string_view Density_type_name = "Density";
		constexpr static rivet::rivet_type_id Density_type_id = 0xc14209c2;
		constexpr static std::string_view Speed_type_name = "Speed";
		constexpr static rivet::rivet_type_id Speed_type_id = 0x16753237;
		constexpr static std::string_view Size_type_name = "Size";
		constexpr static rivet::rivet_type_id Size_type_id = 0xc750e4da;
		constexpr static std::string_view Alpha_type_name = "Alpha";
		constexpr static rivet::rivet_type_id Alpha_type_id = 0xc9b3f5ab;
		constexpr static std::string_view Color_type_name = "Color";
		constexpr static rivet::rivet_type_id Color_type_id = 0x7f058428;
		constexpr static std::string_view ExposureDuration_type_name = "ExposureDuration";
		constexpr static rivet::rivet_type_id ExposureDuration_type_id = 0xc6704b05;
		constexpr static std::string_view MotionStretchMax_type_name = "MotionStretchMax";
		constexpr static rivet::rivet_type_id MotionStretchMax_type_id = 0x8b91217a;
		constexpr static std::string_view MotionStretchMaxFar_type_name = "MotionStretchMaxFar";
		constexpr static rivet::rivet_type_id MotionStretchMaxFar_type_id = 0xe40be0b8;
		constexpr static std::string_view RainBloomInfluence_type_name = "RainBloomInfluence";
		constexpr static rivet::rivet_type_id RainBloomInfluence_type_id = 0x113901ab; 

		explicit ParticlesDef() = default;
		explicit ParticlesDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		std::string_view Texture {};
		float NearFadeDistance {};
		float MaxDrawDistance {};
		float WindInfluence {};
		float Turbulence {};
		float Density {};
		float Speed {};
		float Size {};
		float Alpha {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Color {};
		float ExposureDuration {};
		float MotionStretchMax {};
		float MotionStretchMaxFar {};
		float RainBloomInfluence {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ParticlesDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
