// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AttachToWaterSurfaceEvent : EventBase {
		constexpr static std::string_view type_name = "AttachToWaterSurfaceEvent";
		constexpr static rivet::rivet_type_id type_id = 0xa5e6d12f;

		constexpr static std::string_view LerpToWaterPosDuration_type_name = "LerpToWaterPosDuration";
		constexpr static rivet::rivet_type_id LerpToWaterPosDuration_type_id = 0xf06dfcd8;
		constexpr static std::string_view EventDuration_type_name = "EventDuration";
		constexpr static rivet::rivet_type_id EventDuration_type_id = 0xb14f48d1;
		constexpr static std::string_view BobGain_type_name = "BobGain";
		constexpr static rivet::rivet_type_id BobGain_type_id = 0xcb1c250a;
		constexpr static std::string_view BobDamp_type_name = "BobDamp";
		constexpr static rivet::rivet_type_id BobDamp_type_id = 0x47ca7283;
		constexpr static std::string_view BobMaxSpeed_type_name = "BobMaxSpeed";
		constexpr static rivet::rivet_type_id BobMaxSpeed_type_id = 0xcc77003f;
		constexpr static std::string_view MotionDepth_type_name = "MotionDepth";
		constexpr static rivet::rivet_type_id MotionDepth_type_id = 0x8d5cdbea;
		constexpr static std::string_view UpdateOffscreen_type_name = "UpdateOffscreen";
		constexpr static rivet::rivet_type_id UpdateOffscreen_type_id = 0x9e43a644; 

		explicit AttachToWaterSurfaceEvent() = default;
		explicit AttachToWaterSurfaceEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float LerpToWaterPosDuration {};
		float EventDuration {};
		float BobGain {};
		float BobDamp {};
		float BobMaxSpeed {};
		float MotionDepth {};
		bool UpdateOffscreen {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AttachToWaterSurfaceEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
