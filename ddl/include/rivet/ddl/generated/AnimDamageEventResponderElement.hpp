// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DamageEventResponderDamageIdentifier; 

	struct RIVET_DDL_SHARED AnimDamageEventResponderElement : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimDamageEventResponderElement";
		constexpr static rivet::rivet_type_id type_id = 0x5f0c157b;

		constexpr static std::string_view DamageId_type_name = "DamageId";
		constexpr static rivet::rivet_type_id DamageId_type_id = 0x75f25e0c;
		constexpr static std::string_view AnimationName_type_name = "AnimationName";
		constexpr static rivet::rivet_type_id AnimationName_type_id = 0x5052469b;
		constexpr static std::string_view Priority_type_name = "Priority";
		constexpr static rivet::rivet_type_id Priority_type_id = 0x98a76157;
		constexpr static std::string_view PlayOnce_type_name = "PlayOnce";
		constexpr static rivet::rivet_type_id PlayOnce_type_id = 0xba3988ab;
		constexpr static std::string_view RemoveDriverOnDone_type_name = "RemoveDriverOnDone";
		constexpr static rivet::rivet_type_id RemoveDriverOnDone_type_id = 0x3aa780ae;
		constexpr static std::string_view OverrideAlways_type_name = "OverrideAlways";
		constexpr static rivet::rivet_type_id OverrideAlways_type_id = 0xca9dd718;
		constexpr static std::string_view OverrideByPriority_type_name = "OverrideByPriority";
		constexpr static rivet::rivet_type_id OverrideByPriority_type_id = 0x48ac47d7;
		constexpr static std::string_view OverrideSameAnim_type_name = "OverrideSameAnim";
		constexpr static rivet::rivet_type_id OverrideSameAnim_type_id = 0x3475e87e;
		constexpr static std::string_view OverrideAnimNotInMap_type_name = "OverrideAnimNotInMap";
		constexpr static rivet::rivet_type_id OverrideAnimNotInMap_type_id = 0xe5039e96;
		constexpr static std::string_view RespondOnIgnoredDamage_type_name = "RespondOnIgnoredDamage";
		constexpr static rivet::rivet_type_id RespondOnIgnoredDamage_type_id = 0x7d7f8bc3;
		constexpr static std::string_view DamageEventCountThreshold_type_name = "DamageEventCountThreshold";
		constexpr static rivet::rivet_type_id DamageEventCountThreshold_type_id = 0xf074474f;
		constexpr static std::string_view DamageEventCountThresholdMax_type_name = "DamageEventCountThresholdMax";
		constexpr static rivet::rivet_type_id DamageEventCountThresholdMax_type_id = 0xc9ec1b91;
		constexpr static std::string_view DamageAmountThreshold_type_name = "DamageAmountThreshold";
		constexpr static rivet::rivet_type_id DamageAmountThreshold_type_id = 0x8084e97;
		constexpr static std::string_view DamageTotalThreshold_type_name = "DamageTotalThreshold";
		constexpr static rivet::rivet_type_id DamageTotalThreshold_type_id = 0x4581391f;
		constexpr static std::string_view DamageTotalThresholdMax_type_name = "DamageTotalThresholdMax";
		constexpr static rivet::rivet_type_id DamageTotalThresholdMax_type_id = 0xd93b677f; 

		explicit AnimDamageEventResponderElement() = default;
		explicit AnimDamageEventResponderElement([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::shared_ptr<rivet::ddl::generated::DamageEventResponderDamageIdentifier>> DamageId {};
		std::string_view AnimationName {};
		uint32_t Priority {};
		bool PlayOnce {};
		bool RemoveDriverOnDone {};
		bool OverrideAlways {};
		bool OverrideByPriority {};
		bool OverrideSameAnim {};
		bool OverrideAnimNotInMap {};
		bool RespondOnIgnoredDamage {};
		uint32_t DamageEventCountThreshold {};
		int32_t DamageEventCountThresholdMax {};
		float DamageAmountThreshold {};
		float DamageTotalThreshold {};
		float DamageTotalThresholdMax {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimDamageEventResponderElement>;
	};
} // namespace rivet::ddl::generated

// clang-format on
