// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PhysicsSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PhysicsSettings";
		constexpr static rivet::rivet_type_id type_id = 0xa2234895;

		constexpr static std::string_view ClothEnable_type_name = "ClothEnable";
		constexpr static rivet::rivet_type_id ClothEnable_type_id = 0xb2e14bca;
		constexpr static std::string_view RagdollAnimPoseJointsEnable_type_name = "RagdollAnimPoseJointsEnable";
		constexpr static rivet::rivet_type_id RagdollAnimPoseJointsEnable_type_id = 0x3bfd2690;
		constexpr static std::string_view KickablesAndRagdollsEnable_type_name = "KickablesAndRagdollsEnable";
		constexpr static rivet::rivet_type_id KickablesAndRagdollsEnable_type_id = 0xf1af6b6b;
		constexpr static std::string_view RagdollSelfCollision_type_name = "RagdollSelfCollision";
		constexpr static rivet::rivet_type_id RagdollSelfCollision_type_id = 0x3cded5ef;
		constexpr static std::string_view FatalThreadConcurrencyAsserts_type_name = "FatalThreadConcurrencyAsserts";
		constexpr static rivet::rivet_type_id FatalThreadConcurrencyAsserts_type_id = 0xeaed84b1;
		constexpr static std::string_view SingleThreadedInPlaceLoads_type_name = "SingleThreadedInPlaceLoads";
		constexpr static rivet::rivet_type_id SingleThreadedInPlaceLoads_type_id = 0x46ac4c7;
		constexpr static std::string_view RagdollUpdateSkipUnmovedObjects_type_name = "RagdollUpdateSkipUnmovedObjects";
		constexpr static rivet::rivet_type_id RagdollUpdateSkipUnmovedObjects_type_id = 0x9a46e93b;
		constexpr static std::string_view RayCastQueryCount_type_name = "RayCastQueryCount";
		constexpr static rivet::rivet_type_id RayCastQueryCount_type_id = 0x85dc3cdd;
		constexpr static std::string_view SweptSphereQueryCount_type_name = "SweptSphereQueryCount";
		constexpr static rivet::rivet_type_id SweptSphereQueryCount_type_id = 0x2dccb4d2;
		constexpr static std::string_view SweptCapsuleQueryCount_type_name = "SweptCapsuleQueryCount";
		constexpr static rivet::rivet_type_id SweptCapsuleQueryCount_type_id = 0xad51b632;
		constexpr static std::string_view ClosestPointsQueryCount_type_name = "ClosestPointsQueryCount";
		constexpr static rivet::rivet_type_id ClosestPointsQueryCount_type_id = 0x5e523521;
		constexpr static std::string_view MaxDeferredLoads_type_name = "MaxDeferredLoads";
		constexpr static rivet::rivet_type_id MaxDeferredLoads_type_id = 0xf82411c6;
		constexpr static std::string_view MaxTrackedSceneObjects_type_name = "MaxTrackedSceneObjects";
		constexpr static rivet::rivet_type_id MaxTrackedSceneObjects_type_id = 0x12cfdf1;
		constexpr static std::string_view MaxIgnoredSceneObjects_type_name = "MaxIgnoredSceneObjects";
		constexpr static rivet::rivet_type_id MaxIgnoredSceneObjects_type_id = 0xbcac0306;
		constexpr static std::string_view MaxProcrastinatedIgnoreListAdds_type_name = "MaxProcrastinatedIgnoreListAdds";
		constexpr static rivet::rivet_type_id MaxProcrastinatedIgnoreListAdds_type_id = 0x7084eaae;
		constexpr static std::string_view PhysicsQueryAllocSize_type_name = "PhysicsQueryAllocSize";
		constexpr static rivet::rivet_type_id PhysicsQueryAllocSize_type_id = 0x80aeccb0;
		constexpr static std::string_view PhysicsQuerySmallBlockSizes_type_name = "PhysicsQuerySmallBlockSizes";
		constexpr static rivet::rivet_type_id PhysicsQuerySmallBlockSizes_type_id = 0xae31effc;
		constexpr static std::string_view PhysicsStepLocalStreamAllocSize_type_name = "PhysicsStepLocalStreamAllocSize";
		constexpr static rivet::rivet_type_id PhysicsStepLocalStreamAllocSize_type_id = 0x61a93fb0;
		constexpr static std::string_view PhysicsPersistentStreamAllocSize_type_name = "PhysicsPersistentStreamAllocSize";
		constexpr static rivet::rivet_type_id PhysicsPersistentStreamAllocSize_type_id = 0x90eb4c84;
		constexpr static std::string_view PhysicsBroadphaseRadiusX_type_name = "PhysicsBroadphaseRadiusX";
		constexpr static rivet::rivet_type_id PhysicsBroadphaseRadiusX_type_id = 0xe300cc5;
		constexpr static std::string_view PhysicsBroadphaseRadiusY_type_name = "PhysicsBroadphaseRadiusY";
		constexpr static rivet::rivet_type_id PhysicsBroadphaseRadiusY_type_id = 0x79373c53;
		constexpr static std::string_view PhysicsBroadphaseRadiusZ_type_name = "PhysicsBroadphaseRadiusZ";
		constexpr static rivet::rivet_type_id PhysicsBroadphaseRadiusZ_type_id = 0xe03e6de9;
		constexpr static std::string_view GravityMagnitude_type_name = "GravityMagnitude";
		constexpr static rivet::rivet_type_id GravityMagnitude_type_id = 0x6c3151ea;
		constexpr static std::string_view UnderSampleUpdatingRagdollsAnimFurtherThanThisFromCamera_type_name = "UnderSampleUpdatingRagdollsAnimFurtherThanThisFromCamera";
		constexpr static rivet::rivet_type_id UnderSampleUpdatingRagdollsAnimFurtherThanThisFromCamera_type_id = 0xcf0b8319;
		constexpr static std::string_view UnderSampleCullFractionFrames_type_name = "UnderSampleCullFractionFrames";
		constexpr static rivet::rivet_type_id UnderSampleCullFractionFrames_type_id = 0xe5237217;
		constexpr static std::string_view EnableUnderSampleUpdatingRagdolls_type_name = "EnableUnderSampleUpdatingRagdolls";
		constexpr static rivet::rivet_type_id EnableUnderSampleUpdatingRagdolls_type_id = 0x7c33cfe;
		constexpr static std::string_view SkipAnimUserPoseSetupOnRagdollActivate_type_name = "SkipAnimUserPoseSetupOnRagdollActivate";
		constexpr static rivet::rivet_type_id SkipAnimUserPoseSetupOnRagdollActivate_type_id = 0xe5e850a3;
		constexpr static std::string_view ChunkedBodyOptimizationAggression_type_name = "ChunkedBodyOptimizationAggression";
		constexpr static rivet::rivet_type_id ChunkedBodyOptimizationAggression_type_id = 0x510becdb;
		constexpr static std::string_view VisualDebuggerPort_type_name = "VisualDebuggerPort";
		constexpr static rivet::rivet_type_id VisualDebuggerPort_type_id = 0xa4cdca0b;
		constexpr static std::string_view DebugHeapSize_type_name = "DebugHeapSize";
		constexpr static rivet::rivet_type_id DebugHeapSize_type_id = 0x15650ed;
		constexpr static std::string_view OverrideBodyMaterialsComingFromMaya_type_name = "OverrideBodyMaterialsComingFromMaya";
		constexpr static rivet::rivet_type_id OverrideBodyMaterialsComingFromMaya_type_id = 0x4a8941e6;
		constexpr static std::string_view PhysicsEnable_type_name = "PhysicsEnable";
		constexpr static rivet::rivet_type_id PhysicsEnable_type_id = 0xa5ca63e; 

		explicit PhysicsSettings() = default;
		explicit PhysicsSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool ClothEnable {};
		bool RagdollAnimPoseJointsEnable {};
		bool KickablesAndRagdollsEnable {};
		bool RagdollSelfCollision {};
		bool FatalThreadConcurrencyAsserts {};
		bool SingleThreadedInPlaceLoads {};
		bool RagdollUpdateSkipUnmovedObjects {};
		int32_t RayCastQueryCount {};
		int32_t SweptSphereQueryCount {};
		int32_t SweptCapsuleQueryCount {};
		int32_t ClosestPointsQueryCount {};
		int32_t MaxDeferredLoads {};
		int32_t MaxTrackedSceneObjects {};
		int32_t MaxIgnoredSceneObjects {};
		int32_t MaxProcrastinatedIgnoreListAdds {};
		int32_t PhysicsQueryAllocSize {};
		std::vector<uint16_t> PhysicsQuerySmallBlockSizes {};
		int32_t PhysicsStepLocalStreamAllocSize {};
		int32_t PhysicsPersistentStreamAllocSize {};
		float PhysicsBroadphaseRadiusX {};
		float PhysicsBroadphaseRadiusY {};
		float PhysicsBroadphaseRadiusZ {};
		float GravityMagnitude {};
		float UnderSampleUpdatingRagdollsAnimFurtherThanThisFromCamera {};
		uint16_t UnderSampleCullFractionFrames {};
		bool EnableUnderSampleUpdatingRagdolls {};
		bool SkipAnimUserPoseSetupOnRagdollActivate {};
		int32_t ChunkedBodyOptimizationAggression {};
		uint16_t VisualDebuggerPort {};
		uint32_t DebugHeapSize {};
		bool OverrideBodyMaterialsComingFromMaya {};
		bool PhysicsEnable {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PhysicsSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
