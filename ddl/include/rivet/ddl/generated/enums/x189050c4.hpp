// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x189050c4_type_name = "x189050c4";
	constexpr static rivet::rivet_type_id x189050c4_type_id = 0x189050c4;

	constexpr static std::array<std::string_view, 26> x189050c4_values = {
		"kOff",
		"kAll",
		"kIndoor",
		"kNavMeshGen",
		"kWeatherBlocker",
		"kPostEffects",
		"kFullyIndoor",
		"kValidExtents",
		"kForceEmbeddedSamples",
		"kAvoidEmbeddedSamples",
		"kWater",
		"kIndoorWindow",
		"kEmissiveBlocker",
		"kLightGridPathBlocker",
		"kLightGridForceOccluderPlane",
		"kLightGridCreator",
		"kLightGridSelector",
		"kDistantLightingGround",
		"kDistantLightingRoof",
		"kDistantLightingForceEmbedded",
		"kDistantLightingMid",
		"kRayTracingBlocker",
		"kTranslucentShadow",
		"kLightGridSampleAvoid",
		"kEnvProbe",
		"kLightGrid", 
	};

	enum class x189050c4 : uint64_t {
		Off,
		All,
		Indoor,
		Nav_Mesh_Gen,
		Weather_Blocker,
		Post_Effects,
		Fully_Indoor,
		Valid_Extents,
		Force_Embedded,
		Avoid_Embedded,
		Water,
		Indoor_Window,
		Emissive_Blocker,
		Light_Grid_Path_Blocker,
		Light_Grid_Force_Occluder_Plane,
		Light_Grid_Creator,
		Light_Grid_Selector,
		Distant_Lighting_Ground,
		Distant_Lighting_Roof,
		Distant_Lighting_Force_Embedded,
		Distant_Lighting_Mid,
		RayTracingBlocker,
		Translucent_Shadow,
		Light_Grid_Sample_Avoid,
		Env_Probe,
		Light_Grid, 
	};
} // namespace rivet::ddl::generated

// clang-format on
