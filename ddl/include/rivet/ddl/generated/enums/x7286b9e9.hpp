// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr static std::string_view x7286b9e9_type_name = "x7286b9e9";
	constexpr static rivet::rivet_type_id x7286b9e9_type_id = 0x7286b9e9;

	constexpr static std::array<std::string_view, 4> x7286b9e9_values = {
		"kBiBlendNodeTypeDefault",
		"kBiBlendNodeTypeAdditive",
		"kBiBlendNodeTypeCombineAdditive",
		"kBiBlendNodeTypeDifference", 
	};

	constexpr static std::array<std::string_view, 4> x7286b9e9_labels = {
		"Default",
		"Additive",
		"Combine-additive",
		"Difference", 
	};

	enum class x7286b9e9 : uint64_t {
		Default,
		Additive,
		BiBlendNodeTypeCombineAdditive,
		Difference, 
	};
} // namespace rivet::ddl::generated

// clang-format on
