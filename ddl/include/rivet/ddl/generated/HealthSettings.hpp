// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HealthSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HealthSettings";
		constexpr static rivet::rivet_type_id type_id = 0xa78a4f0d;

		constexpr static std::string_view HeroesDoNotTakeDamage_type_name = "HeroesDoNotTakeDamage";
		constexpr static rivet::rivet_type_id HeroesDoNotTakeDamage_type_id = 0x378da48d;
		constexpr static std::string_view HeroesDoNotDie_type_name = "HeroesDoNotDie";
		constexpr static rivet::rivet_type_id HeroesDoNotDie_type_id = 0x3e3611f5;
		constexpr static std::string_view EnemyBotsDoNotDie_type_name = "EnemyBotsDoNotDie";
		constexpr static rivet::rivet_type_id EnemyBotsDoNotDie_type_id = 0xa477dbb5;
		constexpr static std::string_view DisplayHealthValues_type_name = "DisplayHealthValues";
		constexpr static rivet::rivet_type_id DisplayHealthValues_type_id = 0x9c7d3090;
		constexpr static std::string_view DisplayHeroHealthBar_type_name = "DisplayHeroHealthBar";
		constexpr static rivet::rivet_type_id DisplayHeroHealthBar_type_id = 0xa7f43a0f;
		constexpr static std::string_view DisplayEnemyHealthBars_type_name = "DisplayEnemyHealthBars";
		constexpr static rivet::rivet_type_id DisplayEnemyHealthBars_type_id = 0x91f54cf3;
		constexpr static std::string_view DebugHealthDrops_type_name = "DebugHealthDrops";
		constexpr static rivet::rivet_type_id DebugHealthDrops_type_id = 0x5bca618;
		constexpr static std::string_view DrawHazardAreas_type_name = "DrawHazardAreas";
		constexpr static rivet::rivet_type_id DrawHazardAreas_type_id = 0x86f7723;
		constexpr static std::string_view DisableHitPause_type_name = "DisableHitPause";
		constexpr static rivet::rivet_type_id DisableHitPause_type_id = 0xfb33690f; 

		explicit HealthSettings() = default;
		explicit HealthSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool HeroesDoNotTakeDamage {};
		bool HeroesDoNotDie {};
		bool EnemyBotsDoNotDie {};
		bool DisplayHealthValues {};
		bool DisplayHeroHealthBar {};
		bool DisplayEnemyHealthBars {};
		bool DebugHealthDrops {};
		bool DrawHazardAreas {};
		bool DisableHitPause {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HealthSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
