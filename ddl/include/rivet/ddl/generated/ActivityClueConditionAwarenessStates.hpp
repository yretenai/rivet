// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ActivityClueConditionAwarenessStates : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ActivityClueConditionAwarenessStates";
		constexpr static rivet::rivet_type_id type_id = 0x4f5d0a66;

		constexpr static std::string_view Passive_type_name = "Passive";
		constexpr static rivet::rivet_type_id Passive_type_id = 0x77059ef7;
		constexpr static std::string_view Confirming_type_name = "Confirming";
		constexpr static rivet::rivet_type_id Confirming_type_id = 0xa6ba8c81;
		constexpr static std::string_view Engaged_type_name = "Engaged";
		constexpr static rivet::rivet_type_id Engaged_type_id = 0xc0b36d13;
		constexpr static std::string_view Searching_type_name = "Searching";
		constexpr static rivet::rivet_type_id Searching_type_id = 0x1154a1fa; 

		explicit ActivityClueConditionAwarenessStates() = default;
		explicit ActivityClueConditionAwarenessStates([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Passive {};
		bool Confirming {};
		bool Engaged {};
		bool Searching {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActivityClueConditionAwarenessStates>;
	};
} // namespace rivet::ddl::generated

// clang-format on
