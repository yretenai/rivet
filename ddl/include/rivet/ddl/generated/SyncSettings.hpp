// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SyncSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SyncSettings";
		constexpr static rivet::rivet_type_id type_id = 0xbd3155c5;

		constexpr static std::string_view MaxComponents_type_name = "MaxComponents";
		constexpr static rivet::rivet_type_id MaxComponents_type_id = 0xcc5b13bd;
		constexpr static std::string_view HeapSize_type_name = "HeapSize";
		constexpr static rivet::rivet_type_id HeapSize_type_id = 0x96fd22d;
		constexpr static std::string_view HeapFixedBlockFraction_type_name = "HeapFixedBlockFraction";
		constexpr static rivet::rivet_type_id HeapFixedBlockFraction_type_id = 0xff699a38;
		constexpr static std::string_view HeapFixedBlockSize_type_name = "HeapFixedBlockSize";
		constexpr static rivet::rivet_type_id HeapFixedBlockSize_type_id = 0xd6cdb316;
		constexpr static std::string_view OutputQueueSize_type_name = "OutputQueueSize";
		constexpr static rivet::rivet_type_id OutputQueueSize_type_id = 0xa60e5d0d;
		constexpr static std::string_view BroadcastQueueSize_type_name = "BroadcastQueueSize";
		constexpr static rivet::rivet_type_id BroadcastQueueSize_type_id = 0xf0eff7e0;
		constexpr static std::string_view ServerHeapSize_type_name = "ServerHeapSize";
		constexpr static rivet::rivet_type_id ServerHeapSize_type_id = 0x5e76066e;
		constexpr static std::string_view ServerMessageQueueSize_type_name = "ServerMessageQueueSize";
		constexpr static rivet::rivet_type_id ServerMessageQueueSize_type_id = 0xf20f554b;
		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc; 

		explicit SyncSettings() = default;
		explicit SyncSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t MaxComponents {};
		uint32_t HeapSize {};
		float HeapFixedBlockFraction {};
		uint32_t HeapFixedBlockSize {};
		uint32_t OutputQueueSize {};
		uint32_t BroadcastQueueSize {};
		uint32_t ServerHeapSize {};
		uint32_t ServerMessageQueueSize {};
		bool Enabled {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SyncSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
