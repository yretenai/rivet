// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/LevelEnum.hpp>
#include <rivet/ddl/generated/DialogRule.hpp>
#include <rivet/ddl/generated/enums/PlayOnceMode.hpp>
#include <rivet/ddl/generated/enums/HitLocation.hpp>
#include <rivet/ddl/generated/enums/x8d7e44cf.hpp>
#include <rivet/ddl/generated/enums/xca8fba90.hpp>
#include <rivet/ddl/generated/enums/x48e6c593.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DialogRuleGame : DialogRule {
		constexpr const static std::string_view type_name = "DialogRuleGame";
		constexpr const static rivet::rivet_type_id type_id = 0x4bc9b26a;

		constexpr const static std::string_view HitLocation_type_name = "HitLocation";
		constexpr const static rivet::rivet_type_id HitLocation_type_id = 0x4e3b1edd;
		constexpr const static std::string_view DamageType_type_name = "DamageType";
		constexpr const static rivet::rivet_type_id DamageType_type_id = 0x840c154d;
		constexpr const static std::string_view TargetRelativePos_type_name = "TargetRelativePos";
		constexpr const static rivet::rivet_type_id TargetRelativePos_type_id = 0xc86e042d;
		constexpr const static std::string_view CurrentPlanet_type_name = "CurrentPlanet";
		constexpr const static rivet::rivet_type_id CurrentPlanet_type_id = 0x7ee0169e;
		constexpr const static std::string_view NotCurrentPlanet_type_name = "NotCurrentPlanet";
		constexpr const static rivet::rivet_type_id NotCurrentPlanet_type_id = 0xac9688e5;
		constexpr const static std::string_view EnableAfterPlanetUnlocked_type_name = "EnableAfterPlanetUnlocked";
		constexpr const static rivet::rivet_type_id EnableAfterPlanetUnlocked_type_id = 0x217f2025;
		constexpr const static std::string_view DisableAfterPlanetUnlocked_type_name = "DisableAfterPlanetUnlocked";
		constexpr const static rivet::rivet_type_id DisableAfterPlanetUnlocked_type_id = 0x211f66df;
		constexpr const static std::string_view SequenceMode_type_name = "SequenceMode";
		constexpr const static rivet::rivet_type_id SequenceMode_type_id = 0xe33fd48a;
		constexpr const static std::string_view PlayOnceMode_type_name = "PlayOnceMode";
		constexpr const static rivet::rivet_type_id PlayOnceMode_type_id = 0x46c0349d; 

		explicit DialogRuleGame() = default;
		explicit DialogRuleGame([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::HitLocation HitLocation {};
		rivet::ddl::generated::x8d7e44cf DamageType {};
		rivet::ddl::generated::xca8fba90 TargetRelativePos {};
		rivet::ddl::generated::LevelEnum CurrentPlanet {};
		rivet::ddl::generated::LevelEnum NotCurrentPlanet {};
		rivet::ddl::generated::LevelEnum EnableAfterPlanetUnlocked {};
		rivet::ddl::generated::LevelEnum DisableAfterPlanetUnlocked {};
		rivet::ddl::generated::x48e6c593 SequenceMode {};
		rivet::ddl::generated::PlayOnceMode PlayOnceMode {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DialogRuleGame>;
	};
} // namespace rivet::ddl::generated

// clang-format on
