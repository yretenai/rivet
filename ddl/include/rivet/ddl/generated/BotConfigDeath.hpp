// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct BloodPoolPrius;
	struct DeathReactionModifier; 

	struct RIVET_DDL_SHARED BotConfigDeath : ConfigBase {
		constexpr const static std::string_view type_name = "BotConfigDeath";
		constexpr const static rivet::rivet_type_id type_id = 0xe6879efd;

		constexpr const static std::string_view CorpseCleanup_type_name = "CorpseCleanup";
		constexpr const static rivet::rivet_type_id CorpseCleanup_type_id = 0x40490ca0;
		constexpr const static std::string_view DeleteOnDeath_type_name = "DeleteOnDeath";
		constexpr const static rivet::rivet_type_id DeleteOnDeath_type_id = 0x76eb9e87;
		constexpr const static std::string_view CanRagdoll_type_name = "CanRagdoll";
		constexpr const static rivet::rivet_type_id CanRagdoll_type_id = 0xaa66c4ff;
		constexpr const static std::string_view BloodPool_type_name = "BloodPool";
		constexpr const static rivet::rivet_type_id BloodPool_type_id = 0x572c1ede;
		constexpr const static std::string_view SkeletonActor_type_name = "SkeletonActor";
		constexpr const static rivet::rivet_type_id SkeletonActor_type_id = 0xb6d32598;
		constexpr const static std::string_view DeathReactionMods_type_name = "DeathReactionMods";
		constexpr const static rivet::rivet_type_id DeathReactionMods_type_id = 0x3e3f13ac; 

		explicit BotConfigDeath() = default;
		explicit BotConfigDeath([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool CorpseCleanup {};
		bool DeleteOnDeath {};
		bool CanRagdoll {};
		std::shared_ptr<rivet::ddl::generated::BloodPoolPrius> BloodPool {};
		std::string_view SkeletonActor {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DeathReactionModifier>> DeathReactionMods {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotConfigDeath>;
	};
} // namespace rivet::ddl::generated

// clang-format on
