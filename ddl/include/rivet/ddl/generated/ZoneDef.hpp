// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/LightGridCompression.hpp>
#include <rivet/ddl/generated/enums/LightingConditions.hpp> 

namespace rivet::ddl::generated {
	struct GameplayDataReferenceDef;
	struct AssetReferenceDef;
	struct LightingConditionAtmosphere;
	struct VertexPaintNode;
	struct VarNode;
	struct LightingConditionLL;
	struct ActorGroupNode;
	struct NodeGraphContents;
	struct SceneNode;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED ZoneDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ZoneDef";
		constexpr static rivet::rivet_type_id type_id = 0xcc0e3e22;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view SceneNodes_type_name = "SceneNodes";
		constexpr static rivet::rivet_type_id SceneNodes_type_id = 0x41496fde;
		constexpr static std::string_view ActorGroups_type_name = "ActorGroups";
		constexpr static rivet::rivet_type_id ActorGroups_type_id = 0xd4a16a95;
		constexpr static std::string_view MainScriptGraphId_type_name = "MainScriptGraphId";
		constexpr static rivet::rivet_type_id MainScriptGraphId_type_id = 0x98b21bed;
		constexpr static std::string_view ScriptGraphs_type_name = "ScriptGraphs";
		constexpr static rivet::rivet_type_id ScriptGraphs_type_id = 0xb6beea44;
		constexpr static std::string_view VarNodes_type_name = "VarNodes";
		constexpr static rivet::rivet_type_id VarNodes_type_id = 0x84e9cc70;
		constexpr static std::string_view VertexPaintNodes_type_name = "VertexPaintNodes";
		constexpr static rivet::rivet_type_id VertexPaintNodes_type_id = 0xb9ed55e1;
		constexpr static std::string_view Atmosphere_type_name = "Atmosphere";
		constexpr static rivet::rivet_type_id Atmosphere_type_id = 0x79fd859a;
		constexpr static std::string_view LightingConditionAtmospheres_type_name = "LightingConditionAtmospheres";
		constexpr static rivet::rivet_type_id LightingConditionAtmospheres_type_id = 0xb9af92f;
		constexpr static std::string_view LevelLights_type_name = "LevelLights";
		constexpr static rivet::rivet_type_id LevelLights_type_id = 0x522d0f90;
		constexpr static std::string_view UseSingleLightingCondition_type_name = "UseSingleLightingCondition";
		constexpr static rivet::rivet_type_id UseSingleLightingCondition_type_id = 0x6e0c0a40;
		constexpr static std::string_view SingleLightingCondition_type_name = "SingleLightingCondition";
		constexpr static rivet::rivet_type_id SingleLightingCondition_type_id = 0x485218fc;
		constexpr static std::string_view LongDistanceRayTracing_type_name = "LongDistanceRayTracing";
		constexpr static rivet::rivet_type_id LongDistanceRayTracing_type_id = 0x68c37525;
		constexpr static std::string_view SkipLightCapture_type_name = "SkipLightCapture";
		constexpr static rivet::rivet_type_id SkipLightCapture_type_id = 0x64ede99a;
		constexpr static std::string_view ImpostorLightCapture_type_name = "ImpostorLightCapture";
		constexpr static rivet::rivet_type_id ImpostorLightCapture_type_id = 0x9e75d1f1;
		constexpr static std::string_view SkipHibernation_type_name = "SkipHibernation";
		constexpr static rivet::rivet_type_id SkipHibernation_type_id = 0x585b52;
		constexpr static std::string_view HibernateDistanceOverride_type_name = "HibernateDistanceOverride";
		constexpr static rivet::rivet_type_id HibernateDistanceOverride_type_id = 0xf560a96;
		constexpr static std::string_view LightGridPriority_type_name = "LightGridPriority";
		constexpr static rivet::rivet_type_id LightGridPriority_type_id = 0xaec38ece;
		constexpr static std::string_view LightGridCompression_type_name = "LightGridCompression";
		constexpr static rivet::rivet_type_id LightGridCompression_type_id = 0x845970a5;
		constexpr static std::string_view LightGridStreaming_type_name = "LightGridStreaming";
		constexpr static rivet::rivet_type_id LightGridStreaming_type_id = 0x2d5bc862;
		constexpr static std::string_view RemoveGridSamplesFarFromGeom_type_name = "RemoveGridSamplesFarFromGeom";
		constexpr static rivet::rivet_type_id RemoveGridSamplesFarFromGeom_type_id = 0x1f6a7ba7;
		constexpr static std::string_view AssetReferences_type_name = "AssetReferences";
		constexpr static rivet::rivet_type_id AssetReferences_type_id = 0x730eb7e6;
		constexpr static std::string_view GameplayDataReferences_type_name = "GameplayDataReferences";
		constexpr static rivet::rivet_type_id GameplayDataReferences_type_id = 0x529e91dc; 

		explicit ZoneDef() = default;
		explicit ZoneDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SceneNode>> SceneNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ActorGroupNode>> ActorGroups {};
		uint64_t MainScriptGraphId {};
		std::vector<std::shared_ptr<rivet::ddl::generated::NodeGraphContents>> ScriptGraphs {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VarNode>> VarNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::VertexPaintNode>> VertexPaintNodes {};
		std::string_view Atmosphere {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LightingConditionAtmosphere>> LightingConditionAtmospheres {};
		std::vector<std::shared_ptr<rivet::ddl::generated::LightingConditionLL>> LevelLights {};
		bool UseSingleLightingCondition {};
		rivet::ddl::generated::LightingConditions SingleLightingCondition {};
		bool LongDistanceRayTracing {};
		bool SkipLightCapture {};
		bool ImpostorLightCapture {};
		bool SkipHibernation {};
		float HibernateDistanceOverride {};
		uint8_t LightGridPriority {};
		rivet::ddl::generated::LightGridCompression LightGridCompression {};
		bool LightGridStreaming {};
		bool RemoveGridSamplesFarFromGeom {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AssetReferenceDef>> AssetReferences {};
		std::vector<std::shared_ptr<rivet::ddl::generated::GameplayDataReferenceDef>> GameplayDataReferences {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ZoneDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
