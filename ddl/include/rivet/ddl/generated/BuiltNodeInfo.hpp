// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ChildInfo; 

	struct RIVET_DDL_SHARED BuiltNodeInfo : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BuiltNodeInfo";
		constexpr static rivet::rivet_type_id type_id = 0x66e7fbab;

		constexpr static std::string_view NodeId_type_name = "NodeId";
		constexpr static rivet::rivet_type_id NodeId_type_id = 0x371a59e0;
		constexpr static std::string_view ObjectiveGraph_type_name = "ObjectiveGraph";
		constexpr static rivet::rivet_type_id ObjectiveGraph_type_id = 0x55ff52bd;
		constexpr static std::string_view MissionHash_type_name = "MissionHash";
		constexpr static rivet::rivet_type_id MissionHash_type_id = 0x2a5812de;
		constexpr static std::string_view ObjectiveHash_type_name = "ObjectiveHash";
		constexpr static rivet::rivet_type_id ObjectiveHash_type_id = 0xd7ef7725;
		constexpr static std::string_view Label1_type_name = "Label1";
		constexpr static rivet::rivet_type_id Label1_type_id = 0x137b6cca;
		constexpr static std::string_view Label2_type_name = "Label2";
		constexpr static rivet::rivet_type_id Label2_type_id = 0x8a723d70;
		constexpr static std::string_view ChildNodes_type_name = "ChildNodes";
		constexpr static rivet::rivet_type_id ChildNodes_type_id = 0xefdea728;
		constexpr static std::string_view MaxDepth_type_name = "MaxDepth";
		constexpr static rivet::rivet_type_id MaxDepth_type_id = 0xe33ddbfe;
		constexpr static std::string_view IsDebugMarker_type_name = "IsDebugMarker";
		constexpr static rivet::rivet_type_id IsDebugMarker_type_id = 0x5775422a; 

		explicit BuiltNodeInfo() = default;
		explicit BuiltNodeInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t NodeId {};
		std::string_view ObjectiveGraph {};
		uint32_t MissionHash {};
		uint32_t ObjectiveHash {};
		std::string_view Label1 {};
		std::string_view Label2 {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ChildInfo>> ChildNodes {};
		uint32_t MaxDepth {};
		bool IsDebugMarker {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BuiltNodeInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
