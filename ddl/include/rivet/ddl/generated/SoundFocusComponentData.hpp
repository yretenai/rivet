// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SoundFocusComponentData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "SoundFocusComponentData";
		constexpr const static rivet::rivet_type_id type_id = 0xb8072cb8;

		constexpr const static std::string_view PlayerFocusValue_type_name = "PlayerFocusValue";
		constexpr const static rivet::rivet_type_id PlayerFocusValue_type_id = 0x287a9996;
		constexpr const static std::string_view DefaultFocusValue_type_name = "DefaultFocusValue";
		constexpr const static rivet::rivet_type_id DefaultFocusValue_type_id = 0x113b5a0e;
		constexpr const static std::string_view AttackingFocusValue_type_name = "AttackingFocusValue";
		constexpr const static rivet::rivet_type_id AttackingFocusValue_type_id = 0x756a73f9;
		constexpr const static std::string_view AttackingPlayerFocusValue_type_name = "AttackingPlayerFocusValue";
		constexpr const static rivet::rivet_type_id AttackingPlayerFocusValue_type_id = 0x5e15e442; 

		explicit SoundFocusComponentData() = default;
		explicit SoundFocusComponentData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float PlayerFocusValue {};
		float DefaultFocusValue {};
		float AttackingFocusValue {};
		float AttackingPlayerFocusValue {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SoundFocusComponentData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
