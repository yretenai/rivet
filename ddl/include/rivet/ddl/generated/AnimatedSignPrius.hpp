// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/bitsets/xd86baa4d.hpp> 

namespace rivet::ddl::generated {
	struct AttachedLightData; 

	struct RIVET_DDL_SHARED AnimatedSignPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimatedSignPrius";
		constexpr static rivet::rivet_type_id type_id = 0xb27699e0;

		constexpr static std::string_view TriggerVolume_type_name = "TriggerVolume";
		constexpr static rivet::rivet_type_id TriggerVolume_type_id = 0x4e99f021;
		constexpr static std::string_view IdleAnim_type_name = "IdleAnim";
		constexpr static rivet::rivet_type_id IdleAnim_type_id = 0xe747921a;
		constexpr static std::string_view IdleToTriggeredAnim_type_name = "IdleToTriggeredAnim";
		constexpr static rivet::rivet_type_id IdleToTriggeredAnim_type_id = 0x7fd8d65a;
		constexpr static std::string_view TriggeredAnim_type_name = "TriggeredAnim";
		constexpr static rivet::rivet_type_id TriggeredAnim_type_id = 0x933bc277;
		constexpr static std::string_view TriggeredToIdleAnim_type_name = "TriggeredToIdleAnim";
		constexpr static rivet::rivet_type_id TriggeredToIdleAnim_type_id = 0x2fa6a5c4;
		constexpr static std::string_view AttachedLights_type_name = "AttachedLights";
		constexpr static rivet::rivet_type_id AttachedLights_type_id = 0xea214fc6;
		constexpr static std::string_view LightTrack_type_name = "LightTrack";
		constexpr static rivet::rivet_type_id LightTrack_type_id = 0x20632106;
		constexpr static std::string_view TriggeringTargets_type_name = "TriggeringTargets";
		constexpr static rivet::rivet_type_id TriggeringTargets_type_id = 0xe93ed42b; 

		explicit AnimatedSignPrius() = default;
		explicit AnimatedSignPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t TriggerVolume {};
		std::string_view IdleAnim {};
		std::string_view IdleToTriggeredAnim {};
		std::string_view TriggeredAnim {};
		std::string_view TriggeredToIdleAnim {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AttachedLightData>> AttachedLights {};
		std::string_view LightTrack {};
		rivet::ddl::generated::xd86baa4d TriggeringTargets {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimatedSignPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
