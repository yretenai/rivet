// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x8b42b541.hpp>
#include <rivet/ddl/generated/enums/x47a6f45d.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED HeroAltControlSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "HeroAltControlSettings";
		constexpr static rivet::rivet_type_id type_id = 0x948b6296;

		constexpr static std::string_view JumpToAirDash_type_name = "JumpToAirDash";
		constexpr static rivet::rivet_type_id JumpToAirDash_type_id = 0xa7b92c93;
		constexpr static std::string_view RiftTetherCombatTargeting_type_name = "RiftTetherCombatTargeting";
		constexpr static rivet::rivet_type_id RiftTetherCombatTargeting_type_id = 0x8543519a;
		constexpr static std::string_view HoverbootInputMode_type_name = "HoverbootInputMode";
		constexpr static rivet::rivet_type_id HoverbootInputMode_type_id = 0x663bd5e0;
		constexpr static std::string_view HoverbootNoKickInputGracePeriod_type_name = "HoverbootNoKickInputGracePeriod";
		constexpr static rivet::rivet_type_id HoverbootNoKickInputGracePeriod_type_id = 0xc922da4c;
		constexpr static std::string_view FlyerCameraResponsivenessOption_type_name = "FlyerCameraResponsivenessOption";
		constexpr static rivet::rivet_type_id FlyerCameraResponsivenessOption_type_id = 0x2cb69e5f; 

		explicit HeroAltControlSettings() = default;
		explicit HeroAltControlSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool JumpToAirDash {};
		bool RiftTetherCombatTargeting {};
		rivet::ddl::generated::x47a6f45d HoverbootInputMode {};
		float HoverbootNoKickInputGracePeriod {};
		rivet::ddl::generated::x8b42b541 FlyerCameraResponsivenessOption {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<HeroAltControlSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
