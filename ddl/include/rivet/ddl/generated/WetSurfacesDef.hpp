// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED WetSurfacesDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "WetSurfacesDef";
		constexpr static rivet::rivet_type_id type_id = 0x410d46cf;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view PorosityTexture_type_name = "PorosityTexture";
		constexpr static rivet::rivet_type_id PorosityTexture_type_id = 0xc96e015;
		constexpr static std::string_view StreakTexture_type_name = "StreakTexture";
		constexpr static rivet::rivet_type_id StreakTexture_type_id = 0x97d1e84a;
		constexpr static std::string_view SplashTexture_type_name = "SplashTexture";
		constexpr static rivet::rivet_type_id SplashTexture_type_id = 0x6d05f196;
		constexpr static std::string_view Wetness_type_name = "Wetness";
		constexpr static rivet::rivet_type_id Wetness_type_id = 0xb9d9094d;
		constexpr static std::string_view GlossLimit_type_name = "GlossLimit";
		constexpr static rivet::rivet_type_id GlossLimit_type_id = 0x90586c41;
		constexpr static std::string_view VFXSplashRange_type_name = "VFXSplashRange";
		constexpr static rivet::rivet_type_id VFXSplashRange_type_id = 0xaa113bed;
		constexpr static std::string_view VFXSplashRate_type_name = "VFXSplashRate";
		constexpr static rivet::rivet_type_id VFXSplashRate_type_id = 0x455429fc; 

		explicit WetSurfacesDef() = default;
		explicit WetSurfacesDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		std::string_view PorosityTexture {};
		std::string_view StreakTexture {};
		std::string_view SplashTexture {};
		float Wetness {};
		float GlossLimit {};
		float VFXSplashRange {};
		float VFXSplashRate {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WetSurfacesDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
