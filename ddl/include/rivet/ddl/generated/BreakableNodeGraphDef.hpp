// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x577f103e.hpp> 

namespace rivet::ddl::generated {
	struct ToggleLookNodeDef;
	struct SpawnNodeDef;
	struct DisableLookNodeDef;
	struct ConnectionTuidDef;
	struct BlockNodeDef;
	struct BlockSetNodeDef;
	struct CreateNodeDef;
	struct GameEventNodeDef;
	struct DestroyActorNodeDef;
	struct CommentBaseDef;
	struct PlayAnimationDriverNodeDef;
	struct EnableLookNodeDef;
	struct HealthNodeDef;
	struct DeathNodeDef;
	struct PhysicsPropertyNodeDef; 

	struct RIVET_DDL_SHARED BreakableNodeGraphDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "BreakableNodeGraphDef";
		constexpr static rivet::rivet_type_id type_id = 0x8a5864b1;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view BlockNodes_type_name = "BlockNodes";
		constexpr static rivet::rivet_type_id BlockNodes_type_id = 0x9c8156a1;
		constexpr static std::string_view BlockSetNodes_type_name = "BlockSetNodes";
		constexpr static rivet::rivet_type_id BlockSetNodes_type_id = 0xdc7a2d2a;
		constexpr static std::string_view Comments_type_name = "Comments";
		constexpr static rivet::rivet_type_id Comments_type_id = 0xa59f2b5a;
		constexpr static std::string_view Connections_type_name = "Connections";
		constexpr static rivet::rivet_type_id Connections_type_id = 0x322aadce;
		constexpr static std::string_view CreateNode_type_name = "CreateNode";
		constexpr static rivet::rivet_type_id CreateNode_type_id = 0xac9ba46c;
		constexpr static std::string_view DeathNode_type_name = "DeathNode";
		constexpr static rivet::rivet_type_id DeathNode_type_id = 0xed4959b8;
		constexpr static std::string_view DestroyActorNodes_type_name = "DestroyActorNodes";
		constexpr static rivet::rivet_type_id DestroyActorNodes_type_id = 0x3f982dd6;
		constexpr static std::string_view DisableLookNodes_type_name = "DisableLookNodes";
		constexpr static rivet::rivet_type_id DisableLookNodes_type_id = 0xacf3d374;
		constexpr static std::string_view EnableLookNodes_type_name = "EnableLookNodes";
		constexpr static rivet::rivet_type_id EnableLookNodes_type_id = 0xacb59458;
		constexpr static std::string_view GameEventNodes_type_name = "GameEventNodes";
		constexpr static rivet::rivet_type_id GameEventNodes_type_id = 0x1c2d8423;
		constexpr static std::string_view HealthNode_type_name = "HealthNode";
		constexpr static rivet::rivet_type_id HealthNode_type_id = 0x81d7dba8;
		constexpr static std::string_view PhysicsPropertyNodes_type_name = "PhysicsPropertyNodes";
		constexpr static rivet::rivet_type_id PhysicsPropertyNodes_type_id = 0x8059da88;
		constexpr static std::string_view PlayAnimNodes_type_name = "PlayAnimNodes";
		constexpr static rivet::rivet_type_id PlayAnimNodes_type_id = 0x80b5732a;
		constexpr static std::string_view SpawnNodes_type_name = "SpawnNodes";
		constexpr static rivet::rivet_type_id SpawnNodes_type_id = 0xc8cf364e;
		constexpr static std::string_view ToggleLookNodes_type_name = "ToggleLookNodes";
		constexpr static rivet::rivet_type_id ToggleLookNodes_type_id = 0xf4659944; 

		explicit BreakableNodeGraphDef() = default;
		explicit BreakableNodeGraphDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		rivet::ddl::generated::x577f103e Type {};
		std::string_view Name {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BlockNodeDef>> BlockNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::BlockSetNodeDef>> BlockSetNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CommentBaseDef>> Comments {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ConnectionTuidDef>> Connections {};
		std::shared_ptr<rivet::ddl::generated::CreateNodeDef> CreateNode {};
		std::shared_ptr<rivet::ddl::generated::DeathNodeDef> DeathNode {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DestroyActorNodeDef>> DestroyActorNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DisableLookNodeDef>> DisableLookNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::EnableLookNodeDef>> EnableLookNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::GameEventNodeDef>> GameEventNodes {};
		std::shared_ptr<rivet::ddl::generated::HealthNodeDef> HealthNode {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PhysicsPropertyNodeDef>> PhysicsPropertyNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::PlayAnimationDriverNodeDef>> PlayAnimNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::SpawnNodeDef>> SpawnNodes {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ToggleLookNodeDef>> ToggleLookNodes {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BreakableNodeGraphDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
