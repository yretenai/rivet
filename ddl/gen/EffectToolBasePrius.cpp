// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/EffectToolFPSPrius.hpp>
#include <rivet/ddl/generated/EffectToolMayaPrius.hpp> 

#include <rivet/ddl/generated/EffectToolBasePrius.hpp>

namespace rivet::ddl::generated {
	EffectToolBasePrius::EffectToolBasePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {

	}

	[[nodiscard]] auto
	EffectToolBasePrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	EffectToolBasePrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<EffectToolBasePrius> {
		if (incoming_type_id == EffectToolBasePrius::type_id) {
			return std::make_shared<EffectToolBasePrius>(serialized);
		}

		auto EffectToolMayaPrius_ptr = EffectToolMayaPrius::from_substruct(incoming_type_id, serialized);
		if (EffectToolMayaPrius_ptr != nullptr) {
			return EffectToolMayaPrius_ptr;
		}

		auto EffectToolFPSPrius_ptr = EffectToolFPSPrius::from_substruct(incoming_type_id, serialized);
		if (EffectToolFPSPrius_ptr != nullptr) {
			return EffectToolFPSPrius_ptr;
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
