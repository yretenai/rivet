// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x32cc2d2c.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SetCompositeShaderActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SetCompositeShaderActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x69686841;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view PreShader_type_name = "PreShader";
		constexpr static rivet::rivet_type_id PreShader_type_id = 0xea318765;
		constexpr static std::string_view PostShader_type_name = "PostShader";
		constexpr static rivet::rivet_type_id PostShader_type_id = 0x3e4aa554;
		constexpr static std::string_view AffectSelf_type_name = "AffectSelf";
		constexpr static rivet::rivet_type_id AffectSelf_type_id = 0x9ee519eb;
		constexpr static std::string_view AffectAttachments_type_name = "AffectAttachments";
		constexpr static rivet::rivet_type_id AffectAttachments_type_id = 0x484b14f6;
		constexpr static std::string_view AffectHead_type_name = "AffectHead";
		constexpr static rivet::rivet_type_id AffectHead_type_id = 0x425dd614;
		constexpr static std::string_view AffectHair_type_name = "AffectHair";
		constexpr static rivet::rivet_type_id AffectHair_type_id = 0x79594191;
		constexpr static std::string_view UseHeadAsMaterialMapping_type_name = "UseHeadAsMaterialMapping";
		constexpr static rivet::rivet_type_id UseHeadAsMaterialMapping_type_id = 0x7dcc2f62;
		constexpr static std::string_view DesiredShadowState_type_name = "DesiredShadowState";
		constexpr static rivet::rivet_type_id DesiredShadowState_type_id = 0xae681791;
		constexpr static std::string_view MaterialMappingName_type_name = "MaterialMappingName";
		constexpr static rivet::rivet_type_id MaterialMappingName_type_id = 0x981e6927;
		constexpr static std::string_view VarName_type_name = "VarName";
		constexpr static rivet::rivet_type_id VarName_type_id = 0x8cd13823;
		constexpr static std::string_view VarValue_type_name = "VarValue";
		constexpr static rivet::rivet_type_id VarValue_type_id = 0x84a391b8; 

		explicit SetCompositeShaderActionPrius() = default;
		explicit SetCompositeShaderActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		std::string_view PreShader {};
		std::string_view PostShader {};
		bool AffectSelf {};
		bool AffectAttachments {};
		bool AffectHead {};
		bool AffectHair {};
		bool UseHeadAsMaterialMapping {};
		rivet::ddl::generated::x32cc2d2c DesiredShadowState {};
		std::string_view MaterialMappingName {};
		std::string_view VarName {};
		float VarValue {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SetCompositeShaderActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
