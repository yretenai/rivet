// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x99bafe38.hpp>
#include <rivet/ddl/generated/BotMovementBase.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct BotMountDamageData; 

	struct RIVET_DDL_SHARED BotMovementSteerable : BotMovementBase {
		constexpr static std::string_view type_name = "BotMovementSteerable";
		constexpr static rivet::rivet_type_id type_id = 0xaaca6ca9;

		constexpr static std::string_view DamageHeroKamikaze_type_name = "DamageHeroKamikaze";
		constexpr static rivet::rivet_type_id DamageHeroKamikaze_type_id = 0xbcbb5b42;
		constexpr static std::string_view BotKamikazeDamageData_type_name = "BotKamikazeDamageData";
		constexpr static rivet::rivet_type_id BotKamikazeDamageData_type_id = 0x71543d2;
		constexpr static std::string_view BotImpactDamageData_type_name = "BotImpactDamageData";
		constexpr static rivet::rivet_type_id BotImpactDamageData_type_id = 0xe38d4b35;
		constexpr static std::string_view BreakableBusterLocalOffset_type_name = "BreakableBusterLocalOffset";
		constexpr static rivet::rivet_type_id BreakableBusterLocalOffset_type_id = 0x466f3ca0; 

		explicit BotMovementSteerable() = default;
		explicit BotMovementSteerable([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x99bafe38 DamageHeroKamikaze {};
		std::shared_ptr<rivet::ddl::generated::BotMountDamageData> BotKamikazeDamageData {};
		std::shared_ptr<rivet::ddl::generated::BotMountDamageData> BotImpactDamageData {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> BreakableBusterLocalOffset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotMovementSteerable>;
	};
} // namespace rivet::ddl::generated

// clang-format on
