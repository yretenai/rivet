// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/SelB.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED Proof3 : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "Proof3";
		constexpr static rivet::rivet_type_id type_id = 0xab3397d5;

		constexpr static std::string_view A_type_name = "A";
		constexpr static rivet::rivet_type_id A_type_id = 0x3a58e94d;
		constexpr static std::string_view SelA_type_name = "SelA";
		constexpr static rivet::rivet_type_id SelA_type_id = 0xeed14cb8;
		constexpr static std::string_view SelB_type_name = "SelB";
		constexpr static rivet::rivet_type_id SelB_type_id = 0x77d81d02; 

		explicit Proof3() = default;
		explicit Proof3([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		int32_t A {};
		rivet::ddl::generated::SelB SelA {};
		rivet::ddl::generated::SelB SelB {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Proof3>;
	};
} // namespace rivet::ddl::generated

// clang-format on
