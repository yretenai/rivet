// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CameraAutoDeactivatePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CameraAutoDeactivatePrius";
		constexpr static rivet::rivet_type_id type_id = 0xdc16332a;

		constexpr static std::string_view BlendOutTime_type_name = "BlendOutTime";
		constexpr static rivet::rivet_type_id BlendOutTime_type_id = 0xda2e044e;
		constexpr static std::string_view ExitDistance_type_name = "ExitDistance";
		constexpr static rivet::rivet_type_id ExitDistance_type_id = 0x4c30cc9c;
		constexpr static std::string_view ExitTimeout_type_name = "ExitTimeout";
		constexpr static rivet::rivet_type_id ExitTimeout_type_id = 0x290c24c4;
		constexpr static std::string_view TestInputDelay_type_name = "TestInputDelay";
		constexpr static rivet::rivet_type_id TestInputDelay_type_id = 0xbf17a010;
		constexpr static std::string_view ExitOnCameraInput_type_name = "ExitOnCameraInput";
		constexpr static rivet::rivet_type_id ExitOnCameraInput_type_id = 0x14dbf94a;
		constexpr static std::string_view ExitOnMotionInput_type_name = "ExitOnMotionInput";
		constexpr static rivet::rivet_type_id ExitOnMotionInput_type_id = 0xf8f74c41;
		constexpr static std::string_view ExitOnButtonInput_type_name = "ExitOnButtonInput";
		constexpr static rivet::rivet_type_id ExitOnButtonInput_type_id = 0xbc3d8d5c; 

		explicit CameraAutoDeactivatePrius() = default;
		explicit CameraAutoDeactivatePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float BlendOutTime {};
		float ExitDistance {};
		float ExitTimeout {};
		float TestInputDelay {};
		bool ExitOnCameraInput {};
		bool ExitOnMotionInput {};
		bool ExitOnButtonInput {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CameraAutoDeactivatePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
