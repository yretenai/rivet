// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xf787d865.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CameraInputYawAndPitchPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CameraInputYawAndPitchPrius";
		constexpr static rivet::rivet_type_id type_id = 0x904b126e;

		constexpr static std::string_view ActivateAction_type_name = "ActivateAction";
		constexpr static rivet::rivet_type_id ActivateAction_type_id = 0x9da4f68d;
		constexpr static std::string_view YawMin_type_name = "YawMin";
		constexpr static rivet::rivet_type_id YawMin_type_id = 0x975af737;
		constexpr static std::string_view YawMax_type_name = "YawMax";
		constexpr static rivet::rivet_type_id YawMax_type_id = 0xab57c86e;
		constexpr static std::string_view PitchMin_type_name = "PitchMin";
		constexpr static rivet::rivet_type_id PitchMin_type_id = 0xfb99e53b;
		constexpr static std::string_view PitchMax_type_name = "PitchMax";
		constexpr static rivet::rivet_type_id PitchMax_type_id = 0xc794da62;
		constexpr static std::string_view InitialYaw_type_name = "InitialYaw";
		constexpr static rivet::rivet_type_id InitialYaw_type_id = 0x7ddfeff9;
		constexpr static std::string_view InitialPitch_type_name = "InitialPitch";
		constexpr static rivet::rivet_type_id InitialPitch_type_id = 0x3290fd0b;
		constexpr static std::string_view YawSoftZone_type_name = "YawSoftZone";
		constexpr static rivet::rivet_type_id YawSoftZone_type_id = 0x9ce69f57;
		constexpr static std::string_view PitchSoftZone_type_name = "PitchSoftZone";
		constexpr static rivet::rivet_type_id PitchSoftZone_type_id = 0xf9a7e1f0;
		constexpr static std::string_view SettleGain_type_name = "SettleGain";
		constexpr static rivet::rivet_type_id SettleGain_type_id = 0x7c0ccd53;
		constexpr static std::string_view SettleDamp_type_name = "SettleDamp";
		constexpr static rivet::rivet_type_id SettleDamp_type_id = 0xf0da9ada;
		constexpr static std::string_view SettleDelay_type_name = "SettleDelay";
		constexpr static rivet::rivet_type_id SettleDelay_type_id = 0x9256f6b8;
		constexpr static std::string_view ApplySettle_type_name = "ApplySettle";
		constexpr static rivet::rivet_type_id ApplySettle_type_id = 0x17a20bd1;
		constexpr static std::string_view ActorRefMatrix_type_name = "ActorRefMatrix";
		constexpr static rivet::rivet_type_id ActorRefMatrix_type_id = 0x554086d6;
		constexpr static std::string_view AllowMoveStickInput_type_name = "AllowMoveStickInput";
		constexpr static rivet::rivet_type_id AllowMoveStickInput_type_id = 0xc4785cd0;
		constexpr static std::string_view AllowMenuMoveStickInput_type_name = "AllowMenuMoveStickInput";
		constexpr static rivet::rivet_type_id AllowMenuMoveStickInput_type_id = 0xa15517af;
		constexpr static std::string_view StickConfig_type_name = "StickConfig";
		constexpr static rivet::rivet_type_id StickConfig_type_id = 0x3bc8f276;
		constexpr static std::string_view JitterMaxPush_type_name = "JitterMaxPush";
		constexpr static rivet::rivet_type_id JitterMaxPush_type_id = 0x9181d6d;
		constexpr static std::string_view JitterMinPush_type_name = "JitterMinPush";
		constexpr static rivet::rivet_type_id JitterMinPush_type_id = 0xaebfd22;
		constexpr static std::string_view JitterRate_type_name = "JitterRate";
		constexpr static rivet::rivet_type_id JitterRate_type_id = 0xbb359c06; 

		explicit CameraInputYawAndPitchPrius() = default;
		explicit CameraInputYawAndPitchPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xf787d865 ActivateAction {};
		float YawMin {};
		float YawMax {};
		float PitchMin {};
		float PitchMax {};
		float InitialYaw {};
		float InitialPitch {};
		float YawSoftZone {};
		float PitchSoftZone {};
		float SettleGain {};
		float SettleDamp {};
		float SettleDelay {};
		bool ApplySettle {};
		bool ActorRefMatrix {};
		bool AllowMoveStickInput {};
		bool AllowMenuMoveStickInput {};
		std::string_view StickConfig {};
		float JitterMaxPush {};
		float JitterMinPush {};
		float JitterRate {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CameraInputYawAndPitchPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
