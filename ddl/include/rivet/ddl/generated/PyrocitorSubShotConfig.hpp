// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/ConfigBase.hpp> 

namespace rivet::ddl::generated {
	struct PyrocitorEmberShotPrius;
	struct PyrocitorExplosionShotPrius; 

	struct RIVET_DDL_SHARED PyrocitorSubShotConfig : ConfigBase {
		constexpr static std::string_view type_name = "PyrocitorSubShotConfig";
		constexpr static rivet::rivet_type_id type_id = 0x18a813f7;

		constexpr static std::string_view ExplosionShotActor_type_name = "ExplosionShotActor";
		constexpr static rivet::rivet_type_id ExplosionShotActor_type_id = 0x1ceb0793;
		constexpr static std::string_view ExplosionShotPrius_type_name = "ExplosionShotPrius";
		constexpr static rivet::rivet_type_id ExplosionShotPrius_type_id = 0x7a1a7335;
		constexpr static std::string_view EmberShotActor_type_name = "EmberShotActor";
		constexpr static rivet::rivet_type_id EmberShotActor_type_id = 0x331e75c9;
		constexpr static std::string_view EmberShotPrius_type_name = "EmberShotPrius";
		constexpr static rivet::rivet_type_id EmberShotPrius_type_id = 0x55ef016f; 

		explicit PyrocitorSubShotConfig() = default;
		explicit PyrocitorSubShotConfig([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view ExplosionShotActor {};
		std::shared_ptr<rivet::ddl::generated::PyrocitorExplosionShotPrius> ExplosionShotPrius {};
		std::string_view EmberShotActor {};
		std::shared_ptr<rivet::ddl::generated::PyrocitorEmberShotPrius> EmberShotPrius {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PyrocitorSubShotConfig>;
	};
} // namespace rivet::ddl::generated

// clang-format on
