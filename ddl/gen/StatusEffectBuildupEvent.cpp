// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/StatusEffectBuildupEvent.hpp>

namespace rivet::ddl::generated {
	StatusEffectBuildupEvent::StatusEffectBuildupEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): EventBase(serialized) {
		DamageType = serialized->get_enum<rivet::ddl::generated::DamageTypes>(DamageType_type_id, rivet::ddl::generated::DamageTypes_values, rivet::ddl::generated::DamageTypes::None);
		PercentFull = serialized->get_float(PercentFull_type_id, 0.000000f);
		StatusAmount = serialized->get_float(StatusAmount_type_id, 0.000000f); 
	}

	[[nodiscard]] auto
	StatusEffectBuildupEvent::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	StatusEffectBuildupEvent::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<StatusEffectBuildupEvent> {
		if (incoming_type_id == StatusEffectBuildupEvent::type_id) {
			return std::make_shared<StatusEffectBuildupEvent>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
