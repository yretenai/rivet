// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xd255d55.hpp>
#include <rivet/ddl/generated/CameraAimContextBlend.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CameraAimContextBlendCustom : CameraAimContextBlend {
		constexpr static std::string_view type_name = "CameraAimContextBlendCustom";
		constexpr static rivet::rivet_type_id type_id = 0x65e94799;

		constexpr static std::string_view Gain_type_name = "Gain";
		constexpr static rivet::rivet_type_id Gain_type_id = 0xe005edb0;
		constexpr static std::string_view Damp_type_name = "Damp";
		constexpr static rivet::rivet_type_id Damp_type_id = 0x6cd3ba39;
		constexpr static std::string_view MaxSpeed_type_name = "MaxSpeed";
		constexpr static rivet::rivet_type_id MaxSpeed_type_id = 0x16b83961;
		constexpr static std::string_view Priority_type_name = "Priority";
		constexpr static rivet::rivet_type_id Priority_type_id = 0x98a76157; 

		explicit CameraAimContextBlendCustom() = default;
		explicit CameraAimContextBlendCustom([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Gain {};
		float Damp {};
		float MaxSpeed {};
		rivet::ddl::generated::xd255d55 Priority {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CameraAimContextBlendCustom>;
	};
} // namespace rivet::ddl::generated

// clang-format on
