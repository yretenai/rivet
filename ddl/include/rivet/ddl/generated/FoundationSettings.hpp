// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DdlDefaultFallbackHeapInfo; 

	struct RIVET_DDL_SHARED FoundationSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "FoundationSettings";
		constexpr static rivet::rivet_type_id type_id = 0x16684a19;

		constexpr static std::string_view ProfilingEnable_type_name = "ProfilingEnable";
		constexpr static rivet::rivet_type_id ProfilingEnable_type_id = 0xe9b56f54;
		constexpr static std::string_view ProfilingMemorySize_type_name = "ProfilingMemorySize";
		constexpr static rivet::rivet_type_id ProfilingMemorySize_type_id = 0xa00f34f;
		constexpr static std::string_view MemAuditEnable_type_name = "MemAuditEnable";
		constexpr static rivet::rivet_type_id MemAuditEnable_type_id = 0x898108ee;
		constexpr static std::string_view MemAuditOnShutdown_type_name = "MemAuditOnShutdown";
		constexpr static rivet::rivet_type_id MemAuditOnShutdown_type_id = 0xbe17ccfc;
		constexpr static std::string_view MuteDdlJsonParseWarnings_type_name = "MuteDdlJsonParseWarnings";
		constexpr static rivet::rivet_type_id MuteDdlJsonParseWarnings_type_id = 0x5d748209;
		constexpr static std::string_view DevHttpServerIp_type_name = "DevHttpServerIp";
		constexpr static rivet::rivet_type_id DevHttpServerIp_type_id = 0x61eca702;
		constexpr static std::string_view DevHttpServerBindPort_type_name = "DevHttpServerBindPort";
		constexpr static rivet::rivet_type_id DevHttpServerBindPort_type_id = 0x69f4ea18;
		constexpr static std::string_view TtyEnable_type_name = "TtyEnable";
		constexpr static rivet::rivet_type_id TtyEnable_type_id = 0xdd9f7f4e;
		constexpr static std::string_view DdlThreadMax_type_name = "DdlThreadMax";
		constexpr static rivet::rivet_type_id DdlThreadMax_type_id = 0xfdcbdf91;
		constexpr static std::string_view DdlDefaultFallbackHeapInfo_type_name = "DdlDefaultFallbackHeapInfo";
		constexpr static rivet::rivet_type_id DdlDefaultFallbackHeapInfo_type_id = 0xcc591451;
		constexpr static std::string_view BuildName_type_name = "BuildName";
		constexpr static rivet::rivet_type_id BuildName_type_id = 0x202ea4ca;
		constexpr static std::string_view UnbufferedHttpSend_type_name = "UnbufferedHttpSend";
		constexpr static rivet::rivet_type_id UnbufferedHttpSend_type_id = 0x4f210a9; 

		explicit FoundationSettings() = default;
		explicit FoundationSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool ProfilingEnable {};
		uint32_t ProfilingMemorySize {};
		bool MemAuditEnable {};
		bool MemAuditOnShutdown {};
		bool MuteDdlJsonParseWarnings {};
		std::string_view DevHttpServerIp {};
		uint16_t DevHttpServerBindPort {};
		bool TtyEnable {};
		uint32_t DdlThreadMax {};
		std::shared_ptr<rivet::ddl::generated::DdlDefaultFallbackHeapInfo> DdlDefaultFallbackHeapInfo {};
		std::string_view BuildName {};
		bool UnbufferedHttpSend {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FoundationSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
