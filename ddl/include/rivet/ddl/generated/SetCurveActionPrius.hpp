// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x3376434d.hpp>
#include <rivet/ddl/generated/enums/xb02a7b53.hpp>
#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SetCurveActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SetCurveActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x3476405f;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view UseClosestPt_type_name = "UseClosestPt";
		constexpr static rivet::rivet_type_id UseClosestPt_type_id = 0x52dce52a;
		constexpr static std::string_view DoSmoothTrans_type_name = "DoSmoothTrans";
		constexpr static rivet::rivet_type_id DoSmoothTrans_type_id = 0x6097908a;
		constexpr static std::string_view SmoothingType_type_name = "SmoothingType";
		constexpr static rivet::rivet_type_id SmoothingType_type_id = 0xc6252625;
		constexpr static std::string_view SmoothingStartType_type_name = "SmoothingStartType";
		constexpr static rivet::rivet_type_id SmoothingStartType_type_id = 0xeba1810; 

		explicit SetCurveActionPrius() = default;
		explicit SetCurveActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		bool UseClosestPt {};
		bool DoSmoothTrans {};
		rivet::ddl::generated::xb02a7b53 SmoothingType {};
		rivet::ddl::generated::x3376434d SmoothingStartType {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SetCurveActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
