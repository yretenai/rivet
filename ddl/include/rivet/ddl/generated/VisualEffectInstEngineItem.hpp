// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x62abe5d0.hpp>
#include <rivet/ddl/generated/enums/xa8fd47b8.hpp> 

namespace rivet::ddl::generated {
	struct VisualEffectDef; 

	struct RIVET_DDL_SHARED VisualEffectInstEngineItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VisualEffectInstEngineItem";
		constexpr static rivet::rivet_type_id type_id = 0xe7e42cc8;

		constexpr static std::string_view AssetPath_type_name = "AssetPath";
		constexpr static rivet::rivet_type_id AssetPath_type_id = 0xefa614b;
		constexpr static std::string_view Azimuth_type_name = "Azimuth";
		constexpr static rivet::rivet_type_id Azimuth_type_id = 0x1c901071;
		constexpr static std::string_view DisplayDebugStats_type_name = "DisplayDebugStats";
		constexpr static rivet::rivet_type_id DisplayDebugStats_type_id = 0xd3eeb0ed;
		constexpr static std::string_view DisplayLightShells_type_name = "DisplayLightShells";
		constexpr static rivet::rivet_type_id DisplayLightShells_type_id = 0xb999a75c;
		constexpr static std::string_view DisplayOverdraw_type_name = "DisplayOverdraw";
		constexpr static rivet::rivet_type_id DisplayOverdraw_type_id = 0xd0f67607;
		constexpr static std::string_view Inclination_type_name = "Inclination";
		constexpr static rivet::rivet_type_id Inclination_type_id = 0x83f0b16e;
		constexpr static std::string_view Loop_type_name = "Loop";
		constexpr static rivet::rivet_type_id Loop_type_id = 0x91cfdd5e;
		constexpr static std::string_view MotionType_type_name = "MotionType";
		constexpr static rivet::rivet_type_id MotionType_type_id = 0x7b43320e;
		constexpr static std::string_view State_type_name = "State";
		constexpr static rivet::rivet_type_id State_type_id = 0xbac01e3a;
		constexpr static std::string_view VisualEffectDef_type_name = "VisualEffectDef";
		constexpr static rivet::rivet_type_id VisualEffectDef_type_id = 0xf09aaa72;
		constexpr static std::string_view VisualEffectEditor_type_name = "VisualEffectEditor";
		constexpr static rivet::rivet_type_id VisualEffectEditor_type_id = 0xb28edf40;
		constexpr static std::string_view Counter_type_name = "Counter";
		constexpr static rivet::rivet_type_id Counter_type_id = 0xc0c8f740;
		constexpr static std::string_view Speed_type_name = "Speed";
		constexpr static rivet::rivet_type_id Speed_type_id = 0x16753237;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view DynamicScaling_type_name = "DynamicScaling";
		constexpr static rivet::rivet_type_id DynamicScaling_type_id = 0xd726cd51;
		constexpr static std::string_view FpsSimulation_type_name = "FpsSimulation";
		constexpr static rivet::rivet_type_id FpsSimulation_type_id = 0xba9c394f; 

		explicit VisualEffectInstEngineItem() = default;
		explicit VisualEffectInstEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view AssetPath {};
		double Azimuth {};
		bool DisplayDebugStats {};
		bool DisplayLightShells {};
		bool DisplayOverdraw {};
		double Inclination {};
		bool Loop {};
		rivet::ddl::generated::xa8fd47b8 MotionType {};
		rivet::ddl::generated::x62abe5d0 State {};
		std::shared_ptr<rivet::ddl::generated::VisualEffectDef> VisualEffectDef {};
		bool VisualEffectEditor {};
		int32_t Counter {};
		float Speed {};
		float Radius {};
		float DynamicScaling {};
		float FpsSimulation {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VisualEffectInstEngineItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
