// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/BotComboMove.hpp> 

namespace rivet::ddl::generated {
	struct BotAttackDodgeData;
	struct BotMeleeAttackData; 

	struct RIVET_DDL_SHARED BotComboMoveMelee : BotComboMove {
		constexpr static std::string_view type_name = "BotComboMoveMelee";
		constexpr static rivet::rivet_type_id type_id = 0xaffb0864;

		constexpr static std::string_view MeleeAttackData_type_name = "MeleeAttackData";
		constexpr static rivet::rivet_type_id MeleeAttackData_type_id = 0xf2a6d993;
		constexpr static std::string_view AttackDodgeData_type_name = "AttackDodgeData";
		constexpr static rivet::rivet_type_id AttackDodgeData_type_id = 0x685f8480;
		constexpr static std::string_view DisableHitReactPartialsDuringAttack_type_name = "DisableHitReactPartialsDuringAttack";
		constexpr static rivet::rivet_type_id DisableHitReactPartialsDuringAttack_type_id = 0x760d56f1;
		constexpr static std::string_view PrioritizeMotionScaling_type_name = "PrioritizeMotionScaling";
		constexpr static rivet::rivet_type_id PrioritizeMotionScaling_type_id = 0x2c704b31; 

		explicit BotComboMoveMelee() = default;
		explicit BotComboMoveMelee([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::BotMeleeAttackData> MeleeAttackData {};
		std::shared_ptr<rivet::ddl::generated::BotAttackDodgeData> AttackDodgeData {};
		bool DisableHitReactPartialsDuringAttack {};
		bool PrioritizeMotionScaling {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<BotComboMoveMelee>;
	};
} // namespace rivet::ddl::generated

// clang-format on
