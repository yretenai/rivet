// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xee0945fb.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DebugPlaytestLoadInfo : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "DebugPlaytestLoadInfo";
		constexpr const static rivet::rivet_type_id type_id = 0x7f50ddea;

		constexpr const static std::string_view Level_type_name = "Level";
		constexpr const static rivet::rivet_type_id Level_type_id = 0x83b900d2;
		constexpr const static std::string_view UseChallengeMode_type_name = "UseChallengeMode";
		constexpr const static rivet::rivet_type_id UseChallengeMode_type_id = 0xc801de1f;
		constexpr const static std::string_view OverrideCheckpoints_type_name = "OverrideCheckpoints";
		constexpr const static rivet::rivet_type_id OverrideCheckpoints_type_id = 0x55d6e037;
		constexpr const static std::string_view Checkpoint_type_name = "Checkpoint";
		constexpr const static rivet::rivet_type_id Checkpoint_type_id = 0xd436a987;
		constexpr const static std::string_view DimensionCheckpoint_type_name = "DimensionCheckpoint";
		constexpr const static rivet::rivet_type_id DimensionCheckpoint_type_id = 0xb98c1c37;
		constexpr const static std::string_view OverrideLightingMode_type_name = "OverrideLightingMode";
		constexpr const static rivet::rivet_type_id OverrideLightingMode_type_id = 0x344cb7e0;
		constexpr const static std::string_view LightingMode_type_name = "LightingMode";
		constexpr const static rivet::rivet_type_id LightingMode_type_id = 0x537e2fcc; 

		explicit DebugPlaytestLoadInfo() = default;
		explicit DebugPlaytestLoadInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Level {};
		bool UseChallengeMode {};
		bool OverrideCheckpoints {};
		std::string_view Checkpoint {};
		std::string_view DimensionCheckpoint {};
		bool OverrideLightingMode {};
		rivet::ddl::generated::xee0945fb LightingMode {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DebugPlaytestLoadInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
