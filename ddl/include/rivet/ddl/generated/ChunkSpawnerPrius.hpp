// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct ChunkSpawnItem;
	struct ChunkSpawnParams; 

	struct RIVET_DDL_SHARED ChunkSpawnerPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ChunkSpawnerPrius";
		constexpr static rivet::rivet_type_id type_id = 0x11008d50;

		constexpr static std::string_view SpawnParams_type_name = "SpawnParams";
		constexpr static rivet::rivet_type_id SpawnParams_type_id = 0x7876c1ed;
		constexpr static std::string_view SpawnOnDeath_type_name = "SpawnOnDeath";
		constexpr static rivet::rivet_type_id SpawnOnDeath_type_id = 0x1a32ea4e;
		constexpr static std::string_view HitDirectionBias_type_name = "HitDirectionBias";
		constexpr static rivet::rivet_type_id HitDirectionBias_type_id = 0x36aa00ca;
		constexpr static std::string_view SpawnItems_type_name = "SpawnItems";
		constexpr static rivet::rivet_type_id SpawnItems_type_id = 0x34ecdaff; 

		explicit ChunkSpawnerPrius() = default;
		explicit ChunkSpawnerPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::ChunkSpawnParams> SpawnParams {};
		bool SpawnOnDeath {};
		float HitDirectionBias {};
		std::vector<std::shared_ptr<rivet::ddl::generated::ChunkSpawnItem>> SpawnItems {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ChunkSpawnerPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
