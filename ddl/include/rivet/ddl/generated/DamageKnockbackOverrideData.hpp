// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DamageKnockbackPerTypeData; 

	struct RIVET_DDL_SHARED DamageKnockbackOverrideData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "DamageKnockbackOverrideData";
		constexpr const static rivet::rivet_type_id type_id = 0x6d21ea0f;

		constexpr const static std::string_view SmallData_type_name = "SmallData";
		constexpr const static rivet::rivet_type_id SmallData_type_id = 0xc48450a5;
		constexpr const static std::string_view MediumData_type_name = "MediumData";
		constexpr const static rivet::rivet_type_id MediumData_type_id = 0x561676dc;
		constexpr const static std::string_view TankData_type_name = "TankData";
		constexpr const static rivet::rivet_type_id TankData_type_id = 0x6a611115;
		constexpr const static std::string_view LargeData_type_name = "LargeData";
		constexpr const static rivet::rivet_type_id LargeData_type_id = 0xd1b3dcab;
		constexpr const static std::string_view TransportData_type_name = "TransportData";
		constexpr const static rivet::rivet_type_id TransportData_type_id = 0xa2f8eb5d;
		constexpr const static std::string_view BossData_type_name = "BossData";
		constexpr const static rivet::rivet_type_id BossData_type_id = 0x6f529fe2; 

		explicit DamageKnockbackOverrideData() = default;
		explicit DamageKnockbackOverrideData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::DamageKnockbackPerTypeData> SmallData {};
		std::shared_ptr<rivet::ddl::generated::DamageKnockbackPerTypeData> MediumData {};
		std::shared_ptr<rivet::ddl::generated::DamageKnockbackPerTypeData> TankData {};
		std::shared_ptr<rivet::ddl::generated::DamageKnockbackPerTypeData> LargeData {};
		std::shared_ptr<rivet::ddl::generated::DamageKnockbackPerTypeData> TransportData {};
		std::shared_ptr<rivet::ddl::generated::DamageKnockbackPerTypeData> BossData {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageKnockbackOverrideData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
