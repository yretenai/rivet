// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ProximityTieredOverrides : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ProximityTieredOverrides";
		constexpr static rivet::rivet_type_id type_id = 0xa60ce874;

		constexpr static std::string_view MinPercentOutOfView_type_name = "MinPercentOutOfView";
		constexpr static rivet::rivet_type_id MinPercentOutOfView_type_id = 0x1ab9744c;
		constexpr static std::string_view MaxPercentOutOfView_type_name = "MaxPercentOutOfView";
		constexpr static rivet::rivet_type_id MaxPercentOutOfView_type_id = 0xbd8df435;
		constexpr static std::string_view OverrideMinDelay_type_name = "OverrideMinDelay";
		constexpr static rivet::rivet_type_id OverrideMinDelay_type_id = 0xea494368;
		constexpr static std::string_view OverrideMaxDelay_type_name = "OverrideMaxDelay";
		constexpr static rivet::rivet_type_id OverrideMaxDelay_type_id = 0xc29ec89; 

		explicit ProximityTieredOverrides() = default;
		explicit ProximityTieredOverrides([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float MinPercentOutOfView {};
		float MaxPercentOutOfView {};
		float OverrideMinDelay {};
		float OverrideMaxDelay {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ProximityTieredOverrides>;
	};
} // namespace rivet::ddl::generated

// clang-format on
