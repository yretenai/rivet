// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RCSOpenInput : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RCSOpenInput";
		constexpr static rivet::rivet_type_id type_id = 0xf46319c1;

		constexpr static std::string_view Views_type_name = "Views";
		constexpr static rivet::rivet_type_id Views_type_id = 0x8a35046;
		constexpr static std::string_view AutoAdd_type_name = "AutoAdd";
		constexpr static rivet::rivet_type_id AutoAdd_type_id = 0xbfa92a2a;
		constexpr static std::string_view AutoSync_type_name = "AutoSync";
		constexpr static rivet::rivet_type_id AutoSync_type_id = 0x1bbe17a3;
		constexpr static std::string_view Changelist_type_name = "Changelist";
		constexpr static rivet::rivet_type_id Changelist_type_id = 0x3b0ddc6; 

		explicit RCSOpenInput() = default;
		explicit RCSOpenInput([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::vector<std::string_view> Views {};
		bool AutoAdd {};
		bool AutoSync {};
		uint32_t Changelist {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RCSOpenInput>;
	};
} // namespace rivet::ddl::generated

// clang-format on
