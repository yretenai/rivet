// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct AnimSetSequenceTransformDef;
	struct AnimSetSequenceDriverDef;
	struct AnimSetSequenceFilterDef;
	struct AnimSetSequenceVarDef; 

	struct RIVET_DDL_SHARED AnimSetSequenceDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimSetSequenceDef";
		constexpr static rivet::rivet_type_id type_id = 0xefd77d5b;

		constexpr static std::string_view Id_type_name = "Id";
		constexpr static rivet::rivet_type_id Id_type_id = 0x8a514a8d;
		constexpr static std::string_view Name_type_name = "Name";
		constexpr static rivet::rivet_type_id Name_type_id = 0x6eb3beb6;
		constexpr static std::string_view StartTime_type_name = "StartTime";
		constexpr static rivet::rivet_type_id StartTime_type_id = 0xc5bae2b;
		constexpr static std::string_view EndTime_type_name = "EndTime";
		constexpr static rivet::rivet_type_id EndTime_type_id = 0xf5a688c4;
		constexpr static std::string_view InitialRandSeed_type_name = "InitialRandSeed";
		constexpr static rivet::rivet_type_id InitialRandSeed_type_id = 0x78c1b58;
		constexpr static std::string_view InitialVars_type_name = "InitialVars";
		constexpr static rivet::rivet_type_id InitialVars_type_id = 0x280451c2;
		constexpr static std::string_view InitialFilters_type_name = "InitialFilters";
		constexpr static rivet::rivet_type_id InitialFilters_type_id = 0x6575d7ca;
		constexpr static std::string_view InitialDrivers_type_name = "InitialDrivers";
		constexpr static rivet::rivet_type_id InitialDrivers_type_id = 0xf9127340;
		constexpr static std::string_view Vars_type_name = "Vars";
		constexpr static rivet::rivet_type_id Vars_type_id = 0xc2907a09;
		constexpr static std::string_view Filters_type_name = "Filters";
		constexpr static rivet::rivet_type_id Filters_type_id = 0x799d04b5;
		constexpr static std::string_view Drivers_type_name = "Drivers";
		constexpr static rivet::rivet_type_id Drivers_type_id = 0xe5faa03f;
		constexpr static std::string_view Transforms_type_name = "Transforms";
		constexpr static rivet::rivet_type_id Transforms_type_id = 0x6828fce6; 

		explicit AnimSetSequenceDef() = default;
		explicit AnimSetSequenceDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t Id {};
		std::string_view Name {};
		float StartTime {};
		float EndTime {};
		std::vector<uint32_t> InitialRandSeed {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceVarDef>> InitialVars {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceFilterDef>> InitialFilters {};
		std::vector<std::string_view> InitialDrivers {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceVarDef>> Vars {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceFilterDef>> Filters {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceDriverDef>> Drivers {};
		std::vector<std::shared_ptr<rivet::ddl::generated::AnimSetSequenceTransformDef>> Transforms {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimSetSequenceDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
