// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x4d78f809.hpp>
#include <rivet/ddl/generated/enums/x349d9632.hpp>
#include <rivet/ddl/generated/enums/xe9023c39.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ForceFieldAttributes : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ForceFieldAttributes";
		constexpr static rivet::rivet_type_id type_id = 0x8def880c;

		constexpr static std::string_view VectorFieldTexture_type_name = "VectorFieldTexture";
		constexpr static rivet::rivet_type_id VectorFieldTexture_type_id = 0xe608c57d;
		constexpr static std::string_view SurfaceVelocityOverride_type_name = "SurfaceVelocityOverride";
		constexpr static rivet::rivet_type_id SurfaceVelocityOverride_type_id = 0x62774b7e;
		constexpr static std::string_view CenterVelocityOverride_type_name = "CenterVelocityOverride";
		constexpr static rivet::rivet_type_id CenterVelocityOverride_type_id = 0xae310532;
		constexpr static std::string_view SurfaceStrengthScale_type_name = "SurfaceStrengthScale";
		constexpr static rivet::rivet_type_id SurfaceStrengthScale_type_id = 0x813f88e7;
		constexpr static std::string_view CenterStrengthScale_type_name = "CenterStrengthScale";
		constexpr static rivet::rivet_type_id CenterStrengthScale_type_id = 0x9e96eda8;
		constexpr static std::string_view SurfaceLifeScale_type_name = "SurfaceLifeScale";
		constexpr static rivet::rivet_type_id SurfaceLifeScale_type_id = 0x2a26ef70;
		constexpr static std::string_view CenterLifeScale_type_name = "CenterLifeScale";
		constexpr static rivet::rivet_type_id CenterLifeScale_type_id = 0x239b4f26;
		constexpr static std::string_view CenterBias_type_name = "CenterBias";
		constexpr static rivet::rivet_type_id CenterBias_type_id = 0xd1043c59;
		constexpr static std::string_view Density_type_name = "Density";
		constexpr static rivet::rivet_type_id Density_type_id = 0xc14209c2;
		constexpr static std::string_view Scope_type_name = "Scope";
		constexpr static rivet::rivet_type_id Scope_type_id = 0x19fc9912;
		constexpr static std::string_view Shape_type_name = "Shape";
		constexpr static rivet::rivet_type_id Shape_type_id = 0xc4633319;
		constexpr static std::string_view Type_type_name = "Type";
		constexpr static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr static std::string_view GPUDisplacement_type_name = "GPUDisplacement";
		constexpr static rivet::rivet_type_id GPUDisplacement_type_id = 0x95f9ad65;
		constexpr static std::string_view DisplayVectorField_type_name = "DisplayVectorField";
		constexpr static rivet::rivet_type_id DisplayVectorField_type_id = 0x880820c7;
		constexpr static std::string_view Debug_type_name = "Debug";
		constexpr static rivet::rivet_type_id Debug_type_id = 0x75f68b66; 

		explicit ForceFieldAttributes() = default;
		explicit ForceFieldAttributes([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view VectorFieldTexture {};
		float SurfaceVelocityOverride {};
		float CenterVelocityOverride {};
		float SurfaceStrengthScale {};
		float CenterStrengthScale {};
		float SurfaceLifeScale {};
		float CenterLifeScale {};
		float CenterBias {};
		float Density {};
		rivet::ddl::generated::xe9023c39 Scope {};
		rivet::ddl::generated::x349d9632 Shape {};
		rivet::ddl::generated::x4d78f809 Type {};
		bool GPUDisplacement {};
		bool DisplayVectorField {};
		bool Debug {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ForceFieldAttributes>;
	};
} // namespace rivet::ddl::generated

// clang-format on
