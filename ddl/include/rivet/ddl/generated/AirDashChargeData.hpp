// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/KnockbackLevels.hpp>
#include <rivet/ddl/generated/bitsets/x65d7dac2.hpp>
#include <rivet/ddl/generated/enums/DamageTypes.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED AirDashChargeData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AirDashChargeData";
		constexpr static rivet::rivet_type_id type_id = 0x91fe45bc;

		constexpr static std::string_view IntroDuration_type_name = "IntroDuration";
		constexpr static rivet::rivet_type_id IntroDuration_type_id = 0x5d9ecce9;
		constexpr static std::string_view ChargeTurnRate_type_name = "ChargeTurnRate";
		constexpr static rivet::rivet_type_id ChargeTurnRate_type_id = 0x46971358;
		constexpr static std::string_view MoveSpeedMin_type_name = "MoveSpeedMin";
		constexpr static rivet::rivet_type_id MoveSpeedMin_type_id = 0xcc30606f;
		constexpr static std::string_view MoveSpeedMax_type_name = "MoveSpeedMax";
		constexpr static rivet::rivet_type_id MoveSpeedMax_type_id = 0xf03d5f36;
		constexpr static std::string_view DesiredMoveTime_type_name = "DesiredMoveTime";
		constexpr static rivet::rivet_type_id DesiredMoveTime_type_id = 0x9be3b565;
		constexpr static std::string_view AllowedChargePastDist_type_name = "AllowedChargePastDist";
		constexpr static rivet::rivet_type_id AllowedChargePastDist_type_id = 0x2d3e8090;
		constexpr static std::string_view MaxChargeDuration_type_name = "MaxChargeDuration";
		constexpr static rivet::rivet_type_id MaxChargeDuration_type_id = 0xfc3adc0b;
		constexpr static std::string_view HitOutroDuration_type_name = "HitOutroDuration";
		constexpr static rivet::rivet_type_id HitOutroDuration_type_id = 0x23ec79ab;
		constexpr static std::string_view MissOutroDuration_type_name = "MissOutroDuration";
		constexpr static rivet::rivet_type_id MissOutroDuration_type_id = 0x87043051;
		constexpr static std::string_view TrackTarget_type_name = "TrackTarget";
		constexpr static rivet::rivet_type_id TrackTarget_type_id = 0x36d0352a;
		constexpr static std::string_view FaceTargetDuringMiss_type_name = "FaceTargetDuringMiss";
		constexpr static rivet::rivet_type_id FaceTargetDuringMiss_type_id = 0xf3929ecb;
		constexpr static std::string_view FaceTargetDuringHit_type_name = "FaceTargetDuringHit";
		constexpr static rivet::rivet_type_id FaceTargetDuringHit_type_id = 0xb340d429;
		constexpr static std::string_view SyncAnimOutroHit_type_name = "SyncAnimOutroHit";
		constexpr static rivet::rivet_type_id SyncAnimOutroHit_type_id = 0x5521943f;
		constexpr static std::string_view IntroDriver_type_name = "IntroDriver";
		constexpr static rivet::rivet_type_id IntroDriver_type_id = 0x9b209c3d;
		constexpr static std::string_view ChargeDriver_type_name = "ChargeDriver";
		constexpr static rivet::rivet_type_id ChargeDriver_type_id = 0x4958a1db;
		constexpr static std::string_view HitOutroDriver_type_name = "HitOutroDriver";
		constexpr static rivet::rivet_type_id HitOutroDriver_type_id = 0x5e5130c0;
		constexpr static std::string_view MissOutroDriver_type_name = "MissOutroDriver";
		constexpr static rivet::rivet_type_id MissOutroDriver_type_id = 0xd0759423;
		constexpr static std::string_view DamageName_type_name = "DamageName";
		constexpr static rivet::rivet_type_id DamageName_type_id = 0x56f13c62;
		constexpr static std::string_view DamageAmount_type_name = "DamageAmount";
		constexpr static rivet::rivet_type_id DamageAmount_type_id = 0x563be470;
		constexpr static std::string_view DamageType_type_name = "DamageType";
		constexpr static rivet::rivet_type_id DamageType_type_id = 0x840c154d;
		constexpr static std::string_view Knockback_type_name = "Knockback";
		constexpr static rivet::rivet_type_id Knockback_type_id = 0x2e553fdd;
		constexpr static std::string_view KnockbackAmount_type_name = "KnockbackAmount";
		constexpr static rivet::rivet_type_id KnockbackAmount_type_id = 0x7b1e600b;
		constexpr static std::string_view DamageLocator_type_name = "DamageLocator";
		constexpr static rivet::rivet_type_id DamageLocator_type_id = 0x604b5af6;
		constexpr static std::string_view LocalOffset_type_name = "LocalOffset";
		constexpr static rivet::rivet_type_id LocalOffset_type_id = 0x46a4eea5;
		constexpr static std::string_view DamageRadius_type_name = "DamageRadius";
		constexpr static rivet::rivet_type_id DamageRadius_type_id = 0xe3e6fa68;
		constexpr static std::string_view RequestFlags_type_name = "RequestFlags";
		constexpr static rivet::rivet_type_id RequestFlags_type_id = 0x2bc801df; 

		explicit AirDashChargeData() = default;
		explicit AirDashChargeData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float IntroDuration {};
		float ChargeTurnRate {};
		float MoveSpeedMin {};
		float MoveSpeedMax {};
		float DesiredMoveTime {};
		float AllowedChargePastDist {};
		float MaxChargeDuration {};
		float HitOutroDuration {};
		float MissOutroDuration {};
		bool TrackTarget {};
		bool FaceTargetDuringMiss {};
		bool FaceTargetDuringHit {};
		bool SyncAnimOutroHit {};
		std::string_view IntroDriver {};
		std::string_view ChargeDriver {};
		std::string_view HitOutroDriver {};
		std::string_view MissOutroDriver {};
		std::string_view DamageName {};
		float DamageAmount {};
		rivet::ddl::generated::DamageTypes DamageType {};
		rivet::ddl::generated::KnockbackLevels Knockback {};
		float KnockbackAmount {};
		std::string_view DamageLocator {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> LocalOffset {};
		float DamageRadius {};
		rivet::ddl::generated::x65d7dac2 RequestFlags {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AirDashChargeData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
