// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DropshipAnimVarHelperPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "DropshipAnimVarHelperPrius";
		constexpr static rivet::rivet_type_id type_id = 0xbb33c2a3;

		constexpr static std::string_view AnimVar_type_name = "AnimVar";
		constexpr static rivet::rivet_type_id AnimVar_type_id = 0x740bb72b;
		constexpr static std::string_view IntroDuration_type_name = "IntroDuration";
		constexpr static rivet::rivet_type_id IntroDuration_type_id = 0x5d9ecce9;
		constexpr static std::string_view OutroGain_type_name = "OutroGain";
		constexpr static rivet::rivet_type_id OutroGain_type_id = 0x17d2bf6f;
		constexpr static std::string_view OutroDamp_type_name = "OutroDamp";
		constexpr static rivet::rivet_type_id OutroDamp_type_id = 0x9b04e8e6;
		constexpr static std::string_view OutroSpeed_type_name = "OutroSpeed";
		constexpr static rivet::rivet_type_id OutroSpeed_type_id = 0xee2a20; 

		explicit DropshipAnimVarHelperPrius() = default;
		explicit DropshipAnimVarHelperPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view AnimVar {};
		float IntroDuration {};
		float OutroGain {};
		float OutroDamp {};
		float OutroSpeed {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DropshipAnimVarHelperPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
