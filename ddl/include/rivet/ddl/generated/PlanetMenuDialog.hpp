// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x6be956dd.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED PlanetMenuDialog : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PlanetMenuDialog";
		constexpr static rivet::rivet_type_id type_id = 0x9b5d145a;

		constexpr static std::string_view Dialog_type_name = "Dialog";
		constexpr static rivet::rivet_type_id Dialog_type_id = 0x7b199605;
		constexpr static std::string_view Mission_type_name = "Mission";
		constexpr static rivet::rivet_type_id Mission_type_id = 0x918d9104;
		constexpr static std::string_view PlayOnAvailable_type_name = "PlayOnAvailable";
		constexpr static rivet::rivet_type_id PlayOnAvailable_type_id = 0x5523441e;
		constexpr static std::string_view PlayOnActive_type_name = "PlayOnActive";
		constexpr static rivet::rivet_type_id PlayOnActive_type_id = 0x72bede4a; 

		explicit PlanetMenuDialog() = default;
		explicit PlanetMenuDialog([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x6be956dd Dialog {};
		std::string_view Mission {};
		bool PlayOnAvailable {};
		bool PlayOnActive {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PlanetMenuDialog>;
	};
} // namespace rivet::ddl::generated

// clang-format on
