// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x79dd0c33.hpp>
#include <rivet/ddl/generated/enums/x531b18aa.hpp>
#include <rivet/ddl/generated/enums/xf94df176.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED FollowModifierTargetFacingPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "FollowModifierTargetFacingPrius";
		constexpr static rivet::rivet_type_id type_id = 0xd727f3b0;

		constexpr static std::string_view Priority_type_name = "Priority";
		constexpr static rivet::rivet_type_id Priority_type_id = 0x98a76157;
		constexpr static std::string_view VectorMode_type_name = "VectorMode";
		constexpr static rivet::rivet_type_id VectorMode_type_id = 0xff506db2;
		constexpr static std::string_view TargetVector_type_name = "TargetVector";
		constexpr static rivet::rivet_type_id TargetVector_type_id = 0xe9df027d;
		constexpr static std::string_view TargetActorHandle_type_name = "TargetActorHandle";
		constexpr static rivet::rivet_type_id TargetActorHandle_type_id = 0xa68ca01f;
		constexpr static std::string_view TargetYaw_type_name = "TargetYaw";
		constexpr static rivet::rivet_type_id TargetYaw_type_id = 0xdf99230e;
		constexpr static std::string_view TargetPitch_type_name = "TargetPitch";
		constexpr static rivet::rivet_type_id TargetPitch_type_id = 0xfbbfa6ac;
		constexpr static std::string_view TargetTolerance_type_name = "TargetTolerance";
		constexpr static rivet::rivet_type_id TargetTolerance_type_id = 0x121a236f;
		constexpr static std::string_view AccelOrGain_type_name = "AccelOrGain";
		constexpr static rivet::rivet_type_id AccelOrGain_type_id = 0xd0dd75a7;
		constexpr static std::string_view DecelOrDamp_type_name = "DecelOrDamp";
		constexpr static rivet::rivet_type_id DecelOrDamp_type_id = 0x2042fe2b;
		constexpr static std::string_view SpeedMaxYaw_type_name = "SpeedMaxYaw";
		constexpr static rivet::rivet_type_id SpeedMaxYaw_type_id = 0xee2137e5;
		constexpr static std::string_view SpeedMaxPitch_type_name = "SpeedMaxPitch";
		constexpr static rivet::rivet_type_id SpeedMaxPitch_type_id = 0x5cef694e;
		constexpr static std::string_view ApplyDelay_type_name = "ApplyDelay";
		constexpr static rivet::rivet_type_id ApplyDelay_type_id = 0x8f28295e;
		constexpr static std::string_view LockBlendTime_type_name = "LockBlendTime";
		constexpr static rivet::rivet_type_id LockBlendTime_type_id = 0xb39182;
		constexpr static std::string_view PeakAngle_type_name = "PeakAngle";
		constexpr static rivet::rivet_type_id PeakAngle_type_id = 0x44ccc370;
		constexpr static std::string_view BackDeadAngle_type_name = "BackDeadAngle";
		constexpr static rivet::rivet_type_id BackDeadAngle_type_id = 0xafd78f02;
		constexpr static std::string_view DestroyOnBlock_type_name = "DestroyOnBlock";
		constexpr static rivet::rivet_type_id DestroyOnBlock_type_id = 0xde5d2683;
		constexpr static std::string_view DestroyOnInput_type_name = "DestroyOnInput";
		constexpr static rivet::rivet_type_id DestroyOnInput_type_id = 0x856e8376;
		constexpr static std::string_view DestroyOnComplete_type_name = "DestroyOnComplete";
		constexpr static rivet::rivet_type_id DestroyOnComplete_type_id = 0x7fd4567;
		constexpr static std::string_view UseYawInput_type_name = "UseYawInput";
		constexpr static rivet::rivet_type_id UseYawInput_type_id = 0xcce09cfd;
		constexpr static std::string_view UsePitchInput_type_name = "UsePitchInput";
		constexpr static rivet::rivet_type_id UsePitchInput_type_id = 0x57d1da2;
		constexpr static std::string_view ApplyWithInput_type_name = "ApplyWithInput";
		constexpr static rivet::rivet_type_id ApplyWithInput_type_id = 0xa6c1b50f;
		constexpr static std::string_view MotionMode_type_name = "MotionMode";
		constexpr static rivet::rivet_type_id MotionMode_type_id = 0x6057228c; 

		explicit FollowModifierTargetFacingPrius() = default;
		explicit FollowModifierTargetFacingPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xf94df176 Priority {};
		rivet::ddl::generated::x531b18aa VectorMode {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> TargetVector {};
		uint32_t TargetActorHandle {};
		float TargetYaw {};
		float TargetPitch {};
		float TargetTolerance {};
		float AccelOrGain {};
		float DecelOrDamp {};
		float SpeedMaxYaw {};
		float SpeedMaxPitch {};
		float ApplyDelay {};
		float LockBlendTime {};
		float PeakAngle {};
		float BackDeadAngle {};
		bool DestroyOnBlock {};
		bool DestroyOnInput {};
		bool DestroyOnComplete {};
		bool UseYawInput {};
		bool UsePitchInput {};
		bool ApplyWithInput {};
		rivet::ddl::generated::x79dd0c33 MotionMode {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FollowModifierTargetFacingPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
