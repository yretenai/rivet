// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RandomAttachment : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "RandomAttachment";
		constexpr const static rivet::rivet_type_id type_id = 0x93b248de;

		constexpr const static std::string_view Attachment_type_name = "Attachment";
		constexpr const static rivet::rivet_type_id Attachment_type_id = 0xa2698782;
		constexpr const static std::string_view LocatorOnBot_type_name = "LocatorOnBot";
		constexpr const static rivet::rivet_type_id LocatorOnBot_type_id = 0xf3a04ceb;
		constexpr const static std::string_view LocatorOnAttachment_type_name = "LocatorOnAttachment";
		constexpr const static rivet::rivet_type_id LocatorOnAttachment_type_id = 0x79ceaaba;
		constexpr const static std::string_view AttachmentChance_type_name = "AttachmentChance";
		constexpr const static rivet::rivet_type_id AttachmentChance_type_id = 0x5e397767; 

		explicit RandomAttachment() = default;
		explicit RandomAttachment([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Attachment {};
		std::string_view LocatorOnBot {};
		std::string_view LocatorOnAttachment {};
		float AttachmentChance {}; 

		auto
		get_type_id() const noexcept -> rivet::rivet_type_id override;

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RandomAttachment>;
	};
} // namespace rivet::ddl::generated

// clang-format on
