// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED SpawnPhysicsActorEntry : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SpawnPhysicsActorEntry";
		constexpr static rivet::rivet_type_id type_id = 0x83b8c306;

		constexpr static std::string_view SpawnActor_type_name = "SpawnActor";
		constexpr static rivet::rivet_type_id SpawnActor_type_id = 0x9187654b;
		constexpr static std::string_view SpawnLocator_type_name = "SpawnLocator";
		constexpr static rivet::rivet_type_id SpawnLocator_type_id = 0x52bc144e;
		constexpr static std::string_view SpawnOffset_type_name = "SpawnOffset";
		constexpr static rivet::rivet_type_id SpawnOffset_type_id = 0xaeb205ce;
		constexpr static std::string_view SpawnForce_type_name = "SpawnForce";
		constexpr static rivet::rivet_type_id SpawnForce_type_id = 0x429ab09a;
		constexpr static std::string_view FadeDelayMin_type_name = "FadeDelayMin";
		constexpr static rivet::rivet_type_id FadeDelayMin_type_id = 0xffeb4da3;
		constexpr static std::string_view FadeDelayMax_type_name = "FadeDelayMax";
		constexpr static rivet::rivet_type_id FadeDelayMax_type_id = 0xc3e672fa;
		constexpr static std::string_view FadeTime_type_name = "FadeTime";
		constexpr static rivet::rivet_type_id FadeTime_type_id = 0x8833d162; 

		explicit SpawnPhysicsActorEntry() = default;
		explicit SpawnPhysicsActorEntry([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view SpawnActor {};
		std::string_view SpawnLocator {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnOffset {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> SpawnForce {};
		float FadeDelayMin {};
		float FadeDelayMax {};
		float FadeTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SpawnPhysicsActorEntry>;
	};
} // namespace rivet::ddl::generated

// clang-format on
