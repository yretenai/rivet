// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/WwiseParameter.hpp>
#include <rivet/ddl/generated/WwiseTrigger.hpp>
#include <rivet/ddl/generated/WwiseSwitch.hpp>
#include <rivet/ddl/generated/WwiseState.hpp>
#include <rivet/ddl/generated/WwiseSoundEvent.hpp> 

#include <rivet/ddl/generated/WwiseGameSyncActionPrius.hpp>

namespace rivet::ddl::generated {
	WwiseGameSyncActionPrius::WwiseGameSyncActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		ActionType = serialized->get_enum<rivet::ddl::generated::x10228b34>(ActionType_type_id, rivet::ddl::generated::x10228b34_values);
		WwiseEvent = serialized->unwrap_into<rivet::ddl::generated::WwiseSoundEvent>(WwiseEvent_type_id);
		WwiseState = serialized->unwrap_into<rivet::ddl::generated::WwiseState>(WwiseState_type_id);
		WwiseState1 = serialized->unwrap_into<rivet::ddl::generated::WwiseState>(WwiseState1_type_id);
		WwiseState2 = serialized->unwrap_into<rivet::ddl::generated::WwiseState>(WwiseState2_type_id);
		WwiseState3 = serialized->unwrap_into<rivet::ddl::generated::WwiseState>(WwiseState3_type_id);
		WwiseSwitch = serialized->unwrap_into<rivet::ddl::generated::WwiseSwitch>(WwiseSwitch_type_id);
		WwiseTrigger = serialized->unwrap_into<rivet::ddl::generated::WwiseTrigger>(WwiseTrigger_type_id);
		WwiseParameter = serialized->unwrap_into<rivet::ddl::generated::WwiseParameter>(WwiseParameter_type_id); 
	}

	[[nodiscard]] auto
	WwiseGameSyncActionPrius::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	WwiseGameSyncActionPrius::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WwiseGameSyncActionPrius> {
		if (incoming_type_id == WwiseGameSyncActionPrius::type_id) {
			return std::make_shared<WwiseGameSyncActionPrius>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
