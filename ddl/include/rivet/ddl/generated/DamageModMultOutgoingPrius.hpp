// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/DamageTypes.hpp>
#include <rivet/ddl/generated/DamageModifierOutgoingPrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DamageModMultOutgoingPrius : DamageModifierOutgoingPrius {
		constexpr static std::string_view type_name = "DamageModMultOutgoingPrius";
		constexpr static rivet::rivet_type_id type_id = 0xcc29fed4;

		constexpr static std::string_view Multiplier_type_name = "Multiplier";
		constexpr static rivet::rivet_type_id Multiplier_type_id = 0x7facf762;
		constexpr static std::string_view DamageFilter_type_name = "DamageFilter";
		constexpr static rivet::rivet_type_id DamageFilter_type_id = 0xa75ecb2f;
		constexpr static std::string_view WeaponTypeFilter_type_name = "WeaponTypeFilter";
		constexpr static rivet::rivet_type_id WeaponTypeFilter_type_id = 0x5d5c06eb;
		constexpr static std::string_view AllegianceFilter_type_name = "AllegianceFilter";
		constexpr static rivet::rivet_type_id AllegianceFilter_type_id = 0x1b32101d;
		constexpr static std::string_view ModifiedTag_type_name = "ModifiedTag";
		constexpr static rivet::rivet_type_id ModifiedTag_type_id = 0x75529898; 

		explicit DamageModMultOutgoingPrius() = default;
		explicit DamageModMultOutgoingPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Multiplier {};
		std::vector<rivet::ddl::generated::DamageTypes> DamageFilter {};
		uint32_t WeaponTypeFilter {};
		uint32_t AllegianceFilter {};
		uint32_t ModifiedTag {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageModMultOutgoingPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
