// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED OverrideHeroShipCamSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "OverrideHeroShipCamSettings";
		constexpr static rivet::rivet_type_id type_id = 0x878c6a1a;

		constexpr static std::string_view CamDefaultFOV_type_name = "CamDefaultFOV";
		constexpr static rivet::rivet_type_id CamDefaultFOV_type_id = 0x73ed030f;
		constexpr static std::string_view CamDefaultFollowHeight_type_name = "CamDefaultFollowHeight";
		constexpr static rivet::rivet_type_id CamDefaultFollowHeight_type_id = 0x9eca8234;
		constexpr static std::string_view CamDefaultFollowDist_type_name = "CamDefaultFollowDist";
		constexpr static rivet::rivet_type_id CamDefaultFollowDist_type_id = 0xb1a2c459;
		constexpr static std::string_view CamDefaultTargetRelYOffset_type_name = "CamDefaultTargetRelYOffset";
		constexpr static rivet::rivet_type_id CamDefaultTargetRelYOffset_type_id = 0x893a1e0f;
		constexpr static std::string_view CamDefaultBasePitchOffset_type_name = "CamDefaultBasePitchOffset";
		constexpr static rivet::rivet_type_id CamDefaultBasePitchOffset_type_id = 0x833d80bc; 

		explicit OverrideHeroShipCamSettings() = default;
		explicit OverrideHeroShipCamSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float CamDefaultFOV {};
		float CamDefaultFollowHeight {};
		float CamDefaultFollowDist {};
		float CamDefaultTargetRelYOffset {};
		float CamDefaultBasePitchOffset {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<OverrideHeroShipCamSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
