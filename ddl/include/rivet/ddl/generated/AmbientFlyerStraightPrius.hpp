// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AmbientFlyerStraightPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AmbientFlyerStraightPrius";
		constexpr static rivet::rivet_type_id type_id = 0xe7b94325;

		constexpr static std::string_view StartHeightMin_type_name = "StartHeightMin";
		constexpr static rivet::rivet_type_id StartHeightMin_type_id = 0x584d5629;
		constexpr static std::string_view StartHeightMax_type_name = "StartHeightMax";
		constexpr static rivet::rivet_type_id StartHeightMax_type_id = 0x64406970;
		constexpr static std::string_view AngleOffCamForward_type_name = "AngleOffCamForward";
		constexpr static rivet::rivet_type_id AngleOffCamForward_type_id = 0x13ca4dbf;
		constexpr static std::string_view YawAngleMin_type_name = "YawAngleMin";
		constexpr static rivet::rivet_type_id YawAngleMin_type_id = 0xd4d19865;
		constexpr static std::string_view YawAngleMax_type_name = "YawAngleMax";
		constexpr static rivet::rivet_type_id YawAngleMax_type_id = 0xe8dca73c;
		constexpr static std::string_view PitchAngleMin_type_name = "PitchAngleMin";
		constexpr static rivet::rivet_type_id PitchAngleMin_type_id = 0xb190e6c2;
		constexpr static std::string_view PitchAngleMax_type_name = "PitchAngleMax";
		constexpr static rivet::rivet_type_id PitchAngleMax_type_id = 0x8d9dd99b;
		constexpr static std::string_view SpeedMin_type_name = "SpeedMin";
		constexpr static rivet::rivet_type_id SpeedMin_type_id = 0x8a4ca0e3;
		constexpr static std::string_view SpeedMax_type_name = "SpeedMax";
		constexpr static rivet::rivet_type_id SpeedMax_type_id = 0xb6419fba;
		constexpr static std::string_view DistToDelete_type_name = "DistToDelete";
		constexpr static rivet::rivet_type_id DistToDelete_type_id = 0x2849b445; 

		explicit AmbientFlyerStraightPrius() = default;
		explicit AmbientFlyerStraightPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float StartHeightMin {};
		float StartHeightMax {};
		bool AngleOffCamForward {};
		float YawAngleMin {};
		float YawAngleMax {};
		float PitchAngleMin {};
		float PitchAngleMax {};
		float SpeedMin {};
		float SpeedMax {};
		float DistToDelete {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AmbientFlyerStraightPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
