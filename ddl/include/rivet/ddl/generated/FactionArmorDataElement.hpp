// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x6bdf4ba1.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED FactionArmorDataElement : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "FactionArmorDataElement";
		constexpr static rivet::rivet_type_id type_id = 0xf1d0b92e;

		constexpr static std::string_view Allegiance_type_name = "Allegiance";
		constexpr static rivet::rivet_type_id Allegiance_type_id = 0xd10c0c26;
		constexpr static std::string_view DamageReductionPercentSet_type_name = "DamageReductionPercentSet";
		constexpr static rivet::rivet_type_id DamageReductionPercentSet_type_id = 0x3150cd1a;
		constexpr static std::string_view DamageReductionPercentPiece_type_name = "DamageReductionPercentPiece";
		constexpr static rivet::rivet_type_id DamageReductionPercentPiece_type_id = 0x3662d41a; 

		explicit FactionArmorDataElement() = default;
		explicit FactionArmorDataElement([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x6bdf4ba1 Allegiance {};
		float DamageReductionPercentSet {};
		float DamageReductionPercentPiece {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FactionArmorDataElement>;
	};
} // namespace rivet::ddl::generated

// clang-format on
