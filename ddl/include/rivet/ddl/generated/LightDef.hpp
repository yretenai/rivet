// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/SpecType.hpp>
#include <rivet/ddl/generated/enums/ShadowRes.hpp>
#include <rivet/ddl/generated/enums/ShadowCastType.hpp>
#include <rivet/ddl/generated/enums/VolumeShapes.hpp>
#include <rivet/ddl/generated/enums/LightType.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3;
	struct LightingConditionBitSet;
	struct LightPlatforms;
	struct VaultMetaData; 

	struct RIVET_DDL_SHARED LightDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LightDef";
		constexpr static rivet::rivet_type_id type_id = 0x956f94ed;

		constexpr static std::string_view VaultMetaData_type_name = "VaultMetaData";
		constexpr static rivet::rivet_type_id VaultMetaData_type_id = 0x37889aa;
		constexpr static std::string_view IconPath_type_name = "IconPath";
		constexpr static rivet::rivet_type_id IconPath_type_id = 0xbf5b007f;
		constexpr static std::string_view Active_type_name = "Active";
		constexpr static rivet::rivet_type_id Active_type_id = 0x7566b265;
		constexpr static std::string_view Platforms_type_name = "Platforms";
		constexpr static rivet::rivet_type_id Platforms_type_id = 0x957c19ef;
		constexpr static std::string_view LightType_type_name = "LightType";
		constexpr static rivet::rivet_type_id LightType_type_id = 0xba4bdcda;
		constexpr static std::string_view UseColorTemperature_type_name = "UseColorTemperature";
		constexpr static rivet::rivet_type_id UseColorTemperature_type_id = 0xaa1b3639;
		constexpr static std::string_view Color_type_name = "Color";
		constexpr static rivet::rivet_type_id Color_type_id = 0x7f058428;
		constexpr static std::string_view ColorTemperature_type_name = "ColorTemperature";
		constexpr static rivet::rivet_type_id ColorTemperature_type_id = 0xbf0315cd;
		constexpr static std::string_view Intensity_type_name = "Intensity";
		constexpr static rivet::rivet_type_id Intensity_type_id = 0x6b4f279e;
		constexpr static std::string_view AttenuationRadius_type_name = "AttenuationRadius";
		constexpr static rivet::rivet_type_id AttenuationRadius_type_id = 0x7216ddac;
		constexpr static std::string_view VolumetricFogIntensity_type_name = "VolumetricFogIntensity";
		constexpr static rivet::rivet_type_id VolumetricFogIntensity_type_id = 0x8a81a800;
		constexpr static std::string_view Saturation_type_name = "Saturation";
		constexpr static rivet::rivet_type_id Saturation_type_id = 0xf11cf3b1;
		constexpr static std::string_view VolumeShape_type_name = "VolumeShape";
		constexpr static rivet::rivet_type_id VolumeShape_type_id = 0xe64c5e33;
		constexpr static std::string_view ModulateLocalLights_type_name = "ModulateLocalLights";
		constexpr static rivet::rivet_type_id ModulateLocalLights_type_id = 0x3ec438e2;
		constexpr static std::string_view SkipLightCapture_type_name = "SkipLightCapture";
		constexpr static rivet::rivet_type_id SkipLightCapture_type_id = 0x64ede99a;
		constexpr static std::string_view OnlyLightCapture_type_name = "OnlyLightCapture";
		constexpr static rivet::rivet_type_id OnlyLightCapture_type_id = 0x1559dec2;
		constexpr static std::string_view CastShadows_type_name = "CastShadows";
		constexpr static rivet::rivet_type_id CastShadows_type_id = 0xfc091c24;
		constexpr static std::string_view ShadowPlatforms_type_name = "ShadowPlatforms";
		constexpr static rivet::rivet_type_id ShadowPlatforms_type_id = 0x206c4afd;
		constexpr static std::string_view ShadowCastType_type_name = "ShadowCastType";
		constexpr static rivet::rivet_type_id ShadowCastType_type_id = 0xa056bfc6;
		constexpr static std::string_view ShadowRes_type_name = "ShadowRes";
		constexpr static rivet::rivet_type_id ShadowRes_type_id = 0x4344f8a2;
		constexpr static std::string_view SpecIntensity_type_name = "SpecIntensity";
		constexpr static rivet::rivet_type_id SpecIntensity_type_id = 0x85609e3f;
		constexpr static std::string_view SpecType_type_name = "SpecType";
		constexpr static rivet::rivet_type_id SpecType_type_id = 0xda97903e;
		constexpr static std::string_view BulbRadius_type_name = "BulbRadius";
		constexpr static rivet::rivet_type_id BulbRadius_type_id = 0x41e5466f;
		constexpr static std::string_view BulbLength_type_name = "BulbLength";
		constexpr static rivet::rivet_type_id BulbLength_type_id = 0x7be4b687;
		constexpr static std::string_view BulbPushForward_type_name = "BulbPushForward";
		constexpr static rivet::rivet_type_id BulbPushForward_type_id = 0x17d27580;
		constexpr static std::string_view BulbIsRectangle_type_name = "BulbIsRectangle";
		constexpr static rivet::rivet_type_id BulbIsRectangle_type_id = 0x98f61e67;
		constexpr static std::string_view InnerCone_type_name = "InnerCone";
		constexpr static rivet::rivet_type_id InnerCone_type_id = 0x5d7bbc1a;
		constexpr static std::string_view OuterCone_type_name = "OuterCone";
		constexpr static rivet::rivet_type_id OuterCone_type_id = 0xcc1e2b6d;
		constexpr static std::string_view CutoffRadius_type_name = "CutoffRadius";
		constexpr static rivet::rivet_type_id CutoffRadius_type_id = 0x676acf1d;
		constexpr static std::string_view CutOnDist_type_name = "CutOnDist";
		constexpr static rivet::rivet_type_id CutOnDist_type_id = 0x258b8c4f;
		constexpr static std::string_view ShadowCutOnDist_type_name = "ShadowCutOnDist";
		constexpr static rivet::rivet_type_id ShadowCutOnDist_type_id = 0x909bdf5d;
		constexpr static std::string_view FalloffDistX_type_name = "FalloffDistX";
		constexpr static rivet::rivet_type_id FalloffDistX_type_id = 0x33eb3a03;
		constexpr static std::string_view FalloffDistPosX_type_name = "FalloffDistPosX";
		constexpr static rivet::rivet_type_id FalloffDistPosX_type_id = 0xf7aa0ce2;
		constexpr static std::string_view FalloffDistY_type_name = "FalloffDistY";
		constexpr static rivet::rivet_type_id FalloffDistY_type_id = 0x44ec0a95;
		constexpr static std::string_view FalloffDistPosY_type_name = "FalloffDistPosY";
		constexpr static rivet::rivet_type_id FalloffDistPosY_type_id = 0x80ad3c74;
		constexpr static std::string_view FalloffDistZ_type_name = "FalloffDistZ";
		constexpr static rivet::rivet_type_id FalloffDistZ_type_id = 0xdde55b2f;
		constexpr static std::string_view FalloffDistPosZ_type_name = "FalloffDistPosZ";
		constexpr static rivet::rivet_type_id FalloffDistPosZ_type_id = 0x19a46dce;
		constexpr static std::string_view FadeOutDist_type_name = "FadeOutDist";
		constexpr static rivet::rivet_type_id FadeOutDist_type_id = 0x1c6fd24d;
		constexpr static std::string_view NearFadeClipDist_type_name = "NearFadeClipDist";
		constexpr static rivet::rivet_type_id NearFadeClipDist_type_id = 0xb368515f;
		constexpr static std::string_view NearFadeStartDist_type_name = "NearFadeStartDist";
		constexpr static rivet::rivet_type_id NearFadeStartDist_type_id = 0x7c3f6996;
		constexpr static std::string_view ShadowFadeOutDist_type_name = "ShadowFadeOutDist";
		constexpr static rivet::rivet_type_id ShadowFadeOutDist_type_id = 0x96f917c0;
		constexpr static std::string_view SpecFadeOutDist_type_name = "SpecFadeOutDist";
		constexpr static rivet::rivet_type_id SpecFadeOutDist_type_id = 0x19cebae2;
		constexpr static std::string_view TextureAsset_type_name = "TextureAsset";
		constexpr static rivet::rivet_type_id TextureAsset_type_id = 0x34776bf1;
		constexpr static std::string_view CustomGoboInput_type_name = "CustomGoboInput";
		constexpr static rivet::rivet_type_id CustomGoboInput_type_id = 0xa788b073;
		constexpr static std::string_view VolumeLinks_type_name = "VolumeLinks";
		constexpr static rivet::rivet_type_id VolumeLinks_type_id = 0xeafe00f3;
		constexpr static std::string_view LightingConditions_type_name = "LightingConditions";
		constexpr static rivet::rivet_type_id LightingConditions_type_id = 0xfda14c35; 

		explicit LightDef() = default;
		explicit LightDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::shared_ptr<rivet::ddl::generated::VaultMetaData> VaultMetaData {};
		std::string_view IconPath {};
		bool Active {};
		std::shared_ptr<rivet::ddl::generated::LightPlatforms> Platforms {};
		rivet::ddl::generated::LightType LightType {};
		bool UseColorTemperature {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Color {};
		float ColorTemperature {};
		float Intensity {};
		float AttenuationRadius {};
		float VolumetricFogIntensity {};
		float Saturation {};
		rivet::ddl::generated::VolumeShapes VolumeShape {};
		bool ModulateLocalLights {};
		bool SkipLightCapture {};
		bool OnlyLightCapture {};
		bool CastShadows {};
		std::shared_ptr<rivet::ddl::generated::LightPlatforms> ShadowPlatforms {};
		rivet::ddl::generated::ShadowCastType ShadowCastType {};
		rivet::ddl::generated::ShadowRes ShadowRes {};
		float SpecIntensity {};
		rivet::ddl::generated::SpecType SpecType {};
		float BulbRadius {};
		float BulbLength {};
		float BulbPushForward {};
		bool BulbIsRectangle {};
		float InnerCone {};
		float OuterCone {};
		float CutoffRadius {};
		float CutOnDist {};
		float ShadowCutOnDist {};
		float FalloffDistX {};
		float FalloffDistPosX {};
		float FalloffDistY {};
		float FalloffDistPosY {};
		float FalloffDistZ {};
		float FalloffDistPosZ {};
		float FadeOutDist {};
		float NearFadeClipDist {};
		float NearFadeStartDist {};
		float ShadowFadeOutDist {};
		float SpecFadeOutDist {};
		std::string_view TextureAsset {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> CustomGoboInput {};
		std::vector<uint64_t> VolumeLinks {};
		std::shared_ptr<rivet::ddl::generated::LightingConditionBitSet> LightingConditions {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LightDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
