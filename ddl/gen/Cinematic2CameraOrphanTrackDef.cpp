// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#include <rivet/ddl/generated/Cinematic2TextureActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2AudioGameSyncGroupActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2BehaviorGoToActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2WindActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2AudioActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2LookAtActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2CameraDofFollowActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2AudioGameSyncActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2BlinkActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2SyncActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2BehaviorPlayDriverActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2DialogActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2BehaviorPlayAnimClipActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2HideActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2MaterialOverrideTextureActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2PreCompositeMaterialActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2OptInLookActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2TrackTagsDef.hpp>
#include <rivet/ddl/generated/Cinematic2VfxActionDef.hpp>
#include <rivet/ddl/generated/AnimTriggerEventDef.hpp>
#include <rivet/ddl/generated/Cinematic2LightAttachActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2CharacterLookActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2MovieActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2ToggleLookActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2PostCompositeMaterialActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2AtmosphereActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2MaterialOverrideMaterialActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2ToggleLookGroupActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2ApplyLookGroupActionDef.hpp>
#include <rivet/ddl/generated/Cinematic2TagActionDef.hpp> 

#include <rivet/ddl/generated/Cinematic2CameraOrphanTrackDef.hpp>

namespace rivet::ddl::generated {
	Cinematic2CameraOrphanTrackDef::Cinematic2CameraOrphanTrackDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized): rivet::structures::rivet_ddl_base(serialized) {
		Id = serialized->get_uint64(Id_type_id, 0);
		Name = serialized->get_string(Name_type_id, {});
		PlatformFilter = serialized->get_bitset<rivet::ddl::generated::xb52df7e7>(PlatformFilter_type_id, rivet::ddl::generated::xb52df7e7_values, 7);
		Tags = serialized->unwrap_into<rivet::ddl::generated::Cinematic2TrackTagsDef>(Tags_type_id);
		Global = serialized->get_bool(Global_type_id, false);
		PlayAnimActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2BehaviorPlayAnimClipActionDef>(PlayAnimActions_type_id);
		BehaviorGoToActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2BehaviorGoToActionDef>(BehaviorGoToActions_type_id);
		PlayDriverActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2BehaviorPlayDriverActionDef>(PlayDriverActions_type_id);
		DialogActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2DialogActionDef>(DialogActions_type_id);
		LookAtActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2LookAtActionDef>(LookAtActions_type_id);
		BlinkActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2BlinkActionDef>(BlinkActions_type_id);
		MovieActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2MovieActionDef>(MovieActions_type_id);
		AtmosphereActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2AtmosphereActionDef>(AtmosphereActions_type_id);
		AudioActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2AudioActionDef>(AudioActions_type_id);
		AudioGameSyncGroupActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2AudioGameSyncGroupActionDef>(AudioGameSyncGroupActions_type_id);
		AudioGameSyncActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2AudioGameSyncActionDef>(AudioGameSyncActions_type_id);
		FollowActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2CameraDofFollowActionDef>(FollowActions_type_id);
		HideActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2HideActionDef>(HideActions_type_id);
		TextureOverrideActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2MaterialOverrideTextureActionDef>(TextureOverrideActions_type_id);
		MaterialOverrideActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2MaterialOverrideMaterialActionDef>(MaterialOverrideActions_type_id);
		PreCompositeMaterialActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2PreCompositeMaterialActionDef>(PreCompositeMaterialActions_type_id);
		PostCompositeMaterialActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2PostCompositeMaterialActionDef>(PostCompositeMaterialActions_type_id);
		SyncActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2SyncActionDef>(SyncActions_type_id);
		VfxActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2VfxActionDef>(VfxActions_type_id);
		LightAttachActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2LightAttachActionDef>(LightAttachActions_type_id);
		Events = serialized->unwrap_into_many<rivet::ddl::generated::AnimTriggerEventDef>(Events_type_id);
		CharacterActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2CharacterLookActionDef>(CharacterActions_type_id);
		OptInActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2OptInLookActionDef>(OptInActions_type_id);
		ToggleLookActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2ToggleLookActionDef>(ToggleLookActions_type_id);
		ToggleGroupActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2ToggleLookGroupActionDef>(ToggleGroupActions_type_id);
		ApplyGroupActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2ApplyLookGroupActionDef>(ApplyGroupActions_type_id);
		TagActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2TagActionDef>(TagActions_type_id);
		WindActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2WindActionDef>(WindActions_type_id);
		TextureActions = serialized->unwrap_into_many<rivet::ddl::generated::Cinematic2TextureActionDef>(TextureActions_type_id); 
	}

	[[nodiscard]] auto
	Cinematic2CameraOrphanTrackDef::get_type_name() const noexcept -> std::string_view {
		return type_name;
	}

	[[nodiscard]] auto
	Cinematic2CameraOrphanTrackDef::from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<Cinematic2CameraOrphanTrackDef> {
		if (incoming_type_id == Cinematic2CameraOrphanTrackDef::type_id) {
			return std::make_shared<Cinematic2CameraOrphanTrackDef>(serialized);
		}
 
		return nullptr;
	}
} // namespace rivet::ddl::generated
