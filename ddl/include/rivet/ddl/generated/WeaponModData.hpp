// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/xdbb7aaff.hpp>
#include <rivet/ddl/generated/enums/x1c87ac4a.hpp>
#include <rivet/ddl/generated/enums/x1b1e7614.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED WeaponModData : rivet::structures::rivet_ddl_base {
		constexpr const static std::string_view type_name = "WeaponModData";
		constexpr const static rivet::rivet_type_id type_id = 0xfa9a0eb5;

		constexpr const static std::string_view Type_type_name = "Type";
		constexpr const static rivet::rivet_type_id Type_type_id = 0xbc4e9799;
		constexpr const static std::string_view IconType_type_name = "IconType";
		constexpr const static rivet::rivet_type_id IconType_type_id = 0x38d1dc59;
		constexpr const static std::string_view IsPercent_type_name = "IsPercent";
		constexpr const static rivet::rivet_type_id IsPercent_type_id = 0x858c4cf5;
		constexpr const static std::string_view Value_type_name = "Value";
		constexpr const static rivet::rivet_type_id Value_type_id = 0x42494f5;
		constexpr const static std::string_view Cost_type_name = "Cost";
		constexpr const static rivet::rivet_type_id Cost_type_id = 0x28b6544c;
		constexpr const static std::string_view NameLocTag_type_name = "NameLocTag";
		constexpr const static rivet::rivet_type_id NameLocTag_type_id = 0xa0041b54;
		constexpr const static std::string_view DescLocTag_type_name = "DescLocTag";
		constexpr const static rivet::rivet_type_id DescLocTag_type_id = 0xe02bccb2;
		constexpr const static std::string_view TileIndex_type_name = "TileIndex";
		constexpr const static rivet::rivet_type_id TileIndex_type_id = 0x95a0a58b; 

		explicit WeaponModData() = default;
		explicit WeaponModData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::xdbb7aaff Type {};
		rivet::ddl::generated::x1c87ac4a IconType {};
		bool IsPercent {};
		float Value {};
		uint32_t Cost {};
		std::string_view NameLocTag {};
		std::string_view DescLocTag {};
		rivet::ddl::generated::x1b1e7614 TileIndex {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponModData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
