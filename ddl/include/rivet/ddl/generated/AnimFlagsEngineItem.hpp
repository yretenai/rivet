// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AnimFlagsEngineItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "AnimFlagsEngineItem";
		constexpr static rivet::rivet_type_id type_id = 0x5e901cc0;

		constexpr static std::string_view AlwaysLoop_type_name = "AlwaysLoop";
		constexpr static rivet::rivet_type_id AlwaysLoop_type_id = 0x85ec5fb3;
		constexpr static std::string_view AnimationCompleted_type_name = "AnimationCompleted";
		constexpr static rivet::rivet_type_id AnimationCompleted_type_id = 0x2b63b775;
		constexpr static std::string_view AnimClipHasPhaseData_type_name = "AnimClipHasPhaseData";
		constexpr static rivet::rivet_type_id AnimClipHasPhaseData_type_id = 0x6d7b034d;
		constexpr static std::string_view ApplyRotation_type_name = "ApplyRotation";
		constexpr static rivet::rivet_type_id ApplyRotation_type_id = 0x1bf3c075;
		constexpr static std::string_view ApplyTranslation_type_name = "ApplyTranslation";
		constexpr static rivet::rivet_type_id ApplyTranslation_type_id = 0xa27166fe;
		constexpr static std::string_view ClothEnabled_type_name = "ClothEnabled";
		constexpr static rivet::rivet_type_id ClothEnabled_type_id = 0x31dc6fa4;
		constexpr static std::string_view LinkCameraToActor_type_name = "LinkCameraToActor";
		constexpr static rivet::rivet_type_id LinkCameraToActor_type_id = 0x5e23fd9b;
		constexpr static std::string_view PlayingAnimClip_type_name = "PlayingAnimClip";
		constexpr static rivet::rivet_type_id PlayingAnimClip_type_id = 0x9ecea38f;
		constexpr static std::string_view PlayingAnimDriver_type_name = "PlayingAnimDriver";
		constexpr static rivet::rivet_type_id PlayingAnimDriver_type_id = 0x931d0203;
		constexpr static std::string_view RenderMotionArrow_type_name = "RenderMotionArrow";
		constexpr static rivet::rivet_type_id RenderMotionArrow_type_id = 0x5dc6b781;
		constexpr static std::string_view RenderMotionData_type_name = "RenderMotionData";
		constexpr static rivet::rivet_type_id RenderMotionData_type_id = 0x36f0e417;
		constexpr static std::string_view RenderPhaseData_type_name = "RenderPhaseData";
		constexpr static rivet::rivet_type_id RenderPhaseData_type_id = 0xd29e0e6f;
		constexpr static std::string_view Rewind_type_name = "Rewind";
		constexpr static rivet::rivet_type_id Rewind_type_id = 0x98cd30d1;
		constexpr static std::string_view SendUpdateData_type_name = "SendUpdateData";
		constexpr static rivet::rivet_type_id SendUpdateData_type_id = 0x1c457e7e;
		constexpr static std::string_view ShowDebugControllerHud_type_name = "ShowDebugControllerHud";
		constexpr static rivet::rivet_type_id ShowDebugControllerHud_type_id = 0x97648ae2;
		constexpr static std::string_view ShowDebugHud_type_name = "ShowDebugHud";
		constexpr static rivet::rivet_type_id ShowDebugHud_type_id = 0x750e7efc;
		constexpr static std::string_view ShowDebugMorphHud_type_name = "ShowDebugMorphHud";
		constexpr static rivet::rivet_type_id ShowDebugMorphHud_type_id = 0x616d2d81;
		constexpr static std::string_view ShowDebugDynamicsHud_type_name = "ShowDebugDynamicsHud";
		constexpr static rivet::rivet_type_id ShowDebugDynamicsHud_type_id = 0x827e799c;
		constexpr static std::string_view ShowVisData_type_name = "ShowVisData";
		constexpr static rivet::rivet_type_id ShowVisData_type_id = 0x9bedddfc;
		constexpr static std::string_view TriggerEvents_type_name = "TriggerEvents";
		constexpr static rivet::rivet_type_id TriggerEvents_type_id = 0xa4846ab5; 

		explicit AnimFlagsEngineItem() = default;
		explicit AnimFlagsEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool AlwaysLoop {};
		bool AnimationCompleted {};
		bool AnimClipHasPhaseData {};
		bool ApplyRotation {};
		bool ApplyTranslation {};
		bool ClothEnabled {};
		bool LinkCameraToActor {};
		bool PlayingAnimClip {};
		bool PlayingAnimDriver {};
		bool RenderMotionArrow {};
		bool RenderMotionData {};
		bool RenderPhaseData {};
		bool Rewind {};
		bool SendUpdateData {};
		bool ShowDebugControllerHud {};
		bool ShowDebugHud {};
		bool ShowDebugMorphHud {};
		bool ShowDebugDynamicsHud {};
		bool ShowVisData {};
		bool TriggerEvents {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimFlagsEngineItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
