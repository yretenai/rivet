// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x11d5b447.hpp>
#include <rivet/ddl/generated/enums/x8d1d7e8a.hpp>
#include <rivet/ddl/generated/enums/x275d9b04.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED InteractLocationPromptData : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "InteractLocationPromptData";
		constexpr static rivet::rivet_type_id type_id = 0xab62b7a2;

		constexpr static std::string_view PromptTag_type_name = "PromptTag";
		constexpr static rivet::rivet_type_id PromptTag_type_id = 0x6abc0167;
		constexpr static std::string_view InWorldPrompt_type_name = "InWorldPrompt";
		constexpr static rivet::rivet_type_id InWorldPrompt_type_id = 0xfb08a211;
		constexpr static std::string_view POISubtype_type_name = "POISubtype";
		constexpr static rivet::rivet_type_id POISubtype_type_id = 0xfeb66587;
		constexpr static std::string_view POIPreviewSubtype_type_name = "POIPreviewSubtype";
		constexpr static rivet::rivet_type_id POIPreviewSubtype_type_id = 0x398dd6b8;
		constexpr static std::string_view POILOSCheck_type_name = "POILOSCheck";
		constexpr static rivet::rivet_type_id POILOSCheck_type_id = 0x78ff87d4;
		constexpr static std::string_view PreviewRange_type_name = "PreviewRange";
		constexpr static rivet::rivet_type_id PreviewRange_type_id = 0x1a4186b9;
		constexpr static std::string_view PromptFacingMode_type_name = "PromptFacingMode";
		constexpr static rivet::rivet_type_id PromptFacingMode_type_id = 0xb28ef75b;
		constexpr static std::string_view FixedPromptForward_type_name = "FixedPromptForward";
		constexpr static rivet::rivet_type_id FixedPromptForward_type_id = 0x3f394095;
		constexpr static std::string_view POIOffset_type_name = "POIOffset";
		constexpr static rivet::rivet_type_id POIOffset_type_id = 0x5a1dc6d9;
		constexpr static std::string_view POILocator_type_name = "POILocator";
		constexpr static rivet::rivet_type_id POILocator_type_id = 0xd19b3e4a; 

		explicit InteractLocationPromptData() = default;
		explicit InteractLocationPromptData([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view PromptTag {};
		bool InWorldPrompt {};
		rivet::ddl::generated::x275d9b04 POISubtype {};
		rivet::ddl::generated::x8d1d7e8a POIPreviewSubtype {};
		bool POILOSCheck {};
		float PreviewRange {};
		rivet::ddl::generated::x11d5b447 PromptFacingMode {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> FixedPromptForward {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> POIOffset {};
		std::string_view POILocator {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<InteractLocationPromptData>;
	};
} // namespace rivet::ddl::generated

// clang-format on
