// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED MouseOverEngineItem : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MouseOverEngineItem";
		constexpr static rivet::rivet_type_id type_id = 0xd99b6b66;

		constexpr static std::string_view Valid_type_name = "Valid";
		constexpr static rivet::rivet_type_id Valid_type_id = 0x9554f93e;
		constexpr static std::string_view NodeId_type_name = "NodeId";
		constexpr static rivet::rivet_type_id NodeId_type_id = 0x371a59e0;
		constexpr static std::string_view WorldPosition_type_name = "WorldPosition";
		constexpr static rivet::rivet_type_id WorldPosition_type_id = 0x1b2eab1c;
		constexpr static std::string_view WorldNormal_type_name = "WorldNormal";
		constexpr static rivet::rivet_type_id WorldNormal_type_id = 0xa0ad029a;
		constexpr static std::string_view SubsetIndex_type_name = "SubsetIndex";
		constexpr static rivet::rivet_type_id SubsetIndex_type_id = 0xf1c36c5;
		constexpr static std::string_view TriangleIndex_type_name = "TriangleIndex";
		constexpr static rivet::rivet_type_id TriangleIndex_type_id = 0x4abd9e69; 

		explicit MouseOverEngineItem() = default;
		explicit MouseOverEngineItem([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Valid {};
		uint64_t NodeId {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> WorldPosition {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> WorldNormal {};
		int32_t SubsetIndex {};
		int32_t TriangleIndex {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MouseOverEngineItem>;
	};
} // namespace rivet::ddl::generated

// clang-format on
