// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x28fee0a4.hpp>
#include <rivet/ddl/generated/PickupItemPrius.hpp> 

namespace rivet::ddl::generated {
	struct HeroPickupAnimOverrideData; 

	struct RIVET_DDL_SHARED GamePickupItemPrius : PickupItemPrius {
		constexpr static std::string_view type_name = "GamePickupItemPrius";
		constexpr static rivet::rivet_type_id type_id = 0x6b62c321;

		constexpr static std::string_view CameraActor_type_name = "CameraActor";
		constexpr static rivet::rivet_type_id CameraActor_type_id = 0xdfa62471;
		constexpr static std::string_view OptSceneLocVol_type_name = "OptSceneLocVol";
		constexpr static rivet::rivet_type_id OptSceneLocVol_type_id = 0x91be1eba;
		constexpr static std::string_view PickupAnimOverrides_type_name = "PickupAnimOverrides";
		constexpr static rivet::rivet_type_id PickupAnimOverrides_type_id = 0xb7cea6d3;
		constexpr static std::string_view Boots_type_name = "Boots";
		constexpr static rivet::rivet_type_id Boots_type_id = 0x9e12e8cd; 

		explicit GamePickupItemPrius() = default;
		explicit GamePickupItemPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint64_t CameraActor {};
		uint64_t OptSceneLocVol {};
		std::vector<std::shared_ptr<rivet::ddl::generated::HeroPickupAnimOverrideData>> PickupAnimOverrides {};
		rivet::ddl::generated::x28fee0a4 Boots {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GamePickupItemPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
