// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MaterialConstantJointTransformPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MaterialConstantJointTransformPrius";
		constexpr static rivet::rivet_type_id type_id = 0x3271cc31;

		constexpr static std::string_view JointName_type_name = "JointName";
		constexpr static rivet::rivet_type_id JointName_type_id = 0x5ba51db8;
		constexpr static std::string_view UseModelSpace_type_name = "UseModelSpace";
		constexpr static rivet::rivet_type_id UseModelSpace_type_id = 0xd197db9a;
		constexpr static std::string_view XAxisConstantName_type_name = "XAxisConstantName";
		constexpr static rivet::rivet_type_id XAxisConstantName_type_id = 0x8e976e2;
		constexpr static std::string_view YAxisConstantName_type_name = "YAxisConstantName";
		constexpr static rivet::rivet_type_id YAxisConstantName_type_id = 0x8f4fbda1;
		constexpr static std::string_view ZAxisConstantName_type_name = "ZAxisConstantName";
		constexpr static rivet::rivet_type_id ZAxisConstantName_type_id = 0xdcd5e625;
		constexpr static std::string_view PositionConstantName_type_name = "PositionConstantName";
		constexpr static rivet::rivet_type_id PositionConstantName_type_id = 0x899772af;
		constexpr static std::string_view MaterialMappingName_type_name = "MaterialMappingName";
		constexpr static rivet::rivet_type_id MaterialMappingName_type_id = 0x981e6927; 

		explicit MaterialConstantJointTransformPrius() = default;
		explicit MaterialConstantJointTransformPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view JointName {};
		bool UseModelSpace {};
		std::string_view XAxisConstantName {};
		std::string_view YAxisConstantName {};
		std::string_view ZAxisConstantName {};
		std::string_view PositionConstantName {};
		std::string_view MaterialMappingName {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MaterialConstantJointTransformPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
