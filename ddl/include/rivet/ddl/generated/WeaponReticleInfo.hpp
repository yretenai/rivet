// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED WeaponReticleInfo : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "WeaponReticleInfo";
		constexpr static rivet::rivet_type_id type_id = 0xd50e0968;

		constexpr static std::string_view SpreadScale_type_name = "SpreadScale";
		constexpr static rivet::rivet_type_id SpreadScale_type_id = 0x648de351;
		constexpr static std::string_view SpreadReturn_type_name = "SpreadReturn";
		constexpr static rivet::rivet_type_id SpreadReturn_type_id = 0x83ad3d1f;
		constexpr static std::string_view SpreadReturnDuration_type_name = "SpreadReturnDuration";
		constexpr static rivet::rivet_type_id SpreadReturnDuration_type_id = 0x25e01298;
		constexpr static std::string_view SpreadReturnDelay_type_name = "SpreadReturnDelay";
		constexpr static rivet::rivet_type_id SpreadReturnDelay_type_id = 0x94867d16; 

		explicit WeaponReticleInfo() = default;
		explicit WeaponReticleInfo([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float SpreadScale {};
		bool SpreadReturn {};
		float SpreadReturnDuration {};
		float SpreadReturnDelay {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<WeaponReticleInfo>;
	};
} // namespace rivet::ddl::generated

// clang-format on
