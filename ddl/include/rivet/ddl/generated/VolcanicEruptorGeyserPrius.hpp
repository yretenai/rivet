// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x8d7e44cf.hpp> 

namespace rivet::ddl::generated {
	struct GeyserShotSpawnData;
	struct GeyserFlowData;
	struct GeyserBurstData; 

	struct RIVET_DDL_SHARED VolcanicEruptorGeyserPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VolcanicEruptorGeyserPrius";
		constexpr static rivet::rivet_type_id type_id = 0x9d42f384;

		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view InitialDelay_type_name = "InitialDelay";
		constexpr static rivet::rivet_type_id InitialDelay_type_id = 0xa795c349;
		constexpr static std::string_view DamageType_type_name = "DamageType";
		constexpr static rivet::rivet_type_id DamageType_type_id = 0x840c154d;
		constexpr static std::string_view DebugDraw_type_name = "DebugDraw";
		constexpr static rivet::rivet_type_id DebugDraw_type_id = 0x6020521b;
		constexpr static std::string_view BurstData_type_name = "BurstData";
		constexpr static rivet::rivet_type_id BurstData_type_id = 0x2447c657;
		constexpr static std::string_view FlowData_type_name = "FlowData";
		constexpr static rivet::rivet_type_id FlowData_type_id = 0x5b64efa5;
		constexpr static std::string_view ShotSpawnData_type_name = "ShotSpawnData";
		constexpr static rivet::rivet_type_id ShotSpawnData_type_id = 0xf30d35d1; 

		explicit VolcanicEruptorGeyserPrius() = default;
		explicit VolcanicEruptorGeyserPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float Radius {};
		float InitialDelay {};
		rivet::ddl::generated::x8d7e44cf DamageType {};
		bool DebugDraw {};
		std::shared_ptr<rivet::ddl::generated::GeyserBurstData> BurstData {};
		std::shared_ptr<rivet::ddl::generated::GeyserFlowData> FlowData {};
		std::shared_ptr<rivet::ddl::generated::GeyserShotSpawnData> ShotSpawnData {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VolcanicEruptorGeyserPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
