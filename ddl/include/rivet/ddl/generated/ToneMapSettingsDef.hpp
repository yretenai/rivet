// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ToneMapSettingsDef : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "ToneMapSettingsDef";
		constexpr static rivet::rivet_type_id type_id = 0x3fa10636;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view LuminanceKeyValue_type_name = "LuminanceKeyValue";
		constexpr static rivet::rivet_type_id LuminanceKeyValue_type_id = 0xad15935f;
		constexpr static std::string_view ExposureBias_type_name = "ExposureBias";
		constexpr static rivet::rivet_type_id ExposureBias_type_id = 0x719ebadd;
		constexpr static std::string_view AdaptationStrength_type_name = "AdaptationStrength";
		constexpr static rivet::rivet_type_id AdaptationStrength_type_id = 0x8c85dc35;
		constexpr static std::string_view AdaptationStops_type_name = "AdaptationStops";
		constexpr static rivet::rivet_type_id AdaptationStops_type_id = 0x2ec0ad91;
		constexpr static std::string_view AdaptationAnchor_type_name = "AdaptationAnchor";
		constexpr static rivet::rivet_type_id AdaptationAnchor_type_id = 0xe3f74ff1;
		constexpr static std::string_view AdaptationRange_type_name = "AdaptationRange";
		constexpr static rivet::rivet_type_id AdaptationRange_type_id = 0x84f2787c;
		constexpr static std::string_view AdaptationBias_type_name = "AdaptationBias";
		constexpr static rivet::rivet_type_id AdaptationBias_type_id = 0x8f716ce3;
		constexpr static std::string_view AutoAdjustTime_type_name = "AutoAdjustTime";
		constexpr static rivet::rivet_type_id AutoAdjustTime_type_id = 0x3100df10; 

		explicit ToneMapSettingsDef() = default;
		explicit ToneMapSettingsDef([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		float LuminanceKeyValue {};
		float ExposureBias {};
		float AdaptationStrength {};
		float AdaptationStops {};
		float AdaptationAnchor {};
		float AdaptationRange {};
		float AdaptationBias {};
		float AutoAdjustTime {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ToneMapSettingsDef>;
	};
} // namespace rivet::ddl::generated

// clang-format on
