// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED LightingConditionBitSet : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LightingConditionBitSet";
		constexpr static rivet::rivet_type_id type_id = 0x5fea3405;

		constexpr static std::string_view Day_type_name = "Day";
		constexpr static rivet::rivet_type_id Day_type_id = 0xcff50059;
		constexpr static std::string_view Overcast_type_name = "Overcast";
		constexpr static rivet::rivet_type_id Overcast_type_id = 0xf1877eb3;
		constexpr static std::string_view Sunset_type_name = "Sunset";
		constexpr static rivet::rivet_type_id Sunset_type_id = 0xf19283ea;
		constexpr static std::string_view Night_type_name = "Night";
		constexpr static rivet::rivet_type_id Night_type_id = 0x889c356;
		constexpr static std::string_view Blackout_type_name = "Blackout";
		constexpr static rivet::rivet_type_id Blackout_type_id = 0xf64df6a5; 

		explicit LightingConditionBitSet() = default;
		explicit LightingConditionBitSet([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Day {};
		bool Overcast {};
		bool Sunset {};
		bool Night {};
		bool Blackout {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LightingConditionBitSet>;
	};
} // namespace rivet::ddl::generated

// clang-format on
