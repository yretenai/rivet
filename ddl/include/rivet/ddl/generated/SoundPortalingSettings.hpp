// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x652a90fd.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SoundPortalingSettings : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SoundPortalingSettings";
		constexpr static rivet::rivet_type_id type_id = 0x728f0796;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view MaxPortals_type_name = "MaxPortals";
		constexpr static rivet::rivet_type_id MaxPortals_type_id = 0xdc61d32b;
		constexpr static std::string_view MaxPortalsBetweenTwoVolumes_type_name = "MaxPortalsBetweenTwoVolumes";
		constexpr static rivet::rivet_type_id MaxPortalsBetweenTwoVolumes_type_id = 0x3e992696;
		constexpr static std::string_view MaxPortaledPositionsPerSource_type_name = "MaxPortaledPositionsPerSource";
		constexpr static rivet::rivet_type_id MaxPortaledPositionsPerSource_type_id = 0xd92a4525;
		constexpr static std::string_view MaxFadingPositionsPerSource_type_name = "MaxFadingPositionsPerSource";
		constexpr static rivet::rivet_type_id MaxFadingPositionsPerSource_type_id = 0x18c3da0e;
		constexpr static std::string_view MaxVolumes_type_name = "MaxVolumes";
		constexpr static rivet::rivet_type_id MaxVolumes_type_id = 0x5eaba;
		constexpr static std::string_view PortalInterpolationSpeed_type_name = "PortalInterpolationSpeed";
		constexpr static rivet::rivet_type_id PortalInterpolationSpeed_type_id = 0x1b817a67;
		constexpr static std::string_view PortalInterpolationMode_type_name = "PortalInterpolationMode";
		constexpr static rivet::rivet_type_id PortalInterpolationMode_type_id = 0x3e78e991;
		constexpr static std::string_view PortalRTPC_type_name = "PortalRTPC";
		constexpr static rivet::rivet_type_id PortalRTPC_type_id = 0x7bc8d5ff; 

		explicit SoundPortalingSettings() = default;
		explicit SoundPortalingSettings([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		uint8_t MaxPortals {};
		uint8_t MaxPortalsBetweenTwoVolumes {};
		uint8_t MaxPortaledPositionsPerSource {};
		uint8_t MaxFadingPositionsPerSource {};
		uint32_t MaxVolumes {};
		float PortalInterpolationSpeed {};
		rivet::ddl::generated::x652a90fd PortalInterpolationMode {};
		std::string_view PortalRTPC {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SoundPortalingSettings>;
	};
} // namespace rivet::ddl::generated

// clang-format on
