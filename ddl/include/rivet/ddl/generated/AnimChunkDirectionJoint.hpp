// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x302e143f.hpp>
#include <rivet/ddl/generated/AnimChunkDirection.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED AnimChunkDirectionJoint : AnimChunkDirection {
		constexpr static std::string_view type_name = "AnimChunkDirectionJoint";
		constexpr static rivet::rivet_type_id type_id = 0xa44c8427;

		constexpr static std::string_view JointName_type_name = "JointName";
		constexpr static rivet::rivet_type_id JointName_type_id = 0x5ba51db8;
		constexpr static std::string_view Axis_type_name = "Axis";
		constexpr static rivet::rivet_type_id Axis_type_id = 0xb59f464a;
		constexpr static std::string_view MirrorAxis_type_name = "MirrorAxis";
		constexpr static rivet::rivet_type_id MirrorAxis_type_id = 0x72e2167;
		constexpr static std::string_view HalfConeAngle_type_name = "HalfConeAngle";
		constexpr static rivet::rivet_type_id HalfConeAngle_type_id = 0x3b3b441f; 

		explicit AnimChunkDirectionJoint() = default;
		explicit AnimChunkDirectionJoint([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view JointName {};
		rivet::ddl::generated::x302e143f Axis {};
		bool MirrorAxis {};
		float HalfConeAngle {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<AnimChunkDirectionJoint>;
	};
} // namespace rivet::ddl::generated

// clang-format on
