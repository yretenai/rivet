// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED FloatingMotionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "FloatingMotionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x51917873;

		constexpr static std::string_view Enabled_type_name = "Enabled";
		constexpr static rivet::rivet_type_id Enabled_type_id = 0x5113d8bc;
		constexpr static std::string_view RockFrequency_type_name = "RockFrequency";
		constexpr static rivet::rivet_type_id RockFrequency_type_id = 0x12d5bf01;
		constexpr static std::string_view RockAmplitude_type_name = "RockAmplitude";
		constexpr static rivet::rivet_type_id RockAmplitude_type_id = 0x5f079f03;
		constexpr static std::string_view RockFrequencyTurning_type_name = "RockFrequencyTurning";
		constexpr static rivet::rivet_type_id RockFrequencyTurning_type_id = 0x4ddee51d;
		constexpr static std::string_view RockAmplitudeTurning_type_name = "RockAmplitudeTurning";
		constexpr static rivet::rivet_type_id RockAmplitudeTurning_type_id = 0x47a65ddb;
		constexpr static std::string_view RollFrequency_type_name = "RollFrequency";
		constexpr static rivet::rivet_type_id RollFrequency_type_id = 0x63f150be;
		constexpr static std::string_view RollAmplitude_type_name = "RollAmplitude";
		constexpr static rivet::rivet_type_id RollAmplitude_type_id = 0x2e2370bc;
		constexpr static std::string_view RollFrequencyTurning_type_name = "RollFrequencyTurning";
		constexpr static rivet::rivet_type_id RollFrequencyTurning_type_id = 0x9b333d3e;
		constexpr static std::string_view RollAmplitudeTurning_type_name = "RollAmplitudeTurning";
		constexpr static rivet::rivet_type_id RollAmplitudeTurning_type_id = 0x914b85f8;
		constexpr static std::string_view BankFactor_type_name = "BankFactor";
		constexpr static rivet::rivet_type_id BankFactor_type_id = 0xb13095e6;
		constexpr static std::string_view BankAngleMax_type_name = "BankAngleMax";
		constexpr static rivet::rivet_type_id BankAngleMax_type_id = 0xdd7f8415;
		constexpr static std::string_view SmoothTurnRate_type_name = "SmoothTurnRate";
		constexpr static rivet::rivet_type_id SmoothTurnRate_type_id = 0x8c8f1b49;
		constexpr static std::string_view SmoothTurnInertia_type_name = "SmoothTurnInertia";
		constexpr static rivet::rivet_type_id SmoothTurnInertia_type_id = 0x72c909b1;
		constexpr static std::string_view TweakSortBias_type_name = "TweakSortBias";
		constexpr static rivet::rivet_type_id TweakSortBias_type_id = 0xf41ca8a6;
		constexpr static std::string_view SmoothTurning_type_name = "SmoothTurning";
		constexpr static rivet::rivet_type_id SmoothTurning_type_id = 0x777fed5b;
		constexpr static std::string_view UpdateAsync_type_name = "UpdateAsync";
		constexpr static rivet::rivet_type_id UpdateAsync_type_id = 0xaa4bdadd; 

		explicit FloatingMotionPrius() = default;
		explicit FloatingMotionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool Enabled {};
		float RockFrequency {};
		float RockAmplitude {};
		float RockFrequencyTurning {};
		float RockAmplitudeTurning {};
		float RollFrequency {};
		float RollAmplitude {};
		float RollFrequencyTurning {};
		float RollAmplitudeTurning {};
		float BankFactor {};
		float BankAngleMax {};
		float SmoothTurnRate {};
		float SmoothTurnInertia {};
		bool TweakSortBias {};
		bool SmoothTurning {};
		bool UpdateAsync {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<FloatingMotionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
