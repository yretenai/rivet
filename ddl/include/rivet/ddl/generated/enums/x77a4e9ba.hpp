// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <string_view>
#include <array>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_keywords.hpp>

namespace rivet::ddl::generated {
	constexpr const static std::string_view x77a4e9ba_type_name = "x77a4e9ba";
	constexpr const static rivet::rivet_type_id x77a4e9ba_type_id = 0x77a4e9ba;

	constexpr const static std::array<std::string_view, 17> x77a4e9ba_values = {
		"kEmitter00",
		"kEmitter01",
		"kEmitter02",
		"kEmitter03",
		"kEmitter04",
		"kEmitter05",
		"kEmitter06",
		"kEmitter07",
		"kEmitter08",
		"kEmitter09",
		"kEmitter10",
		"kEmitter11",
		"kEmitter12",
		"kEmitter13",
		"kEmitter14",
		"kEmitter15",
		"kNone", 
	};

	enum class x77a4e9ba : uint64_t {
		Emitter_0,
		Emitter_1,
		Emitter_2,
		Emitter_3,
		Emitter_4,
		Emitter_5,
		Emitter_6,
		Emitter_7,
		Emitter_8,
		Emitter_9,
		Emitter_10,
		Emitter_11,
		Emitter_12,
		Emitter_13,
		Emitter_14,
		Emitter_15,
		None, 
	};
} // namespace rivet::ddl::generated

// clang-format on
