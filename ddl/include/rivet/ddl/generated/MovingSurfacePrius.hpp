// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x9b6c99b2.hpp>
#include <rivet/ddl/generated/enums/xf41a4c2.hpp>
#include <rivet/ddl/generated/enums/x77402cb9.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED MovingSurfacePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "MovingSurfacePrius";
		constexpr static rivet::rivet_type_id type_id = 0x2839c4ea;

		constexpr static std::string_view MotionStyle_type_name = "MotionStyle";
		constexpr static rivet::rivet_type_id MotionStyle_type_id = 0x44427fe9;
		constexpr static std::string_view ApplyStyle_type_name = "ApplyStyle";
		constexpr static rivet::rivet_type_id ApplyStyle_type_id = 0xe0f11af;
		constexpr static std::string_view CameraStyle_type_name = "CameraStyle";
		constexpr static rivet::rivet_type_id CameraStyle_type_id = 0xa86ecae2;
		constexpr static std::string_view ReferenceJoint_type_name = "ReferenceJoint";
		constexpr static rivet::rivet_type_id ReferenceJoint_type_id = 0x248a2a1c;
		constexpr static std::string_view UpdateRiderGravity_type_name = "UpdateRiderGravity";
		constexpr static rivet::rivet_type_id UpdateRiderGravity_type_id = 0xab4308c3;
		constexpr static std::string_view NavDataZoneFile_type_name = "NavDataZoneFile";
		constexpr static rivet::rivet_type_id NavDataZoneFile_type_id = 0xb1ee35af;
		constexpr static std::string_view SoundEmitterIDs_type_name = "SoundEmitterIDs";
		constexpr static rivet::rivet_type_id SoundEmitterIDs_type_id = 0xbfdcebd1; 

		explicit MovingSurfacePrius() = default;
		explicit MovingSurfacePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x77402cb9 MotionStyle {};
		rivet::ddl::generated::xf41a4c2 ApplyStyle {};
		rivet::ddl::generated::x9b6c99b2 CameraStyle {};
		std::string_view ReferenceJoint {};
		bool UpdateRiderGravity {};
		std::string_view NavDataZoneFile {};
		std::vector<uint64_t> SoundEmitterIDs {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<MovingSurfacePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
