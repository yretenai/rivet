// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x7e4a5355.hpp>
#include <rivet/ddl/generated/enums/x86f6b8ca.hpp>
#include <rivet/ddl/generated/enums/xb8c27e2a.hpp>
#include <rivet/ddl/generated/enums/x8492ce7f.hpp> 

namespace rivet::ddl::generated {
	struct DynamicInstanceItem;
	struct DDLVector2;
	struct DDLVector3; 

	struct RIVET_DDL_SHARED SplineToModelPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SplineToModelPrius";
		constexpr static rivet::rivet_type_id type_id = 0xbd096192;

		constexpr static std::string_view CreatePrefab_type_name = "CreatePrefab";
		constexpr static rivet::rivet_type_id CreatePrefab_type_id = 0xdcff5cb7;
		constexpr static std::string_view CurveFidelity_type_name = "CurveFidelity";
		constexpr static rivet::rivet_type_id CurveFidelity_type_id = 0x13278436;
		constexpr static std::string_view CrossSection_type_name = "CrossSection";
		constexpr static rivet::rivet_type_id CrossSection_type_id = 0xf56601b6;
		constexpr static std::string_view Model_type_name = "Model";
		constexpr static rivet::rivet_type_id Model_type_id = 0xcec6be18;
		constexpr static std::string_view PreRotation_type_name = "PreRotation";
		constexpr static rivet::rivet_type_id PreRotation_type_id = 0x49190644;
		constexpr static std::string_view PreTranslate_type_name = "PreTranslate";
		constexpr static rivet::rivet_type_id PreTranslate_type_id = 0x2379ae67;
		constexpr static std::string_view CurveProfile_type_name = "CurveProfile";
		constexpr static rivet::rivet_type_id CurveProfile_type_id = 0x526ab36e;
		constexpr static std::string_view Width_type_name = "Width";
		constexpr static rivet::rivet_type_id Width_type_id = 0x954989ee;
		constexpr static std::string_view Height_type_name = "Height";
		constexpr static rivet::rivet_type_id Height_type_id = 0xcb35ab68;
		constexpr static std::string_view Scale_type_name = "Scale";
		constexpr static rivet::rivet_type_id Scale_type_id = 0xf515e945;
		constexpr static std::string_view Taper_type_name = "Taper";
		constexpr static rivet::rivet_type_id Taper_type_id = 0xa2c90a17;
		constexpr static std::string_view Placement_type_name = "Placement";
		constexpr static rivet::rivet_type_id Placement_type_id = 0xca26ea02;
		constexpr static std::string_view Offset_type_name = "Offset";
		constexpr static rivet::rivet_type_id Offset_type_id = 0x677284b7;
		constexpr static std::string_view BankScale_type_name = "BankScale";
		constexpr static rivet::rivet_type_id BankScale_type_id = 0x583fb719;
		constexpr static std::string_view EndCap_type_name = "EndCap";
		constexpr static rivet::rivet_type_id EndCap_type_id = 0x1bfac016;
		constexpr static std::string_view SurfaceNoise_type_name = "SurfaceNoise";
		constexpr static rivet::rivet_type_id SurfaceNoise_type_id = 0xbd53d855;
		constexpr static std::string_view ReverseFaces_type_name = "ReverseFaces";
		constexpr static rivet::rivet_type_id ReverseFaces_type_id = 0x18f8dfea;
		constexpr static std::string_view VertexColor_type_name = "VertexColor";
		constexpr static rivet::rivet_type_id VertexColor_type_id = 0x6e07bf94;
		constexpr static std::string_view VertexAlpha_type_name = "VertexAlpha";
		constexpr static rivet::rivet_type_id VertexAlpha_type_id = 0xd8b1ce17;
		constexpr static std::string_view VertexSpacing_type_name = "VertexSpacing";
		constexpr static rivet::rivet_type_id VertexSpacing_type_id = 0x513026ce;
		constexpr static std::string_view ReverseU_type_name = "ReverseU";
		constexpr static rivet::rivet_type_id ReverseU_type_id = 0xb07b05d0;
		constexpr static std::string_view ReverseV_type_name = "ReverseV";
		constexpr static rivet::rivet_type_id ReverseV_type_id = 0x2972546a;
		constexpr static std::string_view UVTilingDistance_type_name = "UVTilingDistance";
		constexpr static rivet::rivet_type_id UVTilingDistance_type_id = 0x62050c4e;
		constexpr static std::string_view UVOffset_type_name = "UVOffset";
		constexpr static rivet::rivet_type_id UVOffset_type_id = 0xd4f24f25;
		constexpr static std::string_view UV2_type_name = "UV2";
		constexpr static rivet::rivet_type_id UV2_type_id = 0xa318f132;
		constexpr static std::string_view UV2TilingDistance_type_name = "UV2TilingDistance";
		constexpr static rivet::rivet_type_id UV2TilingDistance_type_id = 0x29d1a550;
		constexpr static std::string_view UV2Offset_type_name = "UV2Offset";
		constexpr static rivet::rivet_type_id UV2Offset_type_id = 0x9d112d47;
		constexpr static std::string_view Material_type_name = "Material";
		constexpr static rivet::rivet_type_id Material_type_id = 0x86bfc8e5;
		constexpr static std::string_view Collision_type_name = "Collision";
		constexpr static rivet::rivet_type_id Collision_type_id = 0xd930bcb2;
		constexpr static std::string_view LOD1_type_name = "LOD1";
		constexpr static rivet::rivet_type_id LOD1_type_id = 0xde2917d1;
		constexpr static std::string_view GeomLodDist1_type_name = "GeomLodDist1";
		constexpr static rivet::rivet_type_id GeomLodDist1_type_id = 0x7f1cf23f;
		constexpr static std::string_view GenActor_type_name = "GenActor";
		constexpr static rivet::rivet_type_id GenActor_type_id = 0xedeb4833;
		constexpr static std::string_view Actor_type_name = "Actor";
		constexpr static rivet::rivet_type_id Actor_type_id = 0x5d269a38;
		constexpr static std::string_view ADDINSTANCES_type_name = "ADDINSTANCES";
		constexpr static rivet::rivet_type_id ADDINSTANCES_type_id = 0x22801917;
		constexpr static std::string_view InstanceList_type_name = "InstanceList";
		constexpr static rivet::rivet_type_id InstanceList_type_id = 0x62f72364; 

		explicit SplineToModelPrius() = default;
		explicit SplineToModelPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool CreatePrefab {};
		float CurveFidelity {};
		rivet::ddl::generated::x8492ce7f CrossSection {};
		std::string_view Model {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> PreRotation {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> PreTranslate {};
		uint64_t CurveProfile {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Width {};
		float Height {};
		float Scale {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> Taper {};
		rivet::ddl::generated::xb8c27e2a Placement {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> Offset {};
		float BankScale {};
		rivet::ddl::generated::x86f6b8ca EndCap {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> SurfaceNoise {};
		bool ReverseFaces {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> VertexColor {};
		float VertexAlpha {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> VertexSpacing {};
		bool ReverseU {};
		bool ReverseV {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UVTilingDistance {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UVOffset {};
		bool UV2 {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UV2TilingDistance {};
		std::shared_ptr<rivet::ddl::generated::DDLVector2> UV2Offset {};
		std::string_view Material {};
		bool Collision {};
		bool LOD1 {};
		float GeomLodDist1 {};
		rivet::ddl::generated::x7e4a5355 GenActor {};
		std::string_view Actor {};
		std::string_view ADDINSTANCES {};
		std::vector<std::shared_ptr<rivet::ddl::generated::DynamicInstanceItem>> InstanceList {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SplineToModelPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
