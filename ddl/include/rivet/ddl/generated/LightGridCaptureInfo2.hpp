// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/LightingConditions.hpp> 

namespace rivet::ddl::generated {
	struct CaptureGridInfo2;
	struct CaptureJobInfo; 

	struct RIVET_DDL_SHARED LightGridCaptureInfo2 : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "LightGridCaptureInfo2";
		constexpr static rivet::rivet_type_id type_id = 0xae9af74a;

		constexpr static std::string_view JobName_type_name = "JobName";
		constexpr static rivet::rivet_type_id JobName_type_id = 0x7645386b;
		constexpr static std::string_view JobInfo_type_name = "JobInfo";
		constexpr static rivet::rivet_type_id JobInfo_type_id = 0xe3ef773a;
		constexpr static std::string_view GridInfo_type_name = "GridInfo";
		constexpr static rivet::rivet_type_id GridInfo_type_id = 0x374cc4d3;
		constexpr static std::string_view Zones_type_name = "Zones";
		constexpr static rivet::rivet_type_id Zones_type_id = 0x9c997da9;
		constexpr static std::string_view Atmosphere_type_name = "Atmosphere";
		constexpr static rivet::rivet_type_id Atmosphere_type_id = 0x79fd859a;
		constexpr static std::string_view ErrorLogPath_type_name = "ErrorLogPath";
		constexpr static rivet::rivet_type_id ErrorLogPath_type_id = 0xeace710a;
		constexpr static std::string_view ProgressLogPath_type_name = "ProgressLogPath";
		constexpr static rivet::rivet_type_id ProgressLogPath_type_id = 0xd644b55;
		constexpr static std::string_view ZoneLightbinRelativePath_type_name = "ZoneLightbinRelativePath";
		constexpr static rivet::rivet_type_id ZoneLightbinRelativePath_type_id = 0x5f32b191;
		constexpr static std::string_view CaptureDirectOnly_type_name = "CaptureDirectOnly";
		constexpr static rivet::rivet_type_id CaptureDirectOnly_type_id = 0x3fdfd590;
		constexpr static std::string_view HighQualityCapture_type_name = "HighQualityCapture";
		constexpr static rivet::rivet_type_id HighQualityCapture_type_id = 0x72fa9f42;
		constexpr static std::string_view LightingCondition_type_name = "LightingCondition";
		constexpr static rivet::rivet_type_id LightingCondition_type_id = 0xc3b54f69;
		constexpr static std::string_view BounceCount_type_name = "BounceCount";
		constexpr static rivet::rivet_type_id BounceCount_type_id = 0xd107f0ca; 

		explicit LightGridCaptureInfo2() = default;
		explicit LightGridCaptureInfo2([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view JobName {};
		std::shared_ptr<rivet::ddl::generated::CaptureJobInfo> JobInfo {};
		std::vector<std::shared_ptr<rivet::ddl::generated::CaptureGridInfo2>> GridInfo {};
		std::vector<std::string_view> Zones {};
		std::string_view Atmosphere {};
		std::string_view ErrorLogPath {};
		std::string_view ProgressLogPath {};
		std::string_view ZoneLightbinRelativePath {};
		bool CaptureDirectOnly {};
		bool HighQualityCapture {};
		rivet::ddl::generated::LightingConditions LightingCondition {};
		int32_t BounceCount {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<LightGridCaptureInfo2>;
	};
} // namespace rivet::ddl::generated

// clang-format on
