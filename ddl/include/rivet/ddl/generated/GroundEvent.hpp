// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10b3c4cf.hpp>
#include <rivet/ddl/generated/EventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED GroundEvent : EventBase {
		constexpr static std::string_view type_name = "GroundEvent";
		constexpr static rivet::rivet_type_id type_id = 0x7ec34fe2;

		constexpr static std::string_view LocatorName_type_name = "LocatorName";
		constexpr static rivet::rivet_type_id LocatorName_type_id = 0x5814524d;
		constexpr static std::string_view CheckDistance_type_name = "CheckDistance";
		constexpr static rivet::rivet_type_id CheckDistance_type_id = 0xe8c9b5bf;
		constexpr static std::string_view Label_type_name = "Label";
		constexpr static rivet::rivet_type_id Label_type_id = 0x17f49c29;
		constexpr static std::string_view DoCollision_type_name = "DoCollision";
		constexpr static rivet::rivet_type_id DoCollision_type_id = 0x198fefc3;
		constexpr static std::string_view Material_type_name = "Material";
		constexpr static rivet::rivet_type_id Material_type_id = 0x86bfc8e5;
		constexpr static std::string_view MaterialAsset_type_name = "MaterialAsset";
		constexpr static rivet::rivet_type_id MaterialAsset_type_id = 0xf55a8ae3;
		constexpr static std::string_view QueryHandle_type_name = "QueryHandle";
		constexpr static rivet::rivet_type_id QueryHandle_type_id = 0x6f08606a;
		constexpr static std::string_view InWater_type_name = "InWater";
		constexpr static rivet::rivet_type_id InWater_type_id = 0x4c861799;
		constexpr static std::string_view FoundCollision_type_name = "FoundCollision";
		constexpr static rivet::rivet_type_id FoundCollision_type_id = 0x870d19f4; 

		explicit GroundEvent() = default;
		explicit GroundEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view LocatorName {};
		float CheckDistance {};
		std::string_view Label {};
		bool DoCollision {};
		rivet::ddl::generated::x10b3c4cf Material {};
		uint64_t MaterialAsset {};
		uint64_t QueryHandle {};
		bool InWater {};
		bool FoundCollision {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<GroundEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
