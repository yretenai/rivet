// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x10228b34.hpp> 

namespace rivet::ddl::generated {
	struct DDLVector3; 

	struct RIVET_DDL_SHARED PointCameraAtTargetActionPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "PointCameraAtTargetActionPrius";
		constexpr static rivet::rivet_type_id type_id = 0x12cce23a;

		constexpr static std::string_view ActionType_type_name = "ActionType";
		constexpr static rivet::rivet_type_id ActionType_type_id = 0x874b2194;
		constexpr static std::string_view TurnAccel_type_name = "TurnAccel";
		constexpr static rivet::rivet_type_id TurnAccel_type_id = 0x3e1dc75b;
		constexpr static std::string_view TurnDecel_type_name = "TurnDecel";
		constexpr static rivet::rivet_type_id TurnDecel_type_id = 0xd39617f7;
		constexpr static std::string_view TurnSpeedMax_type_name = "TurnSpeedMax";
		constexpr static rivet::rivet_type_id TurnSpeedMax_type_id = 0xa66b2ab3;
		constexpr static std::string_view LocalOffset_type_name = "LocalOffset";
		constexpr static rivet::rivet_type_id LocalOffset_type_id = 0x46a4eea5;
		constexpr static std::string_view StopOnComplete_type_name = "StopOnComplete";
		constexpr static rivet::rivet_type_id StopOnComplete_type_id = 0xee67c262;
		constexpr static std::string_view StopOnInput_type_name = "StopOnInput";
		constexpr static rivet::rivet_type_id StopOnInput_type_id = 0xec5afb6; 

		explicit PointCameraAtTargetActionPrius() = default;
		explicit PointCameraAtTargetActionPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		rivet::ddl::generated::x10228b34 ActionType {};
		float TurnAccel {};
		float TurnDecel {};
		float TurnSpeedMax {};
		std::shared_ptr<rivet::ddl::generated::DDLVector3> LocalOffset {};
		bool StopOnComplete {};
		bool StopOnInput {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<PointCameraAtTargetActionPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
