// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/SplineTypes.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED SimpleMaterialSplinePrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "SimpleMaterialSplinePrius";
		constexpr static rivet::rivet_type_id type_id = 0xb8401af8;

		constexpr static std::string_view Material_type_name = "Material";
		constexpr static rivet::rivet_type_id Material_type_id = 0x86bfc8e5;
		constexpr static std::string_view Radius_type_name = "Radius";
		constexpr static rivet::rivet_type_id Radius_type_id = 0x504203d;
		constexpr static std::string_view TilingDistance_type_name = "TilingDistance";
		constexpr static rivet::rivet_type_id TilingDistance_type_id = 0x886d12af;
		constexpr static std::string_view SplineType_type_name = "SplineType";
		constexpr static rivet::rivet_type_id SplineType_type_id = 0x228fc6df;
		constexpr static std::string_view CanMove_type_name = "CanMove";
		constexpr static rivet::rivet_type_id CanMove_type_id = 0xad3ab8b7;
		constexpr static std::string_view SkipShadowCast_type_name = "SkipShadowCast";
		constexpr static rivet::rivet_type_id SkipShadowCast_type_id = 0x40b0e1ca; 

		explicit SimpleMaterialSplinePrius() = default;
		explicit SimpleMaterialSplinePrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view Material {};
		float Radius {};
		float TilingDistance {};
		rivet::ddl::generated::SplineTypes SplineType {};
		bool CanMove {};
		bool SkipShadowCast {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<SimpleMaterialSplinePrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
