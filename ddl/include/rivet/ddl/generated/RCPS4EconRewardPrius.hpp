// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x307af5f.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED RCPS4EconRewardPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "RCPS4EconRewardPrius";
		constexpr static rivet::rivet_type_id type_id = 0xd8dd0415;

		constexpr static std::string_view RelativeValue_type_name = "RelativeValue";
		constexpr static rivet::rivet_type_id RelativeValue_type_id = 0x9141cfed;
		constexpr static std::string_view MinRelativeValue_type_name = "MinRelativeValue";
		constexpr static rivet::rivet_type_id MinRelativeValue_type_id = 0xfc80d761;
		constexpr static std::string_view GrantsBolts_type_name = "GrantsBolts";
		constexpr static rivet::rivet_type_id GrantsBolts_type_id = 0xf404d85c;
		constexpr static std::string_view GrantsHeroXP_type_name = "GrantsHeroXP";
		constexpr static rivet::rivet_type_id GrantsHeroXP_type_id = 0x34ace260;
		constexpr static std::string_view GrantsWpnXP_type_name = "GrantsWpnXP";
		constexpr static rivet::rivet_type_id GrantsWpnXP_type_id = 0xccac49d5;
		constexpr static std::string_view GrantsRaritanium_type_name = "GrantsRaritanium";
		constexpr static rivet::rivet_type_id GrantsRaritanium_type_id = 0xad6d3538;
		constexpr static std::string_view CanGrantCard_type_name = "CanGrantCard";
		constexpr static rivet::rivet_type_id CanGrantCard_type_id = 0x696a428a;
		constexpr static std::string_view AutoCollect_type_name = "AutoCollect";
		constexpr static rivet::rivet_type_id AutoCollect_type_id = 0x353243cb;
		constexpr static std::string_view FixedReward_type_name = "FixedReward";
		constexpr static rivet::rivet_type_id FixedReward_type_id = 0x27fee2d4;
		constexpr static std::string_view NoSpawn_type_name = "NoSpawn";
		constexpr static rivet::rivet_type_id NoSpawn_type_id = 0x2940218f;
		constexpr static std::string_view OnlyDropForHeroKill_type_name = "OnlyDropForHeroKill";
		constexpr static rivet::rivet_type_id OnlyDropForHeroKill_type_id = 0x14a32e7;
		constexpr static std::string_view ScraperSkip_type_name = "ScraperSkip";
		constexpr static rivet::rivet_type_id ScraperSkip_type_id = 0x371cf8f2;
		constexpr static std::string_view SpawnLoc_type_name = "SpawnLoc";
		constexpr static rivet::rivet_type_id SpawnLoc_type_id = 0x4d69777f;
		constexpr static std::string_view GroovitronType_type_name = "GroovitronType";
		constexpr static rivet::rivet_type_id GroovitronType_type_id = 0xa3c33a22; 

		explicit RCPS4EconRewardPrius() = default;
		explicit RCPS4EconRewardPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float RelativeValue {};
		float MinRelativeValue {};
		bool GrantsBolts {};
		bool GrantsHeroXP {};
		bool GrantsWpnXP {};
		bool GrantsRaritanium {};
		bool CanGrantCard {};
		bool AutoCollect {};
		bool FixedReward {};
		bool NoSpawn {};
		bool OnlyDropForHeroKill {};
		bool ScraperSkip {};
		std::string_view SpawnLoc {};
		rivet::ddl::generated::x307af5f GroovitronType {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<RCPS4EconRewardPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
