// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/enums/x633f0e50.hpp>
#include <rivet/ddl/generated/enums/xc8d9a31c.hpp>
#include <rivet/ddl/generated/enums/x41c556d2.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED CameraOptions : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "CameraOptions";
		constexpr static rivet::rivet_type_id type_id = 0xdcbd71f8;

		constexpr static std::string_view RenderObjects_type_name = "RenderObjects";
		constexpr static rivet::rivet_type_id RenderObjects_type_id = 0x98b017e3;
		constexpr static std::string_view RenderCameras_type_name = "RenderCameras";
		constexpr static rivet::rivet_type_id RenderCameras_type_id = 0x41f5fc7a;
		constexpr static std::string_view RenderLights_type_name = "RenderLights";
		constexpr static rivet::rivet_type_id RenderLights_type_id = 0xf2264635;
		constexpr static std::string_view RenderLocators_type_name = "RenderLocators";
		constexpr static rivet::rivet_type_id RenderLocators_type_id = 0x9e6a08e;
		constexpr static std::string_view RenderModelOutlines_type_name = "RenderModelOutlines";
		constexpr static rivet::rivet_type_id RenderModelOutlines_type_id = 0x7db99b53;
		constexpr static std::string_view RenderLightShells_type_name = "RenderLightShells";
		constexpr static rivet::rivet_type_id RenderLightShells_type_id = 0x2e6b8198;
		constexpr static std::string_view ShellMode_type_name = "ShellMode";
		constexpr static rivet::rivet_type_id ShellMode_type_id = 0x4212ce1a;
		constexpr static std::string_view FilterType_type_name = "FilterType";
		constexpr static rivet::rivet_type_id FilterType_type_id = 0x5d653e06;
		constexpr static std::string_view Group_type_name = "Group";
		constexpr static rivet::rivet_type_id Group_type_id = 0x74938804;
		constexpr static std::string_view RenderInnerShells_type_name = "RenderInnerShells";
		constexpr static rivet::rivet_type_id RenderInnerShells_type_id = 0xe996a013;
		constexpr static std::string_view EnableLightsOnlyFromGroup_type_name = "EnableLightsOnlyFromGroup";
		constexpr static rivet::rivet_type_id EnableLightsOnlyFromGroup_type_id = 0xf7d11c0b;
		constexpr static std::string_view RenderLightsOnlyFromSelection_type_name = "RenderLightsOnlyFromSelection";
		constexpr static rivet::rivet_type_id RenderLightsOnlyFromSelection_type_id = 0x937a0185; 

		explicit CameraOptions() = default;
		explicit CameraOptions([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		bool RenderObjects {};
		bool RenderCameras {};
		bool RenderLights {};
		bool RenderLocators {};
		bool RenderModelOutlines {};
		bool RenderLightShells {};
		rivet::ddl::generated::x41c556d2 ShellMode {};
		rivet::ddl::generated::xc8d9a31c FilterType {};
		rivet::ddl::generated::x633f0e50 Group {};
		bool RenderInnerShells {};
		bool EnableLightsOnlyFromGroup {};
		bool RenderLightsOnlyFromSelection {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<CameraOptions>;
	};
} // namespace rivet::ddl::generated

// clang-format on
