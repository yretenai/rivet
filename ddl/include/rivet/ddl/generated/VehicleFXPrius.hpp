// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED VehicleFXPrius : rivet::structures::rivet_ddl_base {
		constexpr static std::string_view type_name = "VehicleFXPrius";
		constexpr static rivet::rivet_type_id type_id = 0x7db8f815;

		constexpr static std::string_view VehicleId_type_name = "VehicleId";
		constexpr static rivet::rivet_type_id VehicleId_type_id = 0x62feded2;
		constexpr static std::string_view HeadLightsRenderOverride_type_name = "HeadLightsRenderOverride";
		constexpr static rivet::rivet_type_id HeadLightsRenderOverride_type_id = 0x3eaebc9e;
		constexpr static std::string_view SoundComponentDestroyTimer_type_name = "SoundComponentDestroyTimer";
		constexpr static rivet::rivet_type_id SoundComponentDestroyTimer_type_id = 0x8920ae95;
		constexpr static std::string_view MaxHoverSpeed_type_name = "MaxHoverSpeed";
		constexpr static rivet::rivet_type_id MaxHoverSpeed_type_id = 0x7dedf5b7; 

		explicit VehicleFXPrius() = default;
		explicit VehicleFXPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		uint32_t VehicleId {};
		std::string_view HeadLightsRenderOverride {};
		float SoundComponentDestroyTimer {};
		float MaxHoverSpeed {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<VehicleFXPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
