// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/DamageModifierConditionBasePrius.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED DamageModifierConditionHealthThreshholdPrius : DamageModifierConditionBasePrius {
		constexpr const static std::string_view type_name = "DamageModifierConditionHealthThreshholdPrius";
		constexpr const static rivet::rivet_type_id type_id = 0x4e90fbf1;

		constexpr const static std::string_view HealthAmount_type_name = "HealthAmount";
		constexpr const static rivet::rivet_type_id HealthAmount_type_id = 0x9b788aa2;
		constexpr const static std::string_view CompareTotalHealth_type_name = "CompareTotalHealth";
		constexpr const static rivet::rivet_type_id CompareTotalHealth_type_id = 0x5f86dac3;
		constexpr const static std::string_view IsMax_type_name = "IsMax";
		constexpr const static rivet::rivet_type_id IsMax_type_id = 0x68a39ce9;
		constexpr const static std::string_view IsPercent_type_name = "IsPercent";
		constexpr const static rivet::rivet_type_id IsPercent_type_id = 0x858c4cf5;
		constexpr const static std::string_view TestDamagerHealth_type_name = "TestDamagerHealth";
		constexpr const static rivet::rivet_type_id TestDamagerHealth_type_id = 0xf8628ac0; 

		explicit DamageModifierConditionHealthThreshholdPrius() = default;
		explicit DamageModifierConditionHealthThreshholdPrius([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		float HealthAmount {};
		bool CompareTotalHealth {};
		bool IsMax {};
		bool IsPercent {};
		bool TestDamagerHealth {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<DamageModifierConditionHealthThreshholdPrius>;
	};
} // namespace rivet::ddl::generated

// clang-format on
