// <auto-generated>
// rivet project
// Copyright (c) 2023 <https://github.com/yretenai/rivet>
// SPDX-License-Identifier: MPL-2.0

#pragma once

// clang-format off

#include <cstdint>
#include <memory>
#include <string_view>
#include <vector>

#include <rivet/hash/type_id.hpp>
#include <rivet/rivet_array.hpp>
#include <rivet/rivet_keywords.hpp>
#include <rivet/structures/rivet_serialization.hpp>

#include <rivet/ddl/generated/UDSEventBase.hpp> 

namespace rivet::ddl::generated {
	struct RIVET_DDL_SHARED ActivityResumeEvent : UDSEventBase {
		constexpr static std::string_view type_name = "ActivityResumeEvent";
		constexpr static rivet::rivet_type_id type_id = 0x7ec42a8c;

		constexpr static std::string_view activityId_type_name = "activityId";
		constexpr static rivet::rivet_type_id activityId_type_id = 0x875ebf15;
		constexpr static std::string_view inProgressActivities_type_name = "inProgressActivities";
		constexpr static rivet::rivet_type_id inProgressActivities_type_id = 0x65276378;
		constexpr static std::string_view completedActivities_type_name = "completedActivities";
		constexpr static rivet::rivet_type_id completedActivities_type_id = 0x30805634; 

		explicit ActivityResumeEvent() = default;
		explicit ActivityResumeEvent([[maybe_unused]] const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized);

		std::string_view activityId {};
		std::vector<std::string_view> inProgressActivities {};
		std::vector<std::string_view> completedActivities {}; 

		[[nodiscard]] auto
		get_type_name() const noexcept -> std::string_view override;

		[[nodiscard]] static auto
		from_substruct(rivet_type_id incoming_type_id, const std::shared_ptr<const rivet::structures::rivet_serialized_object> &serialized) -> std::shared_ptr<ActivityResumeEvent>;
	};
} // namespace rivet::ddl::generated

// clang-format on
